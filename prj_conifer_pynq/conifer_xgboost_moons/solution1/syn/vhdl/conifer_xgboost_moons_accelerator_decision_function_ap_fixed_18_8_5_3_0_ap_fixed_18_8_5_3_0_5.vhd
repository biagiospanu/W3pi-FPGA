-- ==============================================================
-- Generated by Vitis HLS v2023.2
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity conifer_xgboost_moons_accelerator_decision_function_ap_fixed_18_8_5_3_0_ap_fixed_18_8_5_3_0_5 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    p_read1 : IN STD_LOGIC_VECTOR (17 downto 0);
    p_read2 : IN STD_LOGIC_VECTOR (17 downto 0);
    p_read3 : IN STD_LOGIC_VECTOR (17 downto 0);
    p_read4 : IN STD_LOGIC_VECTOR (17 downto 0);
    p_read5 : IN STD_LOGIC_VECTOR (17 downto 0);
    p_read6 : IN STD_LOGIC_VECTOR (17 downto 0);
    p_read7 : IN STD_LOGIC_VECTOR (17 downto 0);
    p_read8 : IN STD_LOGIC_VECTOR (17 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (11 downto 0);
    ap_ce : IN STD_LOGIC );
end;


architecture behav of conifer_xgboost_moons_accelerator_decision_function_ap_fixed_18_8_5_3_0_ap_fixed_18_8_5_3_0_5 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv18_2D80 : STD_LOGIC_VECTOR (17 downto 0) := "000010110110000000";
    constant ap_const_lv18_3080 : STD_LOGIC_VECTOR (17 downto 0) := "000011000010000000";
    constant ap_const_lv18_2680 : STD_LOGIC_VECTOR (17 downto 0) := "000010011010000000";
    constant ap_const_lv18_A80 : STD_LOGIC_VECTOR (17 downto 0) := "000000101010000000";
    constant ap_const_lv18_1980 : STD_LOGIC_VECTOR (17 downto 0) := "000001100110000000";
    constant ap_const_lv18_600 : STD_LOGIC_VECTOR (17 downto 0) := "000000011000000000";
    constant ap_const_lv18_1260 : STD_LOGIC_VECTOR (17 downto 0) := "000001001001100000";
    constant ap_const_lv18_1C80 : STD_LOGIC_VECTOR (17 downto 0) := "000001110010000000";
    constant ap_const_lv18_2580 : STD_LOGIC_VECTOR (17 downto 0) := "000010010110000000";
    constant ap_const_lv18_C000 : STD_LOGIC_VECTOR (17 downto 0) := "001100000000000000";
    constant ap_const_lv18_1C4 : STD_LOGIC_VECTOR (17 downto 0) := "000000000111000100";
    constant ap_const_lv18_16C : STD_LOGIC_VECTOR (17 downto 0) := "000000000101101100";
    constant ap_const_lv18_10D8C : STD_LOGIC_VECTOR (17 downto 0) := "010000110110001100";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv3_6 : STD_LOGIC_VECTOR (2 downto 0) := "110";
    constant ap_const_lv3_7 : STD_LOGIC_VECTOR (2 downto 0) := "111";
    constant ap_const_lv4_8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv4_9 : STD_LOGIC_VECTOR (3 downto 0) := "1001";
    constant ap_const_lv4_A : STD_LOGIC_VECTOR (3 downto 0) := "1010";
    constant ap_const_lv4_B : STD_LOGIC_VECTOR (3 downto 0) := "1011";
    constant ap_const_lv4_C : STD_LOGIC_VECTOR (3 downto 0) := "1100";
    constant ap_const_lv4_D : STD_LOGIC_VECTOR (3 downto 0) := "1101";
    constant ap_const_lv4_E : STD_LOGIC_VECTOR (3 downto 0) := "1110";
    constant ap_const_lv12_CC3 : STD_LOGIC_VECTOR (11 downto 0) := "110011000011";
    constant ap_const_lv12_E3A : STD_LOGIC_VECTOR (11 downto 0) := "111000111010";
    constant ap_const_lv12_268 : STD_LOGIC_VECTOR (11 downto 0) := "001001101000";
    constant ap_const_lv12_DB0 : STD_LOGIC_VECTOR (11 downto 0) := "110110110000";
    constant ap_const_lv12_E07 : STD_LOGIC_VECTOR (11 downto 0) := "111000000111";
    constant ap_const_lv12_E4B : STD_LOGIC_VECTOR (11 downto 0) := "111001001011";
    constant ap_const_lv12_79 : STD_LOGIC_VECTOR (11 downto 0) := "000001111001";
    constant ap_const_lv12_9D : STD_LOGIC_VECTOR (11 downto 0) := "000010011101";
    constant ap_const_lv12_DDB : STD_LOGIC_VECTOR (11 downto 0) := "110111011011";
    constant ap_const_lv12_32 : STD_LOGIC_VECTOR (11 downto 0) := "000000110010";
    constant ap_const_lv12_E3C : STD_LOGIC_VECTOR (11 downto 0) := "111000111100";
    constant ap_const_lv12_D90 : STD_LOGIC_VECTOR (11 downto 0) := "110110010000";
    constant ap_const_lv12_C3E : STD_LOGIC_VECTOR (11 downto 0) := "110000111110";
    constant ap_const_lv12_1C2 : STD_LOGIC_VECTOR (11 downto 0) := "000111000010";
    constant ap_const_lv12_A78 : STD_LOGIC_VECTOR (11 downto 0) := "101001111000";
    constant ap_const_lv12_0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";

attribute shreg_extract : string;
    signal icmp_ln4_fu_188_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_reg_669 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal icmp_ln4_reg_669_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_46_fu_194_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_46_reg_676 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_47_fu_200_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_47_reg_682 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_48_fu_206_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_48_reg_688 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_48_reg_688_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_49_fu_212_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_49_reg_694 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_49_reg_694_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_49_reg_694_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_50_fu_218_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_50_reg_700 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_50_reg_700_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_50_reg_700_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_51_fu_224_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_51_reg_706 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_52_fu_230_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_52_reg_712 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_52_reg_712_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_53_fu_236_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_53_reg_717 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_53_reg_717_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_54_fu_242_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_54_reg_722 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_54_reg_722_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_55_fu_248_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_55_reg_727 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_55_reg_727_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_55_reg_727_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_56_fu_254_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_56_reg_732 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_56_reg_732_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_56_reg_732_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_57_fu_260_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_57_reg_737 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_57_reg_737_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_57_reg_737_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_58_fu_276_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_58_reg_742 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_58_reg_742_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_58_reg_742_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_58_reg_742_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln107_fu_282_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln107_reg_747 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln105_fu_288_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln105_reg_753 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln107_fu_297_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln107_reg_759 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln107_reg_759_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln105_54_fu_302_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln105_54_reg_765 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln105_54_reg_765_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln105_55_fu_316_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln105_55_reg_772 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln105_58_fu_321_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln105_58_reg_777 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln107_5_fu_331_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln107_5_reg_785 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln107_5_reg_785_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln107_5_reg_785_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln120_37_fu_337_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln120_37_reg_791 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln105_57_fu_352_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln105_57_reg_797 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln120_41_fu_395_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln120_41_reg_803 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln120_43_fu_401_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln120_43_reg_808 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln120_47_fu_457_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln120_47_reg_816 : STD_LOGIC_VECTOR (2 downto 0);
    signal or_ln120_47_fu_519_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln120_47_reg_821 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln120_53_fu_565_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln120_53_reg_827 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal tmp_1_fu_266_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal xor_ln107_21_fu_292_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln107_22_fu_306_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln107_4_fu_311_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln107_26_fu_326_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln107_23_fu_343_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln105_60_fu_360_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln105_56_fu_348_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln105_59_fu_356_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln105_61_fu_365_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln120_39_fu_385_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln105_62_fu_370_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln120_fu_405_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln120_fu_375_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln120_fu_410_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln120_fu_414_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln120_43_fu_422_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal or_ln120_38_fu_380_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln120_9_fu_429_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln120_44_fu_433_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal or_ln120_40_fu_389_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln120_45_fu_441_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln120_46_fu_449_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal xor_ln107_24_fu_465_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln105_63_fu_475_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln107_25_fu_470_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln105_66_fu_489_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln105_64_fu_480_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln105_65_fu_485_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln120_45_fu_509_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln105_67_fu_494_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln120_42_fu_499_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln120_10_fu_523_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln120_48_fu_526_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal or_ln120_44_fu_504_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln120_49_fu_534_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln120_50_fu_541_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal or_ln120_46_fu_513_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln120_51_fu_549_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln120_52_fu_557_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal and_ln105_68_fu_573_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln120_48_fu_577_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_fu_593_p31 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_fu_593_p32 : STD_LOGIC_VECTOR (3 downto 0);
    signal or_ln120_49_fu_582_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_fu_593_p33 : STD_LOGIC_VECTOR (11 downto 0);
    signal select_ln120_55_fu_661_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_ce_reg : STD_LOGIC;
    signal p_read1_int_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal p_read2_int_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal p_read3_int_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal p_read4_int_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal p_read5_int_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal p_read6_int_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal p_read7_int_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal p_read8_int_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_return_int_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_fu_593_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_fu_593_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_fu_593_p5 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_fu_593_p7 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_fu_593_p9 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_fu_593_p11 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_fu_593_p13 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_fu_593_p15 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_fu_593_p17 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_fu_593_p19 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_fu_593_p21 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_fu_593_p23 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_fu_593_p25 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_fu_593_p27 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_fu_593_p29 : STD_LOGIC_VECTOR (3 downto 0);

    component conifer_xgboost_moons_accelerator_sparsemux_31_4_12_1_0 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        CASE0 : STD_LOGIC_VECTOR (3 downto 0);
        din0_WIDTH : INTEGER;
        CASE1 : STD_LOGIC_VECTOR (3 downto 0);
        din1_WIDTH : INTEGER;
        CASE2 : STD_LOGIC_VECTOR (3 downto 0);
        din2_WIDTH : INTEGER;
        CASE3 : STD_LOGIC_VECTOR (3 downto 0);
        din3_WIDTH : INTEGER;
        CASE4 : STD_LOGIC_VECTOR (3 downto 0);
        din4_WIDTH : INTEGER;
        CASE5 : STD_LOGIC_VECTOR (3 downto 0);
        din5_WIDTH : INTEGER;
        CASE6 : STD_LOGIC_VECTOR (3 downto 0);
        din6_WIDTH : INTEGER;
        CASE7 : STD_LOGIC_VECTOR (3 downto 0);
        din7_WIDTH : INTEGER;
        CASE8 : STD_LOGIC_VECTOR (3 downto 0);
        din8_WIDTH : INTEGER;
        CASE9 : STD_LOGIC_VECTOR (3 downto 0);
        din9_WIDTH : INTEGER;
        CASE10 : STD_LOGIC_VECTOR (3 downto 0);
        din10_WIDTH : INTEGER;
        CASE11 : STD_LOGIC_VECTOR (3 downto 0);
        din11_WIDTH : INTEGER;
        CASE12 : STD_LOGIC_VECTOR (3 downto 0);
        din12_WIDTH : INTEGER;
        CASE13 : STD_LOGIC_VECTOR (3 downto 0);
        din13_WIDTH : INTEGER;
        CASE14 : STD_LOGIC_VECTOR (3 downto 0);
        din14_WIDTH : INTEGER;
        def_WIDTH : INTEGER;
        sel_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (11 downto 0);
        din1 : IN STD_LOGIC_VECTOR (11 downto 0);
        din2 : IN STD_LOGIC_VECTOR (11 downto 0);
        din3 : IN STD_LOGIC_VECTOR (11 downto 0);
        din4 : IN STD_LOGIC_VECTOR (11 downto 0);
        din5 : IN STD_LOGIC_VECTOR (11 downto 0);
        din6 : IN STD_LOGIC_VECTOR (11 downto 0);
        din7 : IN STD_LOGIC_VECTOR (11 downto 0);
        din8 : IN STD_LOGIC_VECTOR (11 downto 0);
        din9 : IN STD_LOGIC_VECTOR (11 downto 0);
        din10 : IN STD_LOGIC_VECTOR (11 downto 0);
        din11 : IN STD_LOGIC_VECTOR (11 downto 0);
        din12 : IN STD_LOGIC_VECTOR (11 downto 0);
        din13 : IN STD_LOGIC_VECTOR (11 downto 0);
        din14 : IN STD_LOGIC_VECTOR (11 downto 0);
        def : IN STD_LOGIC_VECTOR (11 downto 0);
        sel : IN STD_LOGIC_VECTOR (3 downto 0);
        dout : OUT STD_LOGIC_VECTOR (11 downto 0) );
    end component;



begin
    sparsemux_31_4_12_1_0_U64 : component conifer_xgboost_moons_accelerator_sparsemux_31_4_12_1_0
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        CASE0 => "0000",
        din0_WIDTH => 12,
        CASE1 => "0001",
        din1_WIDTH => 12,
        CASE2 => "0010",
        din2_WIDTH => 12,
        CASE3 => "0011",
        din3_WIDTH => 12,
        CASE4 => "0100",
        din4_WIDTH => 12,
        CASE5 => "0101",
        din5_WIDTH => 12,
        CASE6 => "0110",
        din6_WIDTH => 12,
        CASE7 => "0111",
        din7_WIDTH => 12,
        CASE8 => "1000",
        din8_WIDTH => 12,
        CASE9 => "1001",
        din9_WIDTH => 12,
        CASE10 => "1010",
        din10_WIDTH => 12,
        CASE11 => "1011",
        din11_WIDTH => 12,
        CASE12 => "1100",
        din12_WIDTH => 12,
        CASE13 => "1101",
        din13_WIDTH => 12,
        CASE14 => "1110",
        din14_WIDTH => 12,
        def_WIDTH => 12,
        sel_WIDTH => 4,
        dout_WIDTH => 12)
    port map (
        din0 => ap_const_lv12_CC3,
        din1 => ap_const_lv12_E3A,
        din2 => ap_const_lv12_268,
        din3 => ap_const_lv12_DB0,
        din4 => ap_const_lv12_E07,
        din5 => ap_const_lv12_E4B,
        din6 => ap_const_lv12_79,
        din7 => ap_const_lv12_9D,
        din8 => ap_const_lv12_DDB,
        din9 => ap_const_lv12_32,
        din10 => ap_const_lv12_E3C,
        din11 => ap_const_lv12_D90,
        din12 => ap_const_lv12_C3E,
        din13 => ap_const_lv12_1C2,
        din14 => ap_const_lv12_A78,
        def => tmp_fu_593_p31,
        sel => tmp_fu_593_p32,
        dout => tmp_fu_593_p33);





    ap_ce_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            ap_ce_reg <= ap_ce;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce_reg))) then
                and_ln105_54_reg_765 <= and_ln105_54_fu_302_p2;
                and_ln105_54_reg_765_pp0_iter2_reg <= and_ln105_54_reg_765;
                and_ln105_55_reg_772 <= and_ln105_55_fu_316_p2;
                and_ln105_57_reg_797 <= and_ln105_57_fu_352_p2;
                and_ln105_58_reg_777 <= and_ln105_58_fu_321_p2;
                and_ln105_reg_753 <= and_ln105_fu_288_p2;
                and_ln107_5_reg_785 <= and_ln107_5_fu_331_p2;
                and_ln107_5_reg_785_pp0_iter2_reg <= and_ln107_5_reg_785;
                and_ln107_5_reg_785_pp0_iter3_reg <= and_ln107_5_reg_785_pp0_iter2_reg;
                and_ln107_reg_759 <= and_ln107_fu_297_p2;
                and_ln107_reg_759_pp0_iter2_reg <= and_ln107_reg_759;
                icmp_ln4_46_reg_676 <= icmp_ln4_46_fu_194_p2;
                icmp_ln4_47_reg_682 <= icmp_ln4_47_fu_200_p2;
                icmp_ln4_48_reg_688 <= icmp_ln4_48_fu_206_p2;
                icmp_ln4_48_reg_688_pp0_iter1_reg <= icmp_ln4_48_reg_688;
                icmp_ln4_49_reg_694 <= icmp_ln4_49_fu_212_p2;
                icmp_ln4_49_reg_694_pp0_iter1_reg <= icmp_ln4_49_reg_694;
                icmp_ln4_49_reg_694_pp0_iter2_reg <= icmp_ln4_49_reg_694_pp0_iter1_reg;
                icmp_ln4_50_reg_700 <= icmp_ln4_50_fu_218_p2;
                icmp_ln4_50_reg_700_pp0_iter1_reg <= icmp_ln4_50_reg_700;
                icmp_ln4_50_reg_700_pp0_iter2_reg <= icmp_ln4_50_reg_700_pp0_iter1_reg;
                icmp_ln4_51_reg_706 <= icmp_ln4_51_fu_224_p2;
                icmp_ln4_52_reg_712 <= icmp_ln4_52_fu_230_p2;
                icmp_ln4_52_reg_712_pp0_iter1_reg <= icmp_ln4_52_reg_712;
                icmp_ln4_53_reg_717 <= icmp_ln4_53_fu_236_p2;
                icmp_ln4_53_reg_717_pp0_iter1_reg <= icmp_ln4_53_reg_717;
                icmp_ln4_54_reg_722 <= icmp_ln4_54_fu_242_p2;
                icmp_ln4_54_reg_722_pp0_iter1_reg <= icmp_ln4_54_reg_722;
                icmp_ln4_55_reg_727 <= icmp_ln4_55_fu_248_p2;
                icmp_ln4_55_reg_727_pp0_iter1_reg <= icmp_ln4_55_reg_727;
                icmp_ln4_55_reg_727_pp0_iter2_reg <= icmp_ln4_55_reg_727_pp0_iter1_reg;
                icmp_ln4_56_reg_732 <= icmp_ln4_56_fu_254_p2;
                icmp_ln4_56_reg_732_pp0_iter1_reg <= icmp_ln4_56_reg_732;
                icmp_ln4_56_reg_732_pp0_iter2_reg <= icmp_ln4_56_reg_732_pp0_iter1_reg;
                icmp_ln4_57_reg_737 <= icmp_ln4_57_fu_260_p2;
                icmp_ln4_57_reg_737_pp0_iter1_reg <= icmp_ln4_57_reg_737;
                icmp_ln4_57_reg_737_pp0_iter2_reg <= icmp_ln4_57_reg_737_pp0_iter1_reg;
                icmp_ln4_58_reg_742 <= icmp_ln4_58_fu_276_p2;
                icmp_ln4_58_reg_742_pp0_iter1_reg <= icmp_ln4_58_reg_742;
                icmp_ln4_58_reg_742_pp0_iter2_reg <= icmp_ln4_58_reg_742_pp0_iter1_reg;
                icmp_ln4_58_reg_742_pp0_iter3_reg <= icmp_ln4_58_reg_742_pp0_iter2_reg;
                icmp_ln4_reg_669 <= icmp_ln4_fu_188_p2;
                icmp_ln4_reg_669_pp0_iter1_reg <= icmp_ln4_reg_669;
                or_ln120_37_reg_791 <= or_ln120_37_fu_337_p2;
                or_ln120_41_reg_803 <= or_ln120_41_fu_395_p2;
                or_ln120_43_reg_808 <= or_ln120_43_fu_401_p2;
                or_ln120_47_reg_821 <= or_ln120_47_fu_519_p2;
                select_ln120_47_reg_816 <= select_ln120_47_fu_457_p3;
                select_ln120_53_reg_827 <= select_ln120_53_fu_565_p3;
                xor_ln107_reg_747 <= xor_ln107_fu_282_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_ce_reg)) then
                ap_return_int_reg <= select_ln120_55_fu_661_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_ce)) then
                p_read1_int_reg <= p_read1;
                p_read2_int_reg <= p_read2;
                p_read3_int_reg <= p_read3;
                p_read4_int_reg <= p_read4;
                p_read5_int_reg <= p_read5;
                p_read6_int_reg <= p_read6;
                p_read7_int_reg <= p_read7;
                p_read8_int_reg <= p_read8;
            end if;
        end if;
    end process;
    and_ln105_54_fu_302_p2 <= (xor_ln107_reg_747 and icmp_ln4_47_reg_682);
    and_ln105_55_fu_316_p2 <= (icmp_ln4_48_reg_688 and and_ln105_fu_288_p2);
    and_ln105_56_fu_348_p2 <= (icmp_ln4_49_reg_694_pp0_iter1_reg and and_ln107_reg_759);
    and_ln105_57_fu_352_p2 <= (icmp_ln4_50_reg_700_pp0_iter1_reg and and_ln105_54_reg_765);
    and_ln105_58_fu_321_p2 <= (icmp_ln4_51_reg_706 and and_ln107_4_fu_311_p2);
    and_ln105_59_fu_356_p2 <= (icmp_ln4_52_reg_712_pp0_iter1_reg and and_ln105_55_reg_772);
    and_ln105_60_fu_360_p2 <= (xor_ln107_23_fu_343_p2 and icmp_ln4_53_reg_717_pp0_iter1_reg);
    and_ln105_61_fu_365_p2 <= (and_ln105_reg_753 and and_ln105_60_fu_360_p2);
    and_ln105_62_fu_370_p2 <= (icmp_ln4_54_reg_722_pp0_iter1_reg and and_ln105_56_fu_348_p2);
    and_ln105_63_fu_475_p2 <= (xor_ln107_24_fu_465_p2 and icmp_ln4_55_reg_727_pp0_iter2_reg);
    and_ln105_64_fu_480_p2 <= (and_ln107_reg_759_pp0_iter2_reg and and_ln105_63_fu_475_p2);
    and_ln105_65_fu_485_p2 <= (icmp_ln4_56_reg_732_pp0_iter2_reg and and_ln105_57_reg_797);
    and_ln105_66_fu_489_p2 <= (xor_ln107_25_fu_470_p2 and icmp_ln4_57_reg_737_pp0_iter2_reg);
    and_ln105_67_fu_494_p2 <= (and_ln105_66_fu_489_p2 and and_ln105_54_reg_765_pp0_iter2_reg);
    and_ln105_68_fu_573_p2 <= (icmp_ln4_58_reg_742_pp0_iter3_reg and and_ln107_5_reg_785_pp0_iter3_reg);
    and_ln105_fu_288_p2 <= (icmp_ln4_reg_669 and icmp_ln4_46_reg_676);
    and_ln107_4_fu_311_p2 <= (xor_ln107_reg_747 and xor_ln107_22_fu_306_p2);
    and_ln107_5_fu_331_p2 <= (xor_ln107_26_fu_326_p2 and and_ln107_4_fu_311_p2);
    and_ln107_fu_297_p2 <= (xor_ln107_21_fu_292_p2 and icmp_ln4_reg_669);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_return_assign_proc : process(select_ln120_55_fu_661_p3, ap_ce_reg, ap_return_int_reg)
    begin
        if ((ap_const_logic_0 = ap_ce_reg)) then 
            ap_return <= ap_return_int_reg;
        elsif ((ap_const_logic_1 = ap_ce_reg)) then 
            ap_return <= select_ln120_55_fu_661_p3;
        else 
            ap_return <= "XXXXXXXXXXXX";
        end if; 
    end process;

    icmp_ln4_46_fu_194_p2 <= "1" when (signed(p_read5_int_reg) < signed(ap_const_lv18_3080)) else "0";
    icmp_ln4_47_fu_200_p2 <= "1" when (signed(p_read1_int_reg) < signed(ap_const_lv18_2680)) else "0";
    icmp_ln4_48_fu_206_p2 <= "1" when (signed(p_read1_int_reg) < signed(ap_const_lv18_A80)) else "0";
    icmp_ln4_49_fu_212_p2 <= "1" when (signed(p_read1_int_reg) < signed(ap_const_lv18_1980)) else "0";
    icmp_ln4_50_fu_218_p2 <= "1" when (signed(p_read6_int_reg) < signed(ap_const_lv18_600)) else "0";
    icmp_ln4_51_fu_224_p2 <= "1" when (signed(p_read3_int_reg) < signed(ap_const_lv18_1260)) else "0";
    icmp_ln4_52_fu_230_p2 <= "1" when (signed(p_read2_int_reg) < signed(ap_const_lv18_1C80)) else "0";
    icmp_ln4_53_fu_236_p2 <= "1" when (signed(p_read5_int_reg) < signed(ap_const_lv18_2580)) else "0";
    icmp_ln4_54_fu_242_p2 <= "1" when (signed(p_read5_int_reg) < signed(ap_const_lv18_C000)) else "0";
    icmp_ln4_55_fu_248_p2 <= "1" when (signed(p_read7_int_reg) < signed(ap_const_lv18_1C4)) else "0";
    icmp_ln4_56_fu_254_p2 <= "1" when (signed(p_read8_int_reg) < signed(ap_const_lv18_16C)) else "0";
    icmp_ln4_57_fu_260_p2 <= "1" when (signed(p_read4_int_reg) < signed(ap_const_lv18_10D8C)) else "0";
    icmp_ln4_58_fu_276_p2 <= "1" when (signed(tmp_1_fu_266_p4) < signed(ap_const_lv7_1)) else "0";
    icmp_ln4_fu_188_p2 <= "1" when (signed(p_read2_int_reg) < signed(ap_const_lv18_2D80)) else "0";
    or_ln120_37_fu_337_p2 <= (and_ln105_58_fu_321_p2 or and_ln105_55_fu_316_p2);
    or_ln120_38_fu_380_p2 <= (or_ln120_37_reg_791 or and_ln105_61_fu_365_p2);
    or_ln120_39_fu_385_p2 <= (and_ln105_reg_753 or and_ln105_58_reg_777);
    or_ln120_40_fu_389_p2 <= (or_ln120_39_fu_385_p2 or and_ln105_62_fu_370_p2);
    or_ln120_41_fu_395_p2 <= (or_ln120_39_fu_385_p2 or and_ln105_56_fu_348_p2);
    or_ln120_42_fu_499_p2 <= (or_ln120_41_reg_803 or and_ln105_64_fu_480_p2);
    or_ln120_43_fu_401_p2 <= (icmp_ln4_reg_669_pp0_iter1_reg or and_ln105_58_reg_777);
    or_ln120_44_fu_504_p2 <= (or_ln120_43_reg_808 or and_ln105_65_fu_485_p2);
    or_ln120_45_fu_509_p2 <= (or_ln120_43_reg_808 or and_ln105_57_reg_797);
    or_ln120_46_fu_513_p2 <= (or_ln120_45_fu_509_p2 or and_ln105_67_fu_494_p2);
    or_ln120_47_fu_519_p2 <= (or_ln120_43_reg_808 or and_ln105_54_reg_765_pp0_iter2_reg);
    or_ln120_48_fu_577_p2 <= (or_ln120_47_reg_821 or and_ln105_68_fu_573_p2);
    or_ln120_49_fu_582_p2 <= (or_ln120_47_reg_821 or and_ln107_5_reg_785_pp0_iter3_reg);
    or_ln120_fu_375_p2 <= (and_ln105_59_fu_356_p2 or and_ln105_58_reg_777);
    select_ln120_43_fu_422_p3 <= 
        select_ln120_fu_414_p3 when (or_ln120_37_reg_791(0) = '1') else 
        ap_const_lv2_3;
    select_ln120_44_fu_433_p3 <= 
        zext_ln120_9_fu_429_p1 when (or_ln120_38_fu_380_p2(0) = '1') else 
        ap_const_lv3_4;
    select_ln120_45_fu_441_p3 <= 
        select_ln120_44_fu_433_p3 when (or_ln120_39_fu_385_p2(0) = '1') else 
        ap_const_lv3_5;
    select_ln120_46_fu_449_p3 <= 
        select_ln120_45_fu_441_p3 when (or_ln120_40_fu_389_p2(0) = '1') else 
        ap_const_lv3_6;
    select_ln120_47_fu_457_p3 <= 
        select_ln120_46_fu_449_p3 when (or_ln120_41_fu_395_p2(0) = '1') else 
        ap_const_lv3_7;
    select_ln120_48_fu_526_p3 <= 
        zext_ln120_10_fu_523_p1 when (or_ln120_42_fu_499_p2(0) = '1') else 
        ap_const_lv4_8;
    select_ln120_49_fu_534_p3 <= 
        select_ln120_48_fu_526_p3 when (or_ln120_43_reg_808(0) = '1') else 
        ap_const_lv4_9;
    select_ln120_50_fu_541_p3 <= 
        select_ln120_49_fu_534_p3 when (or_ln120_44_fu_504_p2(0) = '1') else 
        ap_const_lv4_A;
    select_ln120_51_fu_549_p3 <= 
        select_ln120_50_fu_541_p3 when (or_ln120_45_fu_509_p2(0) = '1') else 
        ap_const_lv4_B;
    select_ln120_52_fu_557_p3 <= 
        select_ln120_51_fu_549_p3 when (or_ln120_46_fu_513_p2(0) = '1') else 
        ap_const_lv4_C;
    select_ln120_53_fu_565_p3 <= 
        select_ln120_52_fu_557_p3 when (or_ln120_47_fu_519_p2(0) = '1') else 
        ap_const_lv4_D;
    select_ln120_55_fu_661_p3 <= 
        tmp_fu_593_p33 when (or_ln120_49_fu_582_p2(0) = '1') else 
        ap_const_lv12_0;
    select_ln120_fu_414_p3 <= 
        zext_ln120_fu_410_p1 when (or_ln120_fu_375_p2(0) = '1') else 
        ap_const_lv2_2;
    tmp_1_fu_266_p4 <= p_read6_int_reg(17 downto 11);
    tmp_fu_593_p31 <= "XXXXXXXXXXXX";
    tmp_fu_593_p32 <= 
        select_ln120_53_reg_827 when (or_ln120_48_fu_577_p2(0) = '1') else 
        ap_const_lv4_E;
    xor_ln107_21_fu_292_p2 <= (icmp_ln4_46_reg_676 xor ap_const_lv1_1);
    xor_ln107_22_fu_306_p2 <= (icmp_ln4_47_reg_682 xor ap_const_lv1_1);
    xor_ln107_23_fu_343_p2 <= (icmp_ln4_48_reg_688_pp0_iter1_reg xor ap_const_lv1_1);
    xor_ln107_24_fu_465_p2 <= (icmp_ln4_49_reg_694_pp0_iter2_reg xor ap_const_lv1_1);
    xor_ln107_25_fu_470_p2 <= (icmp_ln4_50_reg_700_pp0_iter2_reg xor ap_const_lv1_1);
    xor_ln107_26_fu_326_p2 <= (icmp_ln4_51_reg_706 xor ap_const_lv1_1);
    xor_ln107_fu_282_p2 <= (icmp_ln4_fu_188_p2 xor ap_const_lv1_1);
    xor_ln120_fu_405_p2 <= (ap_const_lv1_1 xor and_ln105_58_reg_777);
    zext_ln120_10_fu_523_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln120_47_reg_816),4));
    zext_ln120_9_fu_429_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln120_43_fu_422_p3),3));
    zext_ln120_fu_410_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(xor_ln120_fu_405_p2),2));
end behav;
