-- ==============================================================
-- Generated by Vitis HLS v2023.2
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity conifer_xgboost_moons_accelerator_decision_function_ap_fixed_18_8_5_3_0_ap_fixed_18_8_5_3_0_4 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    p_read1 : IN STD_LOGIC_VECTOR (17 downto 0);
    p_read2 : IN STD_LOGIC_VECTOR (17 downto 0);
    p_read3 : IN STD_LOGIC_VECTOR (17 downto 0);
    p_read4 : IN STD_LOGIC_VECTOR (17 downto 0);
    p_read5 : IN STD_LOGIC_VECTOR (17 downto 0);
    p_read6 : IN STD_LOGIC_VECTOR (17 downto 0);
    p_read7 : IN STD_LOGIC_VECTOR (17 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (10 downto 0);
    ap_ce : IN STD_LOGIC );
end;


architecture behav of conifer_xgboost_moons_accelerator_decision_function_ap_fixed_18_8_5_3_0_ap_fixed_18_8_5_3_0_4 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv18_E21A : STD_LOGIC_VECTOR (17 downto 0) := "001110001000011010";
    constant ap_const_lv18_1C80 : STD_LOGIC_VECTOR (17 downto 0) := "000001110010000000";
    constant ap_const_lv18_3FD94 : STD_LOGIC_VECTOR (17 downto 0) := "111111110110010100";
    constant ap_const_lv18_1880 : STD_LOGIC_VECTOR (17 downto 0) := "000001100010000000";
    constant ap_const_lv18_9FA : STD_LOGIC_VECTOR (17 downto 0) := "000000100111111010";
    constant ap_const_lv18_DE00 : STD_LOGIC_VECTOR (17 downto 0) := "001101111000000000";
    constant ap_const_lv18_3FA00 : STD_LOGIC_VECTOR (17 downto 0) := "111111101000000000";
    constant ap_const_lv18_3780 : STD_LOGIC_VECTOR (17 downto 0) := "000011011110000000";
    constant ap_const_lv18_2D80 : STD_LOGIC_VECTOR (17 downto 0) := "000010110110000000";
    constant ap_const_lv18_7280 : STD_LOGIC_VECTOR (17 downto 0) := "000111001010000000";
    constant ap_const_lv18_3FE6C : STD_LOGIC_VECTOR (17 downto 0) := "111111111001101100";
    constant ap_const_lv18_3080 : STD_LOGIC_VECTOR (17 downto 0) := "000011000010000000";
    constant ap_const_lv18_16B4B : STD_LOGIC_VECTOR (17 downto 0) := "010110101101001011";
    constant ap_const_lv18_880 : STD_LOGIC_VECTOR (17 downto 0) := "000000100010000000";
    constant ap_const_lv18_16382 : STD_LOGIC_VECTOR (17 downto 0) := "010110001110000010";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv3_6 : STD_LOGIC_VECTOR (2 downto 0) := "110";
    constant ap_const_lv3_7 : STD_LOGIC_VECTOR (2 downto 0) := "111";
    constant ap_const_lv4_8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv4_9 : STD_LOGIC_VECTOR (3 downto 0) := "1001";
    constant ap_const_lv4_A : STD_LOGIC_VECTOR (3 downto 0) := "1010";
    constant ap_const_lv4_B : STD_LOGIC_VECTOR (3 downto 0) := "1011";
    constant ap_const_lv4_C : STD_LOGIC_VECTOR (3 downto 0) := "1100";
    constant ap_const_lv4_D : STD_LOGIC_VECTOR (3 downto 0) := "1101";
    constant ap_const_lv4_E : STD_LOGIC_VECTOR (3 downto 0) := "1110";
    constant ap_const_lv4_F : STD_LOGIC_VECTOR (3 downto 0) := "1111";
    constant ap_const_lv11_5CD : STD_LOGIC_VECTOR (10 downto 0) := "10111001101";
    constant ap_const_lv11_66F : STD_LOGIC_VECTOR (10 downto 0) := "11001101111";
    constant ap_const_lv11_648 : STD_LOGIC_VECTOR (10 downto 0) := "11001001000";
    constant ap_const_lv11_316 : STD_LOGIC_VECTOR (10 downto 0) := "01100010110";
    constant ap_const_lv11_5CE : STD_LOGIC_VECTOR (10 downto 0) := "10111001110";
    constant ap_const_lv11_7EC : STD_LOGIC_VECTOR (10 downto 0) := "11111101100";
    constant ap_const_lv11_5DB : STD_LOGIC_VECTOR (10 downto 0) := "10111011011";
    constant ap_const_lv11_798 : STD_LOGIC_VECTOR (10 downto 0) := "11110011000";
    constant ap_const_lv11_588 : STD_LOGIC_VECTOR (10 downto 0) := "10110001000";
    constant ap_const_lv11_B6 : STD_LOGIC_VECTOR (10 downto 0) := "00010110110";
    constant ap_const_lv11_13F : STD_LOGIC_VECTOR (10 downto 0) := "00100111111";
    constant ap_const_lv11_654 : STD_LOGIC_VECTOR (10 downto 0) := "11001010100";
    constant ap_const_lv11_7C4 : STD_LOGIC_VECTOR (10 downto 0) := "11111000100";
    constant ap_const_lv11_497 : STD_LOGIC_VECTOR (10 downto 0) := "10010010111";
    constant ap_const_lv11_E8 : STD_LOGIC_VECTOR (10 downto 0) := "00011101000";
    constant ap_const_lv11_6BD : STD_LOGIC_VECTOR (10 downto 0) := "11010111101";

attribute shreg_extract : string;
    signal icmp_ln4_fu_178_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_reg_651 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal icmp_ln4_reg_651_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_reg_651_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_52_fu_184_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_52_reg_662 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_53_fu_190_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_53_reg_668 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_54_fu_196_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_54_reg_674 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_55_fu_202_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_55_reg_680 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_55_reg_680_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_56_fu_208_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_56_reg_686 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_56_reg_686_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_56_reg_686_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_57_fu_214_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_57_reg_692 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_57_reg_692_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_57_reg_692_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_57_reg_692_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_58_fu_220_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_58_reg_698 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_58_reg_698_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_59_fu_226_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_59_reg_703 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_60_fu_232_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_60_reg_708 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_60_reg_708_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_61_fu_238_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_61_reg_713 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_61_reg_713_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_62_fu_244_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_62_reg_718 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_62_reg_718_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_62_reg_718_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_63_fu_250_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_63_reg_723 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_63_reg_723_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_63_reg_723_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_64_fu_256_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_64_reg_728 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_64_reg_728_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_64_reg_728_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_65_fu_262_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_65_reg_733 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_65_reg_733_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_65_reg_733_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_65_reg_733_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln105_fu_273_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln105_reg_738 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln107_fu_282_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln107_reg_745 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln105_47_fu_287_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln105_47_reg_750 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln105_47_reg_750_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln107_6_fu_297_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln107_6_reg_757 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln107_6_reg_757_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln107_6_reg_757_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln105_48_fu_303_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln105_48_reg_763 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln105_49_fu_313_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln105_49_reg_769 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln120_fu_329_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln120_reg_775 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln105_50_fu_340_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln105_50_reg_780 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln120_47_fu_377_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln120_47_reg_785 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln120_54_fu_445_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln120_54_reg_791 : STD_LOGIC_VECTOR (3 downto 0);
    signal or_ln120_51_fu_500_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln120_51_reg_796 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln120_60_fu_544_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln120_60_reg_801 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal xor_ln107_24_fu_277_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln107_fu_268_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln107_25_fu_292_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln107_26_fu_308_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln105_60_fu_318_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln105_53_fu_323_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln107_27_fu_335_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln105_61_fu_352_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln105_54_fu_348_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln120_44_fu_367_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln105_55_fu_357_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln105_52_fu_344_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln120_fu_382_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln120_fu_388_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln120_fu_392_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln120_49_fu_399_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln120_9_fu_406_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal or_ln120_43_fu_362_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln120_50_fu_410_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln120_51_fu_417_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal or_ln120_45_fu_371_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln120_52_fu_425_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln120_53_fu_433_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal zext_ln120_10_fu_441_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal xor_ln107_28_fu_452_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln105_62_fu_465_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln105_51_fu_457_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln105_56_fu_461_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln105_57_fu_470_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln120_49_fu_490_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln105_58_fu_475_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln120_46_fu_480_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln120_55_fu_506_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal or_ln120_48_fu_485_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln120_56_fu_513_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln120_57_fu_520_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal or_ln120_50_fu_494_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln120_58_fu_528_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln120_59_fu_536_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal xor_ln107_29_fu_552_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln105_63_fu_557_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln105_59_fu_562_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln120_52_fu_567_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal agg_result_fu_579_p33 : STD_LOGIC_VECTOR (10 downto 0);
    signal agg_result_fu_579_p34 : STD_LOGIC_VECTOR (3 downto 0);
    signal agg_result_fu_579_p35 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_ce_reg : STD_LOGIC;
    signal p_read1_int_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal p_read2_int_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal p_read3_int_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal p_read4_int_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal p_read5_int_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal p_read6_int_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal p_read7_int_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_return_int_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal agg_result_fu_579_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal agg_result_fu_579_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal agg_result_fu_579_p5 : STD_LOGIC_VECTOR (3 downto 0);
    signal agg_result_fu_579_p7 : STD_LOGIC_VECTOR (3 downto 0);
    signal agg_result_fu_579_p9 : STD_LOGIC_VECTOR (3 downto 0);
    signal agg_result_fu_579_p11 : STD_LOGIC_VECTOR (3 downto 0);
    signal agg_result_fu_579_p13 : STD_LOGIC_VECTOR (3 downto 0);
    signal agg_result_fu_579_p15 : STD_LOGIC_VECTOR (3 downto 0);
    signal agg_result_fu_579_p17 : STD_LOGIC_VECTOR (3 downto 0);
    signal agg_result_fu_579_p19 : STD_LOGIC_VECTOR (3 downto 0);
    signal agg_result_fu_579_p21 : STD_LOGIC_VECTOR (3 downto 0);
    signal agg_result_fu_579_p23 : STD_LOGIC_VECTOR (3 downto 0);
    signal agg_result_fu_579_p25 : STD_LOGIC_VECTOR (3 downto 0);
    signal agg_result_fu_579_p27 : STD_LOGIC_VECTOR (3 downto 0);
    signal agg_result_fu_579_p29 : STD_LOGIC_VECTOR (3 downto 0);
    signal agg_result_fu_579_p31 : STD_LOGIC_VECTOR (3 downto 0);

    component conifer_xgboost_moons_accelerator_sparsemux_33_4_11_1_0_x0 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        CASE0 : STD_LOGIC_VECTOR (3 downto 0);
        din0_WIDTH : INTEGER;
        CASE1 : STD_LOGIC_VECTOR (3 downto 0);
        din1_WIDTH : INTEGER;
        CASE2 : STD_LOGIC_VECTOR (3 downto 0);
        din2_WIDTH : INTEGER;
        CASE3 : STD_LOGIC_VECTOR (3 downto 0);
        din3_WIDTH : INTEGER;
        CASE4 : STD_LOGIC_VECTOR (3 downto 0);
        din4_WIDTH : INTEGER;
        CASE5 : STD_LOGIC_VECTOR (3 downto 0);
        din5_WIDTH : INTEGER;
        CASE6 : STD_LOGIC_VECTOR (3 downto 0);
        din6_WIDTH : INTEGER;
        CASE7 : STD_LOGIC_VECTOR (3 downto 0);
        din7_WIDTH : INTEGER;
        CASE8 : STD_LOGIC_VECTOR (3 downto 0);
        din8_WIDTH : INTEGER;
        CASE9 : STD_LOGIC_VECTOR (3 downto 0);
        din9_WIDTH : INTEGER;
        CASE10 : STD_LOGIC_VECTOR (3 downto 0);
        din10_WIDTH : INTEGER;
        CASE11 : STD_LOGIC_VECTOR (3 downto 0);
        din11_WIDTH : INTEGER;
        CASE12 : STD_LOGIC_VECTOR (3 downto 0);
        din12_WIDTH : INTEGER;
        CASE13 : STD_LOGIC_VECTOR (3 downto 0);
        din13_WIDTH : INTEGER;
        CASE14 : STD_LOGIC_VECTOR (3 downto 0);
        din14_WIDTH : INTEGER;
        CASE15 : STD_LOGIC_VECTOR (3 downto 0);
        din15_WIDTH : INTEGER;
        def_WIDTH : INTEGER;
        sel_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (10 downto 0);
        din1 : IN STD_LOGIC_VECTOR (10 downto 0);
        din2 : IN STD_LOGIC_VECTOR (10 downto 0);
        din3 : IN STD_LOGIC_VECTOR (10 downto 0);
        din4 : IN STD_LOGIC_VECTOR (10 downto 0);
        din5 : IN STD_LOGIC_VECTOR (10 downto 0);
        din6 : IN STD_LOGIC_VECTOR (10 downto 0);
        din7 : IN STD_LOGIC_VECTOR (10 downto 0);
        din8 : IN STD_LOGIC_VECTOR (10 downto 0);
        din9 : IN STD_LOGIC_VECTOR (10 downto 0);
        din10 : IN STD_LOGIC_VECTOR (10 downto 0);
        din11 : IN STD_LOGIC_VECTOR (10 downto 0);
        din12 : IN STD_LOGIC_VECTOR (10 downto 0);
        din13 : IN STD_LOGIC_VECTOR (10 downto 0);
        din14 : IN STD_LOGIC_VECTOR (10 downto 0);
        din15 : IN STD_LOGIC_VECTOR (10 downto 0);
        def : IN STD_LOGIC_VECTOR (10 downto 0);
        sel : IN STD_LOGIC_VECTOR (3 downto 0);
        dout : OUT STD_LOGIC_VECTOR (10 downto 0) );
    end component;



begin
    sparsemux_33_4_11_1_0_x0_U74 : component conifer_xgboost_moons_accelerator_sparsemux_33_4_11_1_0_x0
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        CASE0 => "0000",
        din0_WIDTH => 11,
        CASE1 => "0001",
        din1_WIDTH => 11,
        CASE2 => "0010",
        din2_WIDTH => 11,
        CASE3 => "0011",
        din3_WIDTH => 11,
        CASE4 => "0100",
        din4_WIDTH => 11,
        CASE5 => "0101",
        din5_WIDTH => 11,
        CASE6 => "0110",
        din6_WIDTH => 11,
        CASE7 => "0111",
        din7_WIDTH => 11,
        CASE8 => "1000",
        din8_WIDTH => 11,
        CASE9 => "1001",
        din9_WIDTH => 11,
        CASE10 => "1010",
        din10_WIDTH => 11,
        CASE11 => "1011",
        din11_WIDTH => 11,
        CASE12 => "1100",
        din12_WIDTH => 11,
        CASE13 => "1101",
        din13_WIDTH => 11,
        CASE14 => "1110",
        din14_WIDTH => 11,
        CASE15 => "1111",
        din15_WIDTH => 11,
        def_WIDTH => 11,
        sel_WIDTH => 4,
        dout_WIDTH => 11)
    port map (
        din0 => ap_const_lv11_5CD,
        din1 => ap_const_lv11_66F,
        din2 => ap_const_lv11_648,
        din3 => ap_const_lv11_316,
        din4 => ap_const_lv11_5CE,
        din5 => ap_const_lv11_7EC,
        din6 => ap_const_lv11_5DB,
        din7 => ap_const_lv11_798,
        din8 => ap_const_lv11_588,
        din9 => ap_const_lv11_B6,
        din10 => ap_const_lv11_13F,
        din11 => ap_const_lv11_654,
        din12 => ap_const_lv11_7C4,
        din13 => ap_const_lv11_497,
        din14 => ap_const_lv11_E8,
        din15 => ap_const_lv11_6BD,
        def => agg_result_fu_579_p33,
        sel => agg_result_fu_579_p34,
        dout => agg_result_fu_579_p35);





    ap_ce_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            ap_ce_reg <= ap_ce;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce_reg))) then
                and_ln105_47_reg_750 <= and_ln105_47_fu_287_p2;
                and_ln105_47_reg_750_pp0_iter2_reg <= and_ln105_47_reg_750;
                and_ln105_48_reg_763 <= and_ln105_48_fu_303_p2;
                and_ln105_49_reg_769 <= and_ln105_49_fu_313_p2;
                and_ln105_50_reg_780 <= and_ln105_50_fu_340_p2;
                and_ln105_reg_738 <= and_ln105_fu_273_p2;
                and_ln107_6_reg_757 <= and_ln107_6_fu_297_p2;
                and_ln107_6_reg_757_pp0_iter2_reg <= and_ln107_6_reg_757;
                and_ln107_6_reg_757_pp0_iter3_reg <= and_ln107_6_reg_757_pp0_iter2_reg;
                and_ln107_reg_745 <= and_ln107_fu_282_p2;
                icmp_ln4_52_reg_662 <= icmp_ln4_52_fu_184_p2;
                icmp_ln4_53_reg_668 <= icmp_ln4_53_fu_190_p2;
                icmp_ln4_54_reg_674 <= icmp_ln4_54_fu_196_p2;
                icmp_ln4_55_reg_680 <= icmp_ln4_55_fu_202_p2;
                icmp_ln4_55_reg_680_pp0_iter1_reg <= icmp_ln4_55_reg_680;
                icmp_ln4_56_reg_686 <= icmp_ln4_56_fu_208_p2;
                icmp_ln4_56_reg_686_pp0_iter1_reg <= icmp_ln4_56_reg_686;
                icmp_ln4_56_reg_686_pp0_iter2_reg <= icmp_ln4_56_reg_686_pp0_iter1_reg;
                icmp_ln4_57_reg_692 <= icmp_ln4_57_fu_214_p2;
                icmp_ln4_57_reg_692_pp0_iter1_reg <= icmp_ln4_57_reg_692;
                icmp_ln4_57_reg_692_pp0_iter2_reg <= icmp_ln4_57_reg_692_pp0_iter1_reg;
                icmp_ln4_57_reg_692_pp0_iter3_reg <= icmp_ln4_57_reg_692_pp0_iter2_reg;
                icmp_ln4_58_reg_698 <= icmp_ln4_58_fu_220_p2;
                icmp_ln4_58_reg_698_pp0_iter1_reg <= icmp_ln4_58_reg_698;
                icmp_ln4_59_reg_703 <= icmp_ln4_59_fu_226_p2;
                icmp_ln4_60_reg_708 <= icmp_ln4_60_fu_232_p2;
                icmp_ln4_60_reg_708_pp0_iter1_reg <= icmp_ln4_60_reg_708;
                icmp_ln4_61_reg_713 <= icmp_ln4_61_fu_238_p2;
                icmp_ln4_61_reg_713_pp0_iter1_reg <= icmp_ln4_61_reg_713;
                icmp_ln4_62_reg_718 <= icmp_ln4_62_fu_244_p2;
                icmp_ln4_62_reg_718_pp0_iter1_reg <= icmp_ln4_62_reg_718;
                icmp_ln4_62_reg_718_pp0_iter2_reg <= icmp_ln4_62_reg_718_pp0_iter1_reg;
                icmp_ln4_63_reg_723 <= icmp_ln4_63_fu_250_p2;
                icmp_ln4_63_reg_723_pp0_iter1_reg <= icmp_ln4_63_reg_723;
                icmp_ln4_63_reg_723_pp0_iter2_reg <= icmp_ln4_63_reg_723_pp0_iter1_reg;
                icmp_ln4_64_reg_728 <= icmp_ln4_64_fu_256_p2;
                icmp_ln4_64_reg_728_pp0_iter1_reg <= icmp_ln4_64_reg_728;
                icmp_ln4_64_reg_728_pp0_iter2_reg <= icmp_ln4_64_reg_728_pp0_iter1_reg;
                icmp_ln4_65_reg_733 <= icmp_ln4_65_fu_262_p2;
                icmp_ln4_65_reg_733_pp0_iter1_reg <= icmp_ln4_65_reg_733;
                icmp_ln4_65_reg_733_pp0_iter2_reg <= icmp_ln4_65_reg_733_pp0_iter1_reg;
                icmp_ln4_65_reg_733_pp0_iter3_reg <= icmp_ln4_65_reg_733_pp0_iter2_reg;
                icmp_ln4_reg_651 <= icmp_ln4_fu_178_p2;
                icmp_ln4_reg_651_pp0_iter1_reg <= icmp_ln4_reg_651;
                icmp_ln4_reg_651_pp0_iter2_reg <= icmp_ln4_reg_651_pp0_iter1_reg;
                or_ln120_47_reg_785 <= or_ln120_47_fu_377_p2;
                or_ln120_51_reg_796 <= or_ln120_51_fu_500_p2;
                or_ln120_reg_775 <= or_ln120_fu_329_p2;
                select_ln120_54_reg_791 <= select_ln120_54_fu_445_p3;
                select_ln120_60_reg_801 <= select_ln120_60_fu_544_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_ce_reg)) then
                ap_return_int_reg <= agg_result_fu_579_p35;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_ce)) then
                p_read1_int_reg <= p_read1;
                p_read2_int_reg <= p_read2;
                p_read3_int_reg <= p_read3;
                p_read4_int_reg <= p_read4;
                p_read5_int_reg <= p_read5;
                p_read6_int_reg <= p_read6;
                p_read7_int_reg <= p_read7;
            end if;
        end if;
    end process;
    agg_result_fu_579_p33 <= "XXXXXXXXXXX";
    agg_result_fu_579_p34 <= 
        select_ln120_60_reg_801 when (or_ln120_52_fu_567_p2(0) = '1') else 
        ap_const_lv4_F;
    and_ln105_47_fu_287_p2 <= (xor_ln107_fu_268_p2 and icmp_ln4_53_reg_668);
    and_ln105_48_fu_303_p2 <= (icmp_ln4_54_reg_674 and and_ln105_fu_273_p2);
    and_ln105_49_fu_313_p2 <= (icmp_ln4_55_reg_680 and and_ln107_fu_282_p2);
    and_ln105_50_fu_340_p2 <= (icmp_ln4_56_reg_686_pp0_iter1_reg and and_ln105_47_reg_750);
    and_ln105_51_fu_457_p2 <= (icmp_ln4_57_reg_692_pp0_iter2_reg and and_ln107_6_reg_757_pp0_iter2_reg);
    and_ln105_52_fu_344_p2 <= (icmp_ln4_58_reg_698_pp0_iter1_reg and and_ln105_48_reg_763);
    and_ln105_53_fu_323_p2 <= (and_ln105_fu_273_p2 and and_ln105_60_fu_318_p2);
    and_ln105_54_fu_348_p2 <= (icmp_ln4_60_reg_708_pp0_iter1_reg and and_ln105_49_reg_769);
    and_ln105_55_fu_357_p2 <= (and_ln107_reg_745 and and_ln105_61_fu_352_p2);
    and_ln105_56_fu_461_p2 <= (icmp_ln4_62_reg_718_pp0_iter2_reg and and_ln105_50_reg_780);
    and_ln105_57_fu_470_p2 <= (and_ln105_62_fu_465_p2 and and_ln105_47_reg_750_pp0_iter2_reg);
    and_ln105_58_fu_475_p2 <= (icmp_ln4_64_reg_728_pp0_iter2_reg and and_ln105_51_fu_457_p2);
    and_ln105_59_fu_562_p2 <= (and_ln107_6_reg_757_pp0_iter3_reg and and_ln105_63_fu_557_p2);
    and_ln105_60_fu_318_p2 <= (xor_ln107_26_fu_308_p2 and icmp_ln4_59_reg_703);
    and_ln105_61_fu_352_p2 <= (xor_ln107_27_fu_335_p2 and icmp_ln4_61_reg_713_pp0_iter1_reg);
    and_ln105_62_fu_465_p2 <= (xor_ln107_28_fu_452_p2 and icmp_ln4_63_reg_723_pp0_iter2_reg);
    and_ln105_63_fu_557_p2 <= (xor_ln107_29_fu_552_p2 and icmp_ln4_65_reg_733_pp0_iter3_reg);
    and_ln105_fu_273_p2 <= (icmp_ln4_reg_651 and icmp_ln4_52_reg_662);
    and_ln107_6_fu_297_p2 <= (xor_ln107_fu_268_p2 and xor_ln107_25_fu_292_p2);
    and_ln107_fu_282_p2 <= (xor_ln107_24_fu_277_p2 and icmp_ln4_reg_651);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_return_assign_proc : process(agg_result_fu_579_p35, ap_ce_reg, ap_return_int_reg)
    begin
        if ((ap_const_logic_0 = ap_ce_reg)) then 
            ap_return <= ap_return_int_reg;
        elsif ((ap_const_logic_1 = ap_ce_reg)) then 
            ap_return <= agg_result_fu_579_p35;
        else 
            ap_return <= "XXXXXXXXXXX";
        end if; 
    end process;

    icmp_ln4_52_fu_184_p2 <= "1" when (signed(p_read2_int_reg) < signed(ap_const_lv18_1C80)) else "0";
    icmp_ln4_53_fu_190_p2 <= "1" when (signed(p_read7_int_reg) < signed(ap_const_lv18_3FD94)) else "0";
    icmp_ln4_54_fu_196_p2 <= "1" when (signed(p_read1_int_reg) < signed(ap_const_lv18_1880)) else "0";
    icmp_ln4_55_fu_202_p2 <= "1" when (signed(p_read4_int_reg) < signed(ap_const_lv18_9FA)) else "0";
    icmp_ln4_56_fu_208_p2 <= "1" when (signed(p_read5_int_reg) < signed(ap_const_lv18_DE00)) else "0";
    icmp_ln4_57_fu_214_p2 <= "1" when (signed(p_read6_int_reg) < signed(ap_const_lv18_3FA00)) else "0";
    icmp_ln4_58_fu_220_p2 <= "1" when (signed(p_read5_int_reg) < signed(ap_const_lv18_3780)) else "0";
    icmp_ln4_59_fu_226_p2 <= "1" when (signed(p_read5_int_reg) < signed(ap_const_lv18_2D80)) else "0";
    icmp_ln4_60_fu_232_p2 <= "1" when (signed(p_read2_int_reg) < signed(ap_const_lv18_7280)) else "0";
    icmp_ln4_61_fu_238_p2 <= "1" when (signed(p_read7_int_reg) < signed(ap_const_lv18_3FE6C)) else "0";
    icmp_ln4_62_fu_244_p2 <= "1" when (signed(p_read1_int_reg) < signed(ap_const_lv18_3080)) else "0";
    icmp_ln4_63_fu_250_p2 <= "1" when (signed(p_read3_int_reg) < signed(ap_const_lv18_16B4B)) else "0";
    icmp_ln4_64_fu_256_p2 <= "1" when (signed(p_read1_int_reg) < signed(ap_const_lv18_880)) else "0";
    icmp_ln4_65_fu_262_p2 <= "1" when (signed(p_read3_int_reg) < signed(ap_const_lv18_16382)) else "0";
    icmp_ln4_fu_178_p2 <= "1" when (signed(p_read3_int_reg) < signed(ap_const_lv18_E21A)) else "0";
    or_ln120_43_fu_362_p2 <= (and_ln105_reg_738 or and_ln105_54_fu_348_p2);
    or_ln120_44_fu_367_p2 <= (and_ln105_reg_738 or and_ln105_49_reg_769);
    or_ln120_45_fu_371_p2 <= (or_ln120_44_fu_367_p2 or and_ln105_55_fu_357_p2);
    or_ln120_46_fu_480_p2 <= (icmp_ln4_reg_651_pp0_iter2_reg or and_ln105_56_fu_461_p2);
    or_ln120_47_fu_377_p2 <= (icmp_ln4_reg_651_pp0_iter1_reg or and_ln105_50_fu_340_p2);
    or_ln120_48_fu_485_p2 <= (or_ln120_47_reg_785 or and_ln105_57_fu_470_p2);
    or_ln120_49_fu_490_p2 <= (icmp_ln4_reg_651_pp0_iter2_reg or and_ln105_47_reg_750_pp0_iter2_reg);
    or_ln120_50_fu_494_p2 <= (or_ln120_49_fu_490_p2 or and_ln105_58_fu_475_p2);
    or_ln120_51_fu_500_p2 <= (or_ln120_49_fu_490_p2 or and_ln105_51_fu_457_p2);
    or_ln120_52_fu_567_p2 <= (or_ln120_51_reg_796 or and_ln105_59_fu_562_p2);
    or_ln120_fu_329_p2 <= (and_ln105_53_fu_323_p2 or and_ln105_48_fu_303_p2);
    select_ln120_49_fu_399_p3 <= 
        select_ln120_fu_392_p3 when (or_ln120_reg_775(0) = '1') else 
        ap_const_lv2_3;
    select_ln120_50_fu_410_p3 <= 
        zext_ln120_9_fu_406_p1 when (and_ln105_reg_738(0) = '1') else 
        ap_const_lv3_4;
    select_ln120_51_fu_417_p3 <= 
        select_ln120_50_fu_410_p3 when (or_ln120_43_fu_362_p2(0) = '1') else 
        ap_const_lv3_5;
    select_ln120_52_fu_425_p3 <= 
        select_ln120_51_fu_417_p3 when (or_ln120_44_fu_367_p2(0) = '1') else 
        ap_const_lv3_6;
    select_ln120_53_fu_433_p3 <= 
        select_ln120_52_fu_425_p3 when (or_ln120_45_fu_371_p2(0) = '1') else 
        ap_const_lv3_7;
    select_ln120_54_fu_445_p3 <= 
        zext_ln120_10_fu_441_p1 when (icmp_ln4_reg_651_pp0_iter1_reg(0) = '1') else 
        ap_const_lv4_8;
    select_ln120_55_fu_506_p3 <= 
        select_ln120_54_reg_791 when (or_ln120_46_fu_480_p2(0) = '1') else 
        ap_const_lv4_9;
    select_ln120_56_fu_513_p3 <= 
        select_ln120_55_fu_506_p3 when (or_ln120_47_reg_785(0) = '1') else 
        ap_const_lv4_A;
    select_ln120_57_fu_520_p3 <= 
        select_ln120_56_fu_513_p3 when (or_ln120_48_fu_485_p2(0) = '1') else 
        ap_const_lv4_B;
    select_ln120_58_fu_528_p3 <= 
        select_ln120_57_fu_520_p3 when (or_ln120_49_fu_490_p2(0) = '1') else 
        ap_const_lv4_C;
    select_ln120_59_fu_536_p3 <= 
        select_ln120_58_fu_528_p3 when (or_ln120_50_fu_494_p2(0) = '1') else 
        ap_const_lv4_D;
    select_ln120_60_fu_544_p3 <= 
        select_ln120_59_fu_536_p3 when (or_ln120_51_fu_500_p2(0) = '1') else 
        ap_const_lv4_E;
    select_ln120_fu_392_p3 <= 
        zext_ln120_fu_388_p1 when (and_ln105_48_reg_763(0) = '1') else 
        ap_const_lv2_2;
    xor_ln107_24_fu_277_p2 <= (icmp_ln4_52_reg_662 xor ap_const_lv1_1);
    xor_ln107_25_fu_292_p2 <= (icmp_ln4_53_reg_668 xor ap_const_lv1_1);
    xor_ln107_26_fu_308_p2 <= (icmp_ln4_54_reg_674 xor ap_const_lv1_1);
    xor_ln107_27_fu_335_p2 <= (icmp_ln4_55_reg_680_pp0_iter1_reg xor ap_const_lv1_1);
    xor_ln107_28_fu_452_p2 <= (icmp_ln4_56_reg_686_pp0_iter2_reg xor ap_const_lv1_1);
    xor_ln107_29_fu_552_p2 <= (icmp_ln4_57_reg_692_pp0_iter3_reg xor ap_const_lv1_1);
    xor_ln107_fu_268_p2 <= (icmp_ln4_reg_651 xor ap_const_lv1_1);
    xor_ln120_fu_382_p2 <= (ap_const_lv1_1 xor and_ln105_52_fu_344_p2);
    zext_ln120_10_fu_441_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln120_53_fu_433_p3),4));
    zext_ln120_9_fu_406_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln120_49_fu_399_p3),3));
    zext_ln120_fu_388_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(xor_ln120_fu_382_p2),2));
end behav;
