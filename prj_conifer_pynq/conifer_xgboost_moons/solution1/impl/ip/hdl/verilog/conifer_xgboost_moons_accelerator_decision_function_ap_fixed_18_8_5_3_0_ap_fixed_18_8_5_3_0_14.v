// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module conifer_xgboost_moons_accelerator_decision_function_ap_fixed_18_8_5_3_0_ap_fixed_18_8_5_3_0_14 (
        ap_clk,
        ap_rst,
        p_read1,
        p_read2,
        p_read3,
        p_read4,
        p_read5,
        p_read6,
        p_read7,
        ap_return,
        ap_ce
);


input   ap_clk;
input   ap_rst;
input  [17:0] p_read1;
input  [17:0] p_read2;
input  [17:0] p_read3;
input  [17:0] p_read4;
input  [17:0] p_read5;
input  [17:0] p_read6;
input  [17:0] p_read7;
output  [10:0] ap_return;
input   ap_ce;

reg[10:0] ap_return;

wire   [0:0] icmp_ln4_fu_166_p2;
reg   [0:0] icmp_ln4_reg_610;
wire    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln4_118_fu_172_p2;
reg   [0:0] icmp_ln4_118_reg_617;
wire   [0:0] icmp_ln4_119_fu_178_p2;
reg   [0:0] icmp_ln4_119_reg_623;
wire   [0:0] icmp_ln4_120_fu_184_p2;
reg   [0:0] icmp_ln4_120_reg_629;
reg   [0:0] icmp_ln4_120_reg_629_pp0_iter1_reg;
wire   [0:0] icmp_ln4_121_fu_190_p2;
reg   [0:0] icmp_ln4_121_reg_635;
wire   [0:0] icmp_ln4_122_fu_196_p2;
reg   [0:0] icmp_ln4_122_reg_641;
reg   [0:0] icmp_ln4_122_reg_641_pp0_iter1_reg;
reg   [0:0] icmp_ln4_122_reg_641_pp0_iter2_reg;
wire   [0:0] icmp_ln4_123_fu_202_p2;
reg   [0:0] icmp_ln4_123_reg_647;
wire   [0:0] icmp_ln4_124_fu_208_p2;
reg   [0:0] icmp_ln4_124_reg_653;
reg   [0:0] icmp_ln4_124_reg_653_pp0_iter1_reg;
wire   [0:0] icmp_ln4_125_fu_214_p2;
reg   [0:0] icmp_ln4_125_reg_658;
reg   [0:0] icmp_ln4_125_reg_658_pp0_iter1_reg;
wire   [0:0] icmp_ln4_126_fu_220_p2;
reg   [0:0] icmp_ln4_126_reg_663;
reg   [0:0] icmp_ln4_126_reg_663_pp0_iter1_reg;
reg   [0:0] icmp_ln4_126_reg_663_pp0_iter2_reg;
wire   [0:0] icmp_ln4_127_fu_226_p2;
reg   [0:0] icmp_ln4_127_reg_668;
reg   [0:0] icmp_ln4_127_reg_668_pp0_iter1_reg;
reg   [0:0] icmp_ln4_127_reg_668_pp0_iter2_reg;
wire   [0:0] icmp_ln4_128_fu_232_p2;
reg   [0:0] icmp_ln4_128_reg_673;
reg   [0:0] icmp_ln4_128_reg_673_pp0_iter1_reg;
reg   [0:0] icmp_ln4_128_reg_673_pp0_iter2_reg;
wire   [0:0] icmp_ln4_129_fu_238_p2;
reg   [0:0] icmp_ln4_129_reg_678;
reg   [0:0] icmp_ln4_129_reg_678_pp0_iter1_reg;
reg   [0:0] icmp_ln4_129_reg_678_pp0_iter2_reg;
reg   [0:0] icmp_ln4_129_reg_678_pp0_iter3_reg;
wire   [0:0] and_ln105_fu_249_p2;
reg   [0:0] and_ln105_reg_683;
wire   [0:0] and_ln105_130_fu_263_p2;
reg   [0:0] and_ln105_130_reg_689;
reg   [0:0] and_ln105_130_reg_689_pp0_iter2_reg;
wire   [0:0] and_ln105_131_fu_279_p2;
reg   [0:0] and_ln105_131_reg_696;
wire   [0:0] and_ln105_132_fu_284_p2;
reg   [0:0] and_ln105_132_reg_702;
wire   [0:0] and_ln107_13_fu_294_p2;
reg   [0:0] and_ln107_13_reg_707;
reg   [0:0] and_ln107_13_reg_707_pp0_iter2_reg;
wire   [0:0] and_ln105_134_fu_300_p2;
reg   [0:0] and_ln105_134_reg_713;
reg   [0:0] and_ln105_134_reg_713_pp0_iter2_reg;
reg   [0:0] and_ln105_134_reg_713_pp0_iter3_reg;
wire   [0:0] or_ln120_fu_316_p2;
reg   [0:0] or_ln120_reg_719;
wire   [0:0] and_ln105_133_fu_327_p2;
reg   [0:0] and_ln105_133_reg_727;
wire   [0:0] or_ln120_97_fu_360_p2;
reg   [0:0] or_ln120_97_reg_733;
wire   [0:0] or_ln120_99_fu_364_p2;
reg   [0:0] or_ln120_99_reg_738;
wire   [2:0] select_ln120_114_fu_413_p3;
reg   [2:0] select_ln120_114_reg_746;
wire   [0:0] or_ln120_103_fu_464_p2;
reg   [0:0] or_ln120_103_reg_751;
wire   [3:0] select_ln120_120_fu_510_p3;
reg   [3:0] select_ln120_120_reg_757;
wire    ap_block_pp0_stage0;
wire   [0:0] xor_ln107_53_fu_253_p2;
wire   [0:0] xor_ln107_fu_244_p2;
wire   [0:0] xor_ln107_54_fu_268_p2;
wire   [0:0] and_ln107_fu_258_p2;
wire   [0:0] xor_ln107_56_fu_289_p2;
wire   [0:0] and_ln107_12_fu_273_p2;
wire   [0:0] xor_ln107_58_fu_305_p2;
wire   [0:0] and_ln107_14_fu_310_p2;
wire   [0:0] xor_ln107_55_fu_322_p2;
wire   [0:0] and_ln105_136_fu_335_p2;
wire   [0:0] and_ln105_135_fu_331_p2;
wire   [0:0] or_ln120_95_fu_350_p2;
wire   [0:0] and_ln105_137_fu_340_p2;
wire   [0:0] xor_ln120_fu_369_p2;
wire   [1:0] zext_ln120_fu_374_p1;
wire   [0:0] or_ln120_94_fu_345_p2;
wire   [1:0] select_ln120_fu_378_p3;
wire   [1:0] select_ln120_111_fu_385_p3;
wire   [2:0] zext_ln120_19_fu_393_p1;
wire   [0:0] or_ln120_96_fu_354_p2;
wire   [2:0] select_ln120_112_fu_397_p3;
wire   [2:0] select_ln120_113_fu_405_p3;
wire   [0:0] xor_ln107_57_fu_421_p2;
wire   [0:0] and_ln105_140_fu_434_p2;
wire   [0:0] and_ln105_138_fu_426_p2;
wire   [0:0] and_ln105_139_fu_430_p2;
wire   [0:0] or_ln120_101_fu_454_p2;
wire   [0:0] and_ln105_141_fu_439_p2;
wire   [0:0] or_ln120_98_fu_444_p2;
wire   [2:0] select_ln120_115_fu_468_p3;
wire   [3:0] zext_ln120_20_fu_475_p1;
wire   [0:0] or_ln120_100_fu_449_p2;
wire   [3:0] select_ln120_116_fu_479_p3;
wire   [3:0] select_ln120_117_fu_486_p3;
wire   [0:0] or_ln120_102_fu_458_p2;
wire   [3:0] select_ln120_118_fu_494_p3;
wire   [3:0] select_ln120_119_fu_502_p3;
wire   [0:0] and_ln105_142_fu_518_p2;
wire   [0:0] or_ln120_104_fu_522_p2;
wire   [10:0] tmp_fu_538_p29;
wire   [3:0] tmp_fu_538_p30;
wire   [0:0] or_ln120_105_fu_527_p2;
wire   [10:0] tmp_fu_538_p31;
wire   [10:0] select_ln120_122_fu_602_p3;
reg    ap_ce_reg;
reg   [17:0] p_read1_int_reg;
reg   [17:0] p_read2_int_reg;
reg   [17:0] p_read3_int_reg;
reg   [17:0] p_read4_int_reg;
reg   [17:0] p_read5_int_reg;
reg   [17:0] p_read6_int_reg;
reg   [17:0] p_read7_int_reg;
reg   [10:0] ap_return_int_reg;
wire   [3:0] tmp_fu_538_p1;
wire   [3:0] tmp_fu_538_p3;
wire   [3:0] tmp_fu_538_p5;
wire   [3:0] tmp_fu_538_p7;
wire   [3:0] tmp_fu_538_p9;
wire   [3:0] tmp_fu_538_p11;
wire   [3:0] tmp_fu_538_p13;
wire   [3:0] tmp_fu_538_p15;
wire  signed [3:0] tmp_fu_538_p17;
wire  signed [3:0] tmp_fu_538_p19;
wire  signed [3:0] tmp_fu_538_p21;
wire  signed [3:0] tmp_fu_538_p23;
wire  signed [3:0] tmp_fu_538_p25;
wire  signed [3:0] tmp_fu_538_p27;

conifer_xgboost_moons_accelerator_sparsemux_29_4_11_1_0 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 4'h0 ),
    .din0_WIDTH( 11 ),
    .CASE1( 4'h1 ),
    .din1_WIDTH( 11 ),
    .CASE2( 4'h2 ),
    .din2_WIDTH( 11 ),
    .CASE3( 4'h3 ),
    .din3_WIDTH( 11 ),
    .CASE4( 4'h4 ),
    .din4_WIDTH( 11 ),
    .CASE5( 4'h5 ),
    .din5_WIDTH( 11 ),
    .CASE6( 4'h6 ),
    .din6_WIDTH( 11 ),
    .CASE7( 4'h7 ),
    .din7_WIDTH( 11 ),
    .CASE8( 4'h8 ),
    .din8_WIDTH( 11 ),
    .CASE9( 4'h9 ),
    .din9_WIDTH( 11 ),
    .CASE10( 4'hA ),
    .din10_WIDTH( 11 ),
    .CASE11( 4'hB ),
    .din11_WIDTH( 11 ),
    .CASE12( 4'hC ),
    .din12_WIDTH( 11 ),
    .CASE13( 4'hD ),
    .din13_WIDTH( 11 ),
    .def_WIDTH( 11 ),
    .sel_WIDTH( 4 ),
    .dout_WIDTH( 11 ))
sparsemux_29_4_11_1_0_U139(
    .din0(11'd1451),
    .din1(11'd1423),
    .din2(11'd1848),
    .din3(11'd808),
    .din4(11'd1701),
    .din5(11'd2033),
    .din6(11'd1621),
    .din7(11'd194),
    .din8(11'd1400),
    .din9(11'd1751),
    .din10(11'd41),
    .din11(11'd1493),
    .din12(11'd3),
    .din13(11'd1565),
    .def(tmp_fu_538_p29),
    .sel(tmp_fu_538_p30),
    .dout(tmp_fu_538_p31)
);

always @ (posedge ap_clk) begin
    ap_ce_reg <= ap_ce;
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        and_ln105_130_reg_689 <= and_ln105_130_fu_263_p2;
        and_ln105_130_reg_689_pp0_iter2_reg <= and_ln105_130_reg_689;
        and_ln105_131_reg_696 <= and_ln105_131_fu_279_p2;
        and_ln105_132_reg_702 <= and_ln105_132_fu_284_p2;
        and_ln105_133_reg_727 <= and_ln105_133_fu_327_p2;
        and_ln105_134_reg_713 <= and_ln105_134_fu_300_p2;
        and_ln105_134_reg_713_pp0_iter2_reg <= and_ln105_134_reg_713;
        and_ln105_134_reg_713_pp0_iter3_reg <= and_ln105_134_reg_713_pp0_iter2_reg;
        and_ln105_reg_683 <= and_ln105_fu_249_p2;
        and_ln107_13_reg_707 <= and_ln107_13_fu_294_p2;
        and_ln107_13_reg_707_pp0_iter2_reg <= and_ln107_13_reg_707;
        icmp_ln4_118_reg_617 <= icmp_ln4_118_fu_172_p2;
        icmp_ln4_119_reg_623 <= icmp_ln4_119_fu_178_p2;
        icmp_ln4_120_reg_629 <= icmp_ln4_120_fu_184_p2;
        icmp_ln4_120_reg_629_pp0_iter1_reg <= icmp_ln4_120_reg_629;
        icmp_ln4_121_reg_635 <= icmp_ln4_121_fu_190_p2;
        icmp_ln4_122_reg_641 <= icmp_ln4_122_fu_196_p2;
        icmp_ln4_122_reg_641_pp0_iter1_reg <= icmp_ln4_122_reg_641;
        icmp_ln4_122_reg_641_pp0_iter2_reg <= icmp_ln4_122_reg_641_pp0_iter1_reg;
        icmp_ln4_123_reg_647 <= icmp_ln4_123_fu_202_p2;
        icmp_ln4_124_reg_653 <= icmp_ln4_124_fu_208_p2;
        icmp_ln4_124_reg_653_pp0_iter1_reg <= icmp_ln4_124_reg_653;
        icmp_ln4_125_reg_658 <= icmp_ln4_125_fu_214_p2;
        icmp_ln4_125_reg_658_pp0_iter1_reg <= icmp_ln4_125_reg_658;
        icmp_ln4_126_reg_663 <= icmp_ln4_126_fu_220_p2;
        icmp_ln4_126_reg_663_pp0_iter1_reg <= icmp_ln4_126_reg_663;
        icmp_ln4_126_reg_663_pp0_iter2_reg <= icmp_ln4_126_reg_663_pp0_iter1_reg;
        icmp_ln4_127_reg_668 <= icmp_ln4_127_fu_226_p2;
        icmp_ln4_127_reg_668_pp0_iter1_reg <= icmp_ln4_127_reg_668;
        icmp_ln4_127_reg_668_pp0_iter2_reg <= icmp_ln4_127_reg_668_pp0_iter1_reg;
        icmp_ln4_128_reg_673 <= icmp_ln4_128_fu_232_p2;
        icmp_ln4_128_reg_673_pp0_iter1_reg <= icmp_ln4_128_reg_673;
        icmp_ln4_128_reg_673_pp0_iter2_reg <= icmp_ln4_128_reg_673_pp0_iter1_reg;
        icmp_ln4_129_reg_678 <= icmp_ln4_129_fu_238_p2;
        icmp_ln4_129_reg_678_pp0_iter1_reg <= icmp_ln4_129_reg_678;
        icmp_ln4_129_reg_678_pp0_iter2_reg <= icmp_ln4_129_reg_678_pp0_iter1_reg;
        icmp_ln4_129_reg_678_pp0_iter3_reg <= icmp_ln4_129_reg_678_pp0_iter2_reg;
        icmp_ln4_reg_610 <= icmp_ln4_fu_166_p2;
        or_ln120_103_reg_751 <= or_ln120_103_fu_464_p2;
        or_ln120_97_reg_733 <= or_ln120_97_fu_360_p2;
        or_ln120_99_reg_738 <= or_ln120_99_fu_364_p2;
        or_ln120_reg_719 <= or_ln120_fu_316_p2;
        select_ln120_114_reg_746 <= select_ln120_114_fu_413_p3;
        select_ln120_120_reg_757 <= select_ln120_120_fu_510_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_ce_reg)) begin
        ap_return_int_reg <= select_ln120_122_fu_602_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_ce)) begin
        p_read1_int_reg <= p_read1;
        p_read2_int_reg <= p_read2;
        p_read3_int_reg <= p_read3;
        p_read4_int_reg <= p_read4;
        p_read5_int_reg <= p_read5;
        p_read6_int_reg <= p_read6;
        p_read7_int_reg <= p_read7;
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return = ap_return_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return = select_ln120_122_fu_602_p3;
    end else begin
        ap_return = 'bx;
    end
end

assign and_ln105_130_fu_263_p2 = (xor_ln107_fu_244_p2 & icmp_ln4_119_reg_623);

assign and_ln105_131_fu_279_p2 = (icmp_ln4_120_reg_629 & and_ln105_fu_249_p2);

assign and_ln105_132_fu_284_p2 = (icmp_ln4_121_reg_635 & and_ln107_fu_258_p2);

assign and_ln105_133_fu_327_p2 = (icmp_ln4_122_reg_641_pp0_iter1_reg & and_ln105_130_reg_689);

assign and_ln105_134_fu_300_p2 = (icmp_ln4_123_reg_647 & and_ln107_12_fu_273_p2);

assign and_ln105_135_fu_331_p2 = (icmp_ln4_124_reg_653_pp0_iter1_reg & and_ln105_131_reg_696);

assign and_ln105_136_fu_335_p2 = (xor_ln107_55_fu_322_p2 & icmp_ln4_125_reg_658_pp0_iter1_reg);

assign and_ln105_137_fu_340_p2 = (and_ln105_reg_683 & and_ln105_136_fu_335_p2);

assign and_ln105_138_fu_426_p2 = (icmp_ln4_126_reg_663_pp0_iter2_reg & and_ln107_13_reg_707_pp0_iter2_reg);

assign and_ln105_139_fu_430_p2 = (icmp_ln4_127_reg_668_pp0_iter2_reg & and_ln105_133_reg_727);

assign and_ln105_140_fu_434_p2 = (xor_ln107_57_fu_421_p2 & icmp_ln4_128_reg_673_pp0_iter2_reg);

assign and_ln105_141_fu_439_p2 = (and_ln105_140_fu_434_p2 & and_ln105_130_reg_689_pp0_iter2_reg);

assign and_ln105_142_fu_518_p2 = (icmp_ln4_129_reg_678_pp0_iter3_reg & and_ln105_134_reg_713_pp0_iter3_reg);

assign and_ln105_fu_249_p2 = (icmp_ln4_reg_610 & icmp_ln4_118_reg_617);

assign and_ln107_12_fu_273_p2 = (xor_ln107_fu_244_p2 & xor_ln107_54_fu_268_p2);

assign and_ln107_13_fu_294_p2 = (xor_ln107_56_fu_289_p2 & and_ln107_fu_258_p2);

assign and_ln107_14_fu_310_p2 = (xor_ln107_58_fu_305_p2 & and_ln107_12_fu_273_p2);

assign and_ln107_fu_258_p2 = (xor_ln107_53_fu_253_p2 & icmp_ln4_reg_610);

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign icmp_ln4_118_fu_172_p2 = (($signed(p_read1_int_reg) < $signed(18'd2944)) ? 1'b1 : 1'b0);

assign icmp_ln4_119_fu_178_p2 = (($signed(p_read6_int_reg) < $signed(18'd1536)) ? 1'b1 : 1'b0);

assign icmp_ln4_120_fu_184_p2 = (($signed(p_read2_int_reg) < $signed(18'd4736)) ? 1'b1 : 1'b0);

assign icmp_ln4_121_fu_190_p2 = (($signed(p_read3_int_reg) < $signed(18'd1754)) ? 1'b1 : 1'b0);

assign icmp_ln4_122_fu_196_p2 = (($signed(p_read6_int_reg) < $signed(18'd260608)) ? 1'b1 : 1'b0);

assign icmp_ln4_123_fu_202_p2 = (($signed(p_read7_int_reg) < $signed(18'd49)) ? 1'b1 : 1'b0);

assign icmp_ln4_124_fu_208_p2 = (($signed(p_read5_int_reg) < $signed(18'd4736)) ? 1'b1 : 1'b0);

assign icmp_ln4_125_fu_214_p2 = (($signed(p_read4_int_reg) < $signed(18'd3169)) ? 1'b1 : 1'b0);

assign icmp_ln4_126_fu_220_p2 = (($signed(p_read1_int_reg) < $signed(18'd8064)) ? 1'b1 : 1'b0);

assign icmp_ln4_127_fu_226_p2 = (($signed(p_read2_int_reg) < $signed(18'd18816)) ? 1'b1 : 1'b0);

assign icmp_ln4_128_fu_232_p2 = (($signed(p_read7_int_reg) < $signed(18'd1228)) ? 1'b1 : 1'b0);

assign icmp_ln4_129_fu_238_p2 = (($signed(p_read3_int_reg) < $signed(18'd53038)) ? 1'b1 : 1'b0);

assign icmp_ln4_fu_166_p2 = (($signed(p_read3_int_reg) < $signed(18'd12215)) ? 1'b1 : 1'b0);

assign or_ln120_100_fu_449_p2 = (or_ln120_99_reg_738 | and_ln105_139_fu_430_p2);

assign or_ln120_101_fu_454_p2 = (or_ln120_99_reg_738 | and_ln105_133_reg_727);

assign or_ln120_102_fu_458_p2 = (or_ln120_101_fu_454_p2 | and_ln105_141_fu_439_p2);

assign or_ln120_103_fu_464_p2 = (or_ln120_99_reg_738 | and_ln105_130_reg_689_pp0_iter2_reg);

assign or_ln120_104_fu_522_p2 = (or_ln120_103_reg_751 | and_ln105_142_fu_518_p2);

assign or_ln120_105_fu_527_p2 = (or_ln120_103_reg_751 | and_ln105_134_reg_713_pp0_iter3_reg);

assign or_ln120_94_fu_345_p2 = (or_ln120_reg_719 | and_ln105_135_fu_331_p2);

assign or_ln120_95_fu_350_p2 = (or_ln120_reg_719 | and_ln105_131_reg_696);

assign or_ln120_96_fu_354_p2 = (or_ln120_95_fu_350_p2 | and_ln105_137_fu_340_p2);

assign or_ln120_97_fu_360_p2 = (or_ln120_reg_719 | and_ln105_reg_683);

assign or_ln120_98_fu_444_p2 = (or_ln120_97_reg_733 | and_ln105_138_fu_426_p2);

assign or_ln120_99_fu_364_p2 = (or_ln120_97_fu_360_p2 | and_ln107_13_reg_707);

assign or_ln120_fu_316_p2 = (and_ln107_14_fu_310_p2 | and_ln105_132_fu_284_p2);

assign select_ln120_111_fu_385_p3 = ((or_ln120_94_fu_345_p2[0:0] == 1'b1) ? select_ln120_fu_378_p3 : 2'd3);

assign select_ln120_112_fu_397_p3 = ((or_ln120_95_fu_350_p2[0:0] == 1'b1) ? zext_ln120_19_fu_393_p1 : 3'd4);

assign select_ln120_113_fu_405_p3 = ((or_ln120_96_fu_354_p2[0:0] == 1'b1) ? select_ln120_112_fu_397_p3 : 3'd5);

assign select_ln120_114_fu_413_p3 = ((or_ln120_97_fu_360_p2[0:0] == 1'b1) ? select_ln120_113_fu_405_p3 : 3'd6);

assign select_ln120_115_fu_468_p3 = ((or_ln120_98_fu_444_p2[0:0] == 1'b1) ? select_ln120_114_reg_746 : 3'd7);

assign select_ln120_116_fu_479_p3 = ((or_ln120_99_reg_738[0:0] == 1'b1) ? zext_ln120_20_fu_475_p1 : 4'd8);

assign select_ln120_117_fu_486_p3 = ((or_ln120_100_fu_449_p2[0:0] == 1'b1) ? select_ln120_116_fu_479_p3 : 4'd9);

assign select_ln120_118_fu_494_p3 = ((or_ln120_101_fu_454_p2[0:0] == 1'b1) ? select_ln120_117_fu_486_p3 : 4'd10);

assign select_ln120_119_fu_502_p3 = ((or_ln120_102_fu_458_p2[0:0] == 1'b1) ? select_ln120_118_fu_494_p3 : 4'd11);

assign select_ln120_120_fu_510_p3 = ((or_ln120_103_fu_464_p2[0:0] == 1'b1) ? select_ln120_119_fu_502_p3 : 4'd12);

assign select_ln120_122_fu_602_p3 = ((or_ln120_105_fu_527_p2[0:0] == 1'b1) ? tmp_fu_538_p31 : 11'd0);

assign select_ln120_fu_378_p3 = ((or_ln120_reg_719[0:0] == 1'b1) ? zext_ln120_fu_374_p1 : 2'd2);

assign tmp_fu_538_p29 = 'bx;

assign tmp_fu_538_p30 = ((or_ln120_104_fu_522_p2[0:0] == 1'b1) ? select_ln120_120_reg_757 : 4'd13);

assign xor_ln107_53_fu_253_p2 = (icmp_ln4_118_reg_617 ^ 1'd1);

assign xor_ln107_54_fu_268_p2 = (icmp_ln4_119_reg_623 ^ 1'd1);

assign xor_ln107_55_fu_322_p2 = (icmp_ln4_120_reg_629_pp0_iter1_reg ^ 1'd1);

assign xor_ln107_56_fu_289_p2 = (icmp_ln4_121_reg_635 ^ 1'd1);

assign xor_ln107_57_fu_421_p2 = (icmp_ln4_122_reg_641_pp0_iter2_reg ^ 1'd1);

assign xor_ln107_58_fu_305_p2 = (icmp_ln4_123_reg_647 ^ 1'd1);

assign xor_ln107_fu_244_p2 = (icmp_ln4_reg_610 ^ 1'd1);

assign xor_ln120_fu_369_p2 = (1'd1 ^ and_ln105_132_reg_702);

assign zext_ln120_19_fu_393_p1 = select_ln120_111_fu_385_p3;

assign zext_ln120_20_fu_475_p1 = select_ln120_115_fu_468_p3;

assign zext_ln120_fu_374_p1 = xor_ln120_fu_369_p2;

endmodule //conifer_xgboost_moons_accelerator_decision_function_ap_fixed_18_8_5_3_0_ap_fixed_18_8_5_3_0_14
