-- ==============================================================
-- Generated by Vitis HLS v2023.2
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity conifer_xgboost_moons_accelerator_decision_function_ap_fixed_18_8_5_3_0_ap_fixed_18_8_5_3_0_1 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    p_read1 : IN STD_LOGIC_VECTOR (17 downto 0);
    p_read2 : IN STD_LOGIC_VECTOR (17 downto 0);
    p_read3 : IN STD_LOGIC_VECTOR (17 downto 0);
    p_read4 : IN STD_LOGIC_VECTOR (17 downto 0);
    p_read5 : IN STD_LOGIC_VECTOR (17 downto 0);
    p_read6 : IN STD_LOGIC_VECTOR (17 downto 0);
    p_read7 : IN STD_LOGIC_VECTOR (17 downto 0);
    p_read8 : IN STD_LOGIC_VECTOR (17 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (10 downto 0);
    ap_ce : IN STD_LOGIC );
end;


architecture behav of conifer_xgboost_moons_accelerator_decision_function_ap_fixed_18_8_5_3_0_ap_fixed_18_8_5_3_0_1 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv18_2580 : STD_LOGIC_VECTOR (17 downto 0) := "000010010110000000";
    constant ap_const_lv18_A80 : STD_LOGIC_VECTOR (17 downto 0) := "000000101010000000";
    constant ap_const_lv18_3FA00 : STD_LOGIC_VECTOR (17 downto 0) := "111111101000000000";
    constant ap_const_lv18_1080 : STD_LOGIC_VECTOR (17 downto 0) := "000001000010000000";
    constant ap_const_lv18_1580 : STD_LOGIC_VECTOR (17 downto 0) := "000001010110000000";
    constant ap_const_lv18_880 : STD_LOGIC_VECTOR (17 downto 0) := "000000100010000000";
    constant ap_const_lv18_430 : STD_LOGIC_VECTOR (17 downto 0) := "000000010000110000";
    constant ap_const_lv18_B80 : STD_LOGIC_VECTOR (17 downto 0) := "000000101110000000";
    constant ap_const_lv18_3FE00 : STD_LOGIC_VECTOR (17 downto 0) := "111111111000000000";
    constant ap_const_lv18_130 : STD_LOGIC_VECTOR (17 downto 0) := "000000000100110000";
    constant ap_const_lv18_12E26 : STD_LOGIC_VECTOR (17 downto 0) := "010010111000100110";
    constant ap_const_lv18_1B80 : STD_LOGIC_VECTOR (17 downto 0) := "000001101110000000";
    constant ap_const_lv18_1D8 : STD_LOGIC_VECTOR (17 downto 0) := "000000000111011000";
    constant ap_const_lv18_C692 : STD_LOGIC_VECTOR (17 downto 0) := "001100011010010010";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv3_6 : STD_LOGIC_VECTOR (2 downto 0) := "110";
    constant ap_const_lv3_7 : STD_LOGIC_VECTOR (2 downto 0) := "111";
    constant ap_const_lv4_8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv4_9 : STD_LOGIC_VECTOR (3 downto 0) := "1001";
    constant ap_const_lv4_A : STD_LOGIC_VECTOR (3 downto 0) := "1010";
    constant ap_const_lv4_B : STD_LOGIC_VECTOR (3 downto 0) := "1011";
    constant ap_const_lv4_C : STD_LOGIC_VECTOR (3 downto 0) := "1100";
    constant ap_const_lv4_D : STD_LOGIC_VECTOR (3 downto 0) := "1101";
    constant ap_const_lv4_E : STD_LOGIC_VECTOR (3 downto 0) := "1110";
    constant ap_const_lv11_5D5 : STD_LOGIC_VECTOR (10 downto 0) := "10111010101";
    constant ap_const_lv11_FC : STD_LOGIC_VECTOR (10 downto 0) := "00011111100";
    constant ap_const_lv11_637 : STD_LOGIC_VECTOR (10 downto 0) := "11000110111";
    constant ap_const_lv11_3A8 : STD_LOGIC_VECTOR (10 downto 0) := "01110101000";
    constant ap_const_lv11_84 : STD_LOGIC_VECTOR (10 downto 0) := "00010000100";
    constant ap_const_lv11_737 : STD_LOGIC_VECTOR (10 downto 0) := "11100110111";
    constant ap_const_lv11_5D0 : STD_LOGIC_VECTOR (10 downto 0) := "10111010000";
    constant ap_const_lv11_670 : STD_LOGIC_VECTOR (10 downto 0) := "11001110000";
    constant ap_const_lv11_4C : STD_LOGIC_VECTOR (10 downto 0) := "00001001100";
    constant ap_const_lv11_579 : STD_LOGIC_VECTOR (10 downto 0) := "10101111001";
    constant ap_const_lv11_437 : STD_LOGIC_VECTOR (10 downto 0) := "10000110111";
    constant ap_const_lv11_81 : STD_LOGIC_VECTOR (10 downto 0) := "00010000001";
    constant ap_const_lv11_714 : STD_LOGIC_VECTOR (10 downto 0) := "11100010100";
    constant ap_const_lv11_64A : STD_LOGIC_VECTOR (10 downto 0) := "11001001010";
    constant ap_const_lv11_762 : STD_LOGIC_VECTOR (10 downto 0) := "11101100010";

attribute shreg_extract : string;
    signal icmp_ln4_fu_180_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_reg_636 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal icmp_ln4_reg_636_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_reg_636_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_12_fu_186_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_12_reg_647 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_13_fu_192_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_13_reg_653 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_14_fu_198_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_14_reg_659 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_14_reg_659_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_15_fu_204_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_15_reg_665 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_15_reg_665_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_16_fu_210_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_16_reg_671 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_16_reg_671_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_16_reg_671_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_17_fu_216_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_17_reg_677 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_17_reg_677_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_17_reg_677_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_17_reg_677_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_18_fu_222_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_18_reg_683 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_18_reg_683_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_19_fu_228_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_19_reg_688 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_19_reg_688_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_20_fu_234_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_20_reg_693 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_20_reg_693_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_21_fu_240_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_21_reg_698 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_21_reg_698_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_21_reg_698_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_22_fu_246_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_22_reg_703 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_22_reg_703_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_22_reg_703_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_23_fu_252_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_23_reg_708 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_23_reg_708_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_23_reg_708_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_24_fu_258_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_24_reg_713 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_24_reg_713_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_24_reg_713_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_24_reg_713_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln105_fu_269_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln105_reg_718 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln107_fu_278_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln107_reg_724 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln105_10_fu_283_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln105_10_reg_729 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln105_10_reg_729_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln107_2_fu_293_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln107_2_reg_736 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln107_2_reg_736_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln107_2_reg_736_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln105_11_fu_299_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln105_11_reg_742 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln105_12_fu_304_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln105_12_reg_747 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln120_12_fu_309_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln120_12_reg_754 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln105_13_fu_325_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln105_13_reg_760 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln120_17_fu_373_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln120_17_reg_765 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln120_16_fu_430_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln120_16_reg_771 : STD_LOGIC_VECTOR (2 downto 0);
    signal or_ln120_21_fu_485_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln120_21_reg_776 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln120_22_fu_533_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln120_22_reg_781 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal xor_ln107_6_fu_273_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln107_fu_264_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln107_7_fu_288_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln107_8_fu_315_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln105_22_fu_333_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln107_9_fu_320_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln105_23_fu_343_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln105_15_fu_329_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln105_16_fu_338_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln120_14_fu_363_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln105_17_fu_348_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln120_fu_378_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln120_fu_353_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln120_fu_383_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln120_fu_387_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln120_12_fu_395_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal or_ln120_13_fu_358_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln120_3_fu_402_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln120_13_fu_406_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal or_ln120_15_fu_367_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln120_14_fu_414_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln120_15_fu_422_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal xor_ln107_10_fu_437_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln105_24_fu_450_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln105_14_fu_442_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln105_18_fu_446_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln105_19_fu_455_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln120_19_fu_475_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln105_20_fu_460_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln120_16_fu_465_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln120_4_fu_491_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln120_17_fu_494_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal or_ln120_18_fu_470_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln120_18_fu_502_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln120_19_fu_509_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal or_ln120_20_fu_479_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln120_20_fu_517_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln120_21_fu_525_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal xor_ln107_11_fu_541_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln105_25_fu_546_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln105_21_fu_551_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln120_22_fu_556_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal agg_result_fu_568_p31 : STD_LOGIC_VECTOR (10 downto 0);
    signal agg_result_fu_568_p32 : STD_LOGIC_VECTOR (3 downto 0);
    signal agg_result_fu_568_p33 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_ce_reg : STD_LOGIC;
    signal p_read1_int_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal p_read2_int_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal p_read3_int_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal p_read4_int_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal p_read5_int_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal p_read6_int_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal p_read7_int_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal p_read8_int_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_return_int_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal agg_result_fu_568_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal agg_result_fu_568_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal agg_result_fu_568_p5 : STD_LOGIC_VECTOR (3 downto 0);
    signal agg_result_fu_568_p7 : STD_LOGIC_VECTOR (3 downto 0);
    signal agg_result_fu_568_p9 : STD_LOGIC_VECTOR (3 downto 0);
    signal agg_result_fu_568_p11 : STD_LOGIC_VECTOR (3 downto 0);
    signal agg_result_fu_568_p13 : STD_LOGIC_VECTOR (3 downto 0);
    signal agg_result_fu_568_p15 : STD_LOGIC_VECTOR (3 downto 0);
    signal agg_result_fu_568_p17 : STD_LOGIC_VECTOR (3 downto 0);
    signal agg_result_fu_568_p19 : STD_LOGIC_VECTOR (3 downto 0);
    signal agg_result_fu_568_p21 : STD_LOGIC_VECTOR (3 downto 0);
    signal agg_result_fu_568_p23 : STD_LOGIC_VECTOR (3 downto 0);
    signal agg_result_fu_568_p25 : STD_LOGIC_VECTOR (3 downto 0);
    signal agg_result_fu_568_p27 : STD_LOGIC_VECTOR (3 downto 0);
    signal agg_result_fu_568_p29 : STD_LOGIC_VECTOR (3 downto 0);

    component conifer_xgboost_moons_accelerator_sparsemux_31_4_11_1_0_x IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        CASE0 : STD_LOGIC_VECTOR (3 downto 0);
        din0_WIDTH : INTEGER;
        CASE1 : STD_LOGIC_VECTOR (3 downto 0);
        din1_WIDTH : INTEGER;
        CASE2 : STD_LOGIC_VECTOR (3 downto 0);
        din2_WIDTH : INTEGER;
        CASE3 : STD_LOGIC_VECTOR (3 downto 0);
        din3_WIDTH : INTEGER;
        CASE4 : STD_LOGIC_VECTOR (3 downto 0);
        din4_WIDTH : INTEGER;
        CASE5 : STD_LOGIC_VECTOR (3 downto 0);
        din5_WIDTH : INTEGER;
        CASE6 : STD_LOGIC_VECTOR (3 downto 0);
        din6_WIDTH : INTEGER;
        CASE7 : STD_LOGIC_VECTOR (3 downto 0);
        din7_WIDTH : INTEGER;
        CASE8 : STD_LOGIC_VECTOR (3 downto 0);
        din8_WIDTH : INTEGER;
        CASE9 : STD_LOGIC_VECTOR (3 downto 0);
        din9_WIDTH : INTEGER;
        CASE10 : STD_LOGIC_VECTOR (3 downto 0);
        din10_WIDTH : INTEGER;
        CASE11 : STD_LOGIC_VECTOR (3 downto 0);
        din11_WIDTH : INTEGER;
        CASE12 : STD_LOGIC_VECTOR (3 downto 0);
        din12_WIDTH : INTEGER;
        CASE13 : STD_LOGIC_VECTOR (3 downto 0);
        din13_WIDTH : INTEGER;
        CASE14 : STD_LOGIC_VECTOR (3 downto 0);
        din14_WIDTH : INTEGER;
        def_WIDTH : INTEGER;
        sel_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (10 downto 0);
        din1 : IN STD_LOGIC_VECTOR (10 downto 0);
        din2 : IN STD_LOGIC_VECTOR (10 downto 0);
        din3 : IN STD_LOGIC_VECTOR (10 downto 0);
        din4 : IN STD_LOGIC_VECTOR (10 downto 0);
        din5 : IN STD_LOGIC_VECTOR (10 downto 0);
        din6 : IN STD_LOGIC_VECTOR (10 downto 0);
        din7 : IN STD_LOGIC_VECTOR (10 downto 0);
        din8 : IN STD_LOGIC_VECTOR (10 downto 0);
        din9 : IN STD_LOGIC_VECTOR (10 downto 0);
        din10 : IN STD_LOGIC_VECTOR (10 downto 0);
        din11 : IN STD_LOGIC_VECTOR (10 downto 0);
        din12 : IN STD_LOGIC_VECTOR (10 downto 0);
        din13 : IN STD_LOGIC_VECTOR (10 downto 0);
        din14 : IN STD_LOGIC_VECTOR (10 downto 0);
        def : IN STD_LOGIC_VECTOR (10 downto 0);
        sel : IN STD_LOGIC_VECTOR (3 downto 0);
        dout : OUT STD_LOGIC_VECTOR (10 downto 0) );
    end component;



begin
    sparsemux_31_4_11_1_0_x_U100 : component conifer_xgboost_moons_accelerator_sparsemux_31_4_11_1_0_x
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        CASE0 => "0000",
        din0_WIDTH => 11,
        CASE1 => "0001",
        din1_WIDTH => 11,
        CASE2 => "0010",
        din2_WIDTH => 11,
        CASE3 => "0011",
        din3_WIDTH => 11,
        CASE4 => "0100",
        din4_WIDTH => 11,
        CASE5 => "0101",
        din5_WIDTH => 11,
        CASE6 => "0110",
        din6_WIDTH => 11,
        CASE7 => "0111",
        din7_WIDTH => 11,
        CASE8 => "1000",
        din8_WIDTH => 11,
        CASE9 => "1001",
        din9_WIDTH => 11,
        CASE10 => "1010",
        din10_WIDTH => 11,
        CASE11 => "1011",
        din11_WIDTH => 11,
        CASE12 => "1100",
        din12_WIDTH => 11,
        CASE13 => "1101",
        din13_WIDTH => 11,
        CASE14 => "1110",
        din14_WIDTH => 11,
        def_WIDTH => 11,
        sel_WIDTH => 4,
        dout_WIDTH => 11)
    port map (
        din0 => ap_const_lv11_5D5,
        din1 => ap_const_lv11_FC,
        din2 => ap_const_lv11_637,
        din3 => ap_const_lv11_3A8,
        din4 => ap_const_lv11_84,
        din5 => ap_const_lv11_737,
        din6 => ap_const_lv11_5D0,
        din7 => ap_const_lv11_670,
        din8 => ap_const_lv11_4C,
        din9 => ap_const_lv11_579,
        din10 => ap_const_lv11_437,
        din11 => ap_const_lv11_81,
        din12 => ap_const_lv11_714,
        din13 => ap_const_lv11_64A,
        din14 => ap_const_lv11_762,
        def => agg_result_fu_568_p31,
        sel => agg_result_fu_568_p32,
        dout => agg_result_fu_568_p33);





    ap_ce_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            ap_ce_reg <= ap_ce;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce_reg))) then
                and_ln105_10_reg_729 <= and_ln105_10_fu_283_p2;
                and_ln105_10_reg_729_pp0_iter2_reg <= and_ln105_10_reg_729;
                and_ln105_11_reg_742 <= and_ln105_11_fu_299_p2;
                and_ln105_12_reg_747 <= and_ln105_12_fu_304_p2;
                and_ln105_13_reg_760 <= and_ln105_13_fu_325_p2;
                and_ln105_reg_718 <= and_ln105_fu_269_p2;
                and_ln107_2_reg_736 <= and_ln107_2_fu_293_p2;
                and_ln107_2_reg_736_pp0_iter2_reg <= and_ln107_2_reg_736;
                and_ln107_2_reg_736_pp0_iter3_reg <= and_ln107_2_reg_736_pp0_iter2_reg;
                and_ln107_reg_724 <= and_ln107_fu_278_p2;
                icmp_ln4_12_reg_647 <= icmp_ln4_12_fu_186_p2;
                icmp_ln4_13_reg_653 <= icmp_ln4_13_fu_192_p2;
                icmp_ln4_14_reg_659 <= icmp_ln4_14_fu_198_p2;
                icmp_ln4_14_reg_659_pp0_iter1_reg <= icmp_ln4_14_reg_659;
                icmp_ln4_15_reg_665 <= icmp_ln4_15_fu_204_p2;
                icmp_ln4_15_reg_665_pp0_iter1_reg <= icmp_ln4_15_reg_665;
                icmp_ln4_16_reg_671 <= icmp_ln4_16_fu_210_p2;
                icmp_ln4_16_reg_671_pp0_iter1_reg <= icmp_ln4_16_reg_671;
                icmp_ln4_16_reg_671_pp0_iter2_reg <= icmp_ln4_16_reg_671_pp0_iter1_reg;
                icmp_ln4_17_reg_677 <= icmp_ln4_17_fu_216_p2;
                icmp_ln4_17_reg_677_pp0_iter1_reg <= icmp_ln4_17_reg_677;
                icmp_ln4_17_reg_677_pp0_iter2_reg <= icmp_ln4_17_reg_677_pp0_iter1_reg;
                icmp_ln4_17_reg_677_pp0_iter3_reg <= icmp_ln4_17_reg_677_pp0_iter2_reg;
                icmp_ln4_18_reg_683 <= icmp_ln4_18_fu_222_p2;
                icmp_ln4_18_reg_683_pp0_iter1_reg <= icmp_ln4_18_reg_683;
                icmp_ln4_19_reg_688 <= icmp_ln4_19_fu_228_p2;
                icmp_ln4_19_reg_688_pp0_iter1_reg <= icmp_ln4_19_reg_688;
                icmp_ln4_20_reg_693 <= icmp_ln4_20_fu_234_p2;
                icmp_ln4_20_reg_693_pp0_iter1_reg <= icmp_ln4_20_reg_693;
                icmp_ln4_21_reg_698 <= icmp_ln4_21_fu_240_p2;
                icmp_ln4_21_reg_698_pp0_iter1_reg <= icmp_ln4_21_reg_698;
                icmp_ln4_21_reg_698_pp0_iter2_reg <= icmp_ln4_21_reg_698_pp0_iter1_reg;
                icmp_ln4_22_reg_703 <= icmp_ln4_22_fu_246_p2;
                icmp_ln4_22_reg_703_pp0_iter1_reg <= icmp_ln4_22_reg_703;
                icmp_ln4_22_reg_703_pp0_iter2_reg <= icmp_ln4_22_reg_703_pp0_iter1_reg;
                icmp_ln4_23_reg_708 <= icmp_ln4_23_fu_252_p2;
                icmp_ln4_23_reg_708_pp0_iter1_reg <= icmp_ln4_23_reg_708;
                icmp_ln4_23_reg_708_pp0_iter2_reg <= icmp_ln4_23_reg_708_pp0_iter1_reg;
                icmp_ln4_24_reg_713 <= icmp_ln4_24_fu_258_p2;
                icmp_ln4_24_reg_713_pp0_iter1_reg <= icmp_ln4_24_reg_713;
                icmp_ln4_24_reg_713_pp0_iter2_reg <= icmp_ln4_24_reg_713_pp0_iter1_reg;
                icmp_ln4_24_reg_713_pp0_iter3_reg <= icmp_ln4_24_reg_713_pp0_iter2_reg;
                icmp_ln4_reg_636 <= icmp_ln4_fu_180_p2;
                icmp_ln4_reg_636_pp0_iter1_reg <= icmp_ln4_reg_636;
                icmp_ln4_reg_636_pp0_iter2_reg <= icmp_ln4_reg_636_pp0_iter1_reg;
                or_ln120_12_reg_754 <= or_ln120_12_fu_309_p2;
                or_ln120_17_reg_765 <= or_ln120_17_fu_373_p2;
                or_ln120_21_reg_776 <= or_ln120_21_fu_485_p2;
                select_ln120_16_reg_771 <= select_ln120_16_fu_430_p3;
                select_ln120_22_reg_781 <= select_ln120_22_fu_533_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_ce_reg)) then
                ap_return_int_reg <= agg_result_fu_568_p33;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_ce)) then
                p_read1_int_reg <= p_read1;
                p_read2_int_reg <= p_read2;
                p_read3_int_reg <= p_read3;
                p_read4_int_reg <= p_read4;
                p_read5_int_reg <= p_read5;
                p_read6_int_reg <= p_read6;
                p_read7_int_reg <= p_read7;
                p_read8_int_reg <= p_read8;
            end if;
        end if;
    end process;
    agg_result_fu_568_p31 <= "XXXXXXXXXXX";
    agg_result_fu_568_p32 <= 
        select_ln120_22_reg_781 when (or_ln120_22_fu_556_p2(0) = '1') else 
        ap_const_lv4_E;
    and_ln105_10_fu_283_p2 <= (xor_ln107_fu_264_p2 and icmp_ln4_13_reg_653);
    and_ln105_11_fu_299_p2 <= (icmp_ln4_14_reg_659 and and_ln105_fu_269_p2);
    and_ln105_12_fu_304_p2 <= (icmp_ln4_15_reg_665 and and_ln107_fu_278_p2);
    and_ln105_13_fu_325_p2 <= (icmp_ln4_16_reg_671_pp0_iter1_reg and and_ln105_10_reg_729);
    and_ln105_14_fu_442_p2 <= (icmp_ln4_17_reg_677_pp0_iter2_reg and and_ln107_2_reg_736_pp0_iter2_reg);
    and_ln105_15_fu_329_p2 <= (icmp_ln4_18_reg_683_pp0_iter1_reg and and_ln105_11_reg_742);
    and_ln105_16_fu_338_p2 <= (and_ln105_reg_718 and and_ln105_22_fu_333_p2);
    and_ln105_17_fu_348_p2 <= (and_ln107_reg_724 and and_ln105_23_fu_343_p2);
    and_ln105_18_fu_446_p2 <= (icmp_ln4_21_reg_698_pp0_iter2_reg and and_ln105_13_reg_760);
    and_ln105_19_fu_455_p2 <= (and_ln105_24_fu_450_p2 and and_ln105_10_reg_729_pp0_iter2_reg);
    and_ln105_20_fu_460_p2 <= (icmp_ln4_23_reg_708_pp0_iter2_reg and and_ln105_14_fu_442_p2);
    and_ln105_21_fu_551_p2 <= (and_ln107_2_reg_736_pp0_iter3_reg and and_ln105_25_fu_546_p2);
    and_ln105_22_fu_333_p2 <= (xor_ln107_8_fu_315_p2 and icmp_ln4_19_reg_688_pp0_iter1_reg);
    and_ln105_23_fu_343_p2 <= (xor_ln107_9_fu_320_p2 and icmp_ln4_20_reg_693_pp0_iter1_reg);
    and_ln105_24_fu_450_p2 <= (xor_ln107_10_fu_437_p2 and icmp_ln4_22_reg_703_pp0_iter2_reg);
    and_ln105_25_fu_546_p2 <= (xor_ln107_11_fu_541_p2 and icmp_ln4_24_reg_713_pp0_iter3_reg);
    and_ln105_fu_269_p2 <= (icmp_ln4_reg_636 and icmp_ln4_12_reg_647);
    and_ln107_2_fu_293_p2 <= (xor_ln107_fu_264_p2 and xor_ln107_7_fu_288_p2);
    and_ln107_fu_278_p2 <= (xor_ln107_6_fu_273_p2 and icmp_ln4_reg_636);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_return_assign_proc : process(agg_result_fu_568_p33, ap_ce_reg, ap_return_int_reg)
    begin
        if ((ap_const_logic_0 = ap_ce_reg)) then 
            ap_return <= ap_return_int_reg;
        elsif ((ap_const_logic_1 = ap_ce_reg)) then 
            ap_return <= agg_result_fu_568_p33;
        else 
            ap_return <= "XXXXXXXXXXX";
        end if; 
    end process;

    icmp_ln4_12_fu_186_p2 <= "1" when (signed(p_read1_int_reg) < signed(ap_const_lv18_A80)) else "0";
    icmp_ln4_13_fu_192_p2 <= "1" when (signed(p_read7_int_reg) < signed(ap_const_lv18_3FA00)) else "0";
    icmp_ln4_14_fu_198_p2 <= "1" when (signed(p_read2_int_reg) < signed(ap_const_lv18_1080)) else "0";
    icmp_ln4_15_fu_204_p2 <= "1" when (signed(p_read2_int_reg) < signed(ap_const_lv18_1580)) else "0";
    icmp_ln4_16_fu_210_p2 <= "1" when (signed(p_read1_int_reg) < signed(ap_const_lv18_880)) else "0";
    icmp_ln4_17_fu_216_p2 <= "1" when (signed(p_read5_int_reg) < signed(ap_const_lv18_430)) else "0";
    icmp_ln4_18_fu_222_p2 <= "1" when (signed(p_read2_int_reg) < signed(ap_const_lv18_B80)) else "0";
    icmp_ln4_19_fu_228_p2 <= "1" when (signed(p_read7_int_reg) < signed(ap_const_lv18_3FE00)) else "0";
    icmp_ln4_20_fu_234_p2 <= "1" when (signed(p_read8_int_reg) < signed(ap_const_lv18_130)) else "0";
    icmp_ln4_21_fu_240_p2 <= "1" when (signed(p_read4_int_reg) < signed(ap_const_lv18_12E26)) else "0";
    icmp_ln4_22_fu_246_p2 <= "1" when (signed(p_read1_int_reg) < signed(ap_const_lv18_1B80)) else "0";
    icmp_ln4_23_fu_252_p2 <= "1" when (signed(p_read8_int_reg) < signed(ap_const_lv18_1D8)) else "0";
    icmp_ln4_24_fu_258_p2 <= "1" when (signed(p_read3_int_reg) < signed(ap_const_lv18_C692)) else "0";
    icmp_ln4_fu_180_p2 <= "1" when (signed(p_read6_int_reg) < signed(ap_const_lv18_2580)) else "0";
    or_ln120_12_fu_309_p2 <= (and_ln105_12_fu_304_p2 or and_ln105_11_fu_299_p2);
    or_ln120_13_fu_358_p2 <= (or_ln120_12_reg_754 or and_ln105_16_fu_338_p2);
    or_ln120_14_fu_363_p2 <= (and_ln105_reg_718 or and_ln105_12_reg_747);
    or_ln120_15_fu_367_p2 <= (or_ln120_14_fu_363_p2 or and_ln105_17_fu_348_p2);
    or_ln120_16_fu_465_p2 <= (icmp_ln4_reg_636_pp0_iter2_reg or and_ln105_18_fu_446_p2);
    or_ln120_17_fu_373_p2 <= (icmp_ln4_reg_636_pp0_iter1_reg or and_ln105_13_fu_325_p2);
    or_ln120_18_fu_470_p2 <= (or_ln120_17_reg_765 or and_ln105_19_fu_455_p2);
    or_ln120_19_fu_475_p2 <= (icmp_ln4_reg_636_pp0_iter2_reg or and_ln105_10_reg_729_pp0_iter2_reg);
    or_ln120_20_fu_479_p2 <= (or_ln120_19_fu_475_p2 or and_ln105_20_fu_460_p2);
    or_ln120_21_fu_485_p2 <= (or_ln120_19_fu_475_p2 or and_ln105_14_fu_442_p2);
    or_ln120_22_fu_556_p2 <= (or_ln120_21_reg_776 or and_ln105_21_fu_551_p2);
    or_ln120_fu_353_p2 <= (and_ln105_15_fu_329_p2 or and_ln105_12_reg_747);
    select_ln120_12_fu_395_p3 <= 
        select_ln120_fu_387_p3 when (or_ln120_12_reg_754(0) = '1') else 
        ap_const_lv2_3;
    select_ln120_13_fu_406_p3 <= 
        zext_ln120_3_fu_402_p1 when (or_ln120_13_fu_358_p2(0) = '1') else 
        ap_const_lv3_4;
    select_ln120_14_fu_414_p3 <= 
        select_ln120_13_fu_406_p3 when (or_ln120_14_fu_363_p2(0) = '1') else 
        ap_const_lv3_5;
    select_ln120_15_fu_422_p3 <= 
        select_ln120_14_fu_414_p3 when (or_ln120_15_fu_367_p2(0) = '1') else 
        ap_const_lv3_6;
    select_ln120_16_fu_430_p3 <= 
        select_ln120_15_fu_422_p3 when (icmp_ln4_reg_636_pp0_iter1_reg(0) = '1') else 
        ap_const_lv3_7;
    select_ln120_17_fu_494_p3 <= 
        zext_ln120_4_fu_491_p1 when (or_ln120_16_fu_465_p2(0) = '1') else 
        ap_const_lv4_8;
    select_ln120_18_fu_502_p3 <= 
        select_ln120_17_fu_494_p3 when (or_ln120_17_reg_765(0) = '1') else 
        ap_const_lv4_9;
    select_ln120_19_fu_509_p3 <= 
        select_ln120_18_fu_502_p3 when (or_ln120_18_fu_470_p2(0) = '1') else 
        ap_const_lv4_A;
    select_ln120_20_fu_517_p3 <= 
        select_ln120_19_fu_509_p3 when (or_ln120_19_fu_475_p2(0) = '1') else 
        ap_const_lv4_B;
    select_ln120_21_fu_525_p3 <= 
        select_ln120_20_fu_517_p3 when (or_ln120_20_fu_479_p2(0) = '1') else 
        ap_const_lv4_C;
    select_ln120_22_fu_533_p3 <= 
        select_ln120_21_fu_525_p3 when (or_ln120_21_fu_485_p2(0) = '1') else 
        ap_const_lv4_D;
    select_ln120_fu_387_p3 <= 
        zext_ln120_fu_383_p1 when (or_ln120_fu_353_p2(0) = '1') else 
        ap_const_lv2_2;
    xor_ln107_10_fu_437_p2 <= (icmp_ln4_16_reg_671_pp0_iter2_reg xor ap_const_lv1_1);
    xor_ln107_11_fu_541_p2 <= (icmp_ln4_17_reg_677_pp0_iter3_reg xor ap_const_lv1_1);
    xor_ln107_6_fu_273_p2 <= (icmp_ln4_12_reg_647 xor ap_const_lv1_1);
    xor_ln107_7_fu_288_p2 <= (icmp_ln4_13_reg_653 xor ap_const_lv1_1);
    xor_ln107_8_fu_315_p2 <= (icmp_ln4_14_reg_659_pp0_iter1_reg xor ap_const_lv1_1);
    xor_ln107_9_fu_320_p2 <= (icmp_ln4_15_reg_665_pp0_iter1_reg xor ap_const_lv1_1);
    xor_ln107_fu_264_p2 <= (icmp_ln4_reg_636 xor ap_const_lv1_1);
    xor_ln120_fu_378_p2 <= (ap_const_lv1_1 xor and_ln105_12_reg_747);
    zext_ln120_3_fu_402_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln120_12_fu_395_p3),3));
    zext_ln120_4_fu_491_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln120_16_reg_771),4));
    zext_ln120_fu_383_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(xor_ln120_fu_378_p2),2));
end behav;
