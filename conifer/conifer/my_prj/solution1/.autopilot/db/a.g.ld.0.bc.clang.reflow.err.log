remark: firmware/BDT.h:63:9: Adding 'tree_0_0 (.59)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.h:62:9: Adding 'tree_0_0 (.59)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.h:61:9: Adding 'tree_0_0 (.59)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.h:60:9: Adding 'tree_0_0 (.59)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.h:59:9: Adding 'tree_0_0 (.59)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.h:58:9: Adding 'tree_0_0 (.59)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.h:63:9: Adding 'tree_0_1 (.58)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.h:62:9: Adding 'tree_0_1 (.58)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.h:61:9: Adding 'tree_0_1 (.58)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.h:60:9: Adding 'tree_0_1 (.58)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.h:59:9: Adding 'tree_0_1 (.58)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.h:58:9: Adding 'tree_0_1 (.58)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.h:63:9: Adding 'tree_0_2 (.57)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.h:62:9: Adding 'tree_0_2 (.57)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.h:61:9: Adding 'tree_0_2 (.57)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.h:60:9: Adding 'tree_0_2 (.57)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.h:59:9: Adding 'tree_0_2 (.57)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.h:58:9: Adding 'tree_0_2 (.57)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.h:63:9: Adding 'tree_0_3 (.56)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.h:62:9: Adding 'tree_0_3 (.56)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.h:61:9: Adding 'tree_0_3 (.56)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.h:60:9: Adding 'tree_0_3 (.56)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.h:59:9: Adding 'tree_0_3 (.56)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.h:58:9: Adding 'tree_0_3 (.56)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.h:63:9: Adding 'tree_0_4 (.55)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.h:62:9: Adding 'tree_0_4 (.55)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.h:61:9: Adding 'tree_0_4 (.55)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.h:60:9: Adding 'tree_0_4 (.55)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.h:59:9: Adding 'tree_0_4 (.55)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.h:58:9: Adding 'tree_0_4 (.55)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.h:63:9: Adding 'tree_0_5 (.54)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.h:62:9: Adding 'tree_0_5 (.54)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.h:61:9: Adding 'tree_0_5 (.54)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.h:60:9: Adding 'tree_0_5 (.54)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.h:59:9: Adding 'tree_0_5 (.54)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.h:58:9: Adding 'tree_0_5 (.54)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.h:63:9: Adding 'tree_0_6 (.53)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.h:62:9: Adding 'tree_0_6 (.53)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.h:61:9: Adding 'tree_0_6 (.53)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.h:60:9: Adding 'tree_0_6 (.53)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.h:59:9: Adding 'tree_0_6 (.53)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.h:58:9: Adding 'tree_0_6 (.53)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.h:63:9: Adding 'tree_0_7 (.52)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.h:62:9: Adding 'tree_0_7 (.52)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.h:61:9: Adding 'tree_0_7 (.52)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.h:60:9: Adding 'tree_0_7 (.52)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.h:59:9: Adding 'tree_0_7 (.52)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.h:58:9: Adding 'tree_0_7 (.52)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.h:63:9: Adding 'tree_0_8 (.51)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.h:62:9: Adding 'tree_0_8 (.51)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.h:61:9: Adding 'tree_0_8 (.51)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.h:60:9: Adding 'tree_0_8 (.51)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.h:59:9: Adding 'tree_0_8 (.51)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.h:58:9: Adding 'tree_0_8 (.51)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.h:63:9: Adding 'tree_0_9 (.50)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.h:62:9: Adding 'tree_0_9 (.50)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.h:61:9: Adding 'tree_0_9 (.50)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.h:60:9: Adding 'tree_0_9 (.50)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.h:59:9: Adding 'tree_0_9 (.50)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.h:58:9: Adding 'tree_0_9 (.50)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.h:63:9: Adding 'tree_0_10 (.49)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.h:62:9: Adding 'tree_0_10 (.49)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.h:61:9: Adding 'tree_0_10 (.49)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.h:60:9: Adding 'tree_0_10 (.49)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.h:59:9: Adding 'tree_0_10 (.49)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.h:58:9: Adding 'tree_0_10 (.49)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.h:63:9: Adding 'tree_0_11 (.48)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.h:62:9: Adding 'tree_0_11 (.48)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.h:61:9: Adding 'tree_0_11 (.48)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.h:60:9: Adding 'tree_0_11 (.48)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.h:59:9: Adding 'tree_0_11 (.48)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.h:58:9: Adding 'tree_0_11 (.48)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.h:63:9: Adding 'tree_0_12 (.47)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.h:62:9: Adding 'tree_0_12 (.47)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.h:61:9: Adding 'tree_0_12 (.47)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.h:60:9: Adding 'tree_0_12 (.47)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.h:59:9: Adding 'tree_0_12 (.47)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.h:58:9: Adding 'tree_0_12 (.47)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.h:63:9: Adding 'tree_0_13 (.46)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.h:62:9: Adding 'tree_0_13 (.46)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.h:61:9: Adding 'tree_0_13 (.46)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.h:60:9: Adding 'tree_0_13 (.46)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.h:59:9: Adding 'tree_0_13 (.46)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.h:58:9: Adding 'tree_0_13 (.46)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.h:63:9: Adding 'tree_0_14 (.45)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.h:62:9: Adding 'tree_0_14 (.45)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.h:61:9: Adding 'tree_0_14 (.45)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.h:60:9: Adding 'tree_0_14 (.45)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.h:59:9: Adding 'tree_0_14 (.45)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.h:58:9: Adding 'tree_0_14 (.45)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.h:63:9: Adding 'tree_0_15 (.44)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.h:62:9: Adding 'tree_0_15 (.44)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.h:61:9: Adding 'tree_0_15 (.44)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.h:60:9: Adding 'tree_0_15 (.44)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.h:59:9: Adding 'tree_0_15 (.44)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.h:58:9: Adding 'tree_0_15 (.44)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.h:63:9: Adding 'tree_0_16 (.43)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.h:62:9: Adding 'tree_0_16 (.43)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.h:61:9: Adding 'tree_0_16 (.43)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.h:60:9: Adding 'tree_0_16 (.43)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.h:59:9: Adding 'tree_0_16 (.43)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.h:58:9: Adding 'tree_0_16 (.43)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.h:63:9: Adding 'tree_0_17 (.42)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.h:62:9: Adding 'tree_0_17 (.42)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.h:61:9: Adding 'tree_0_17 (.42)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.h:60:9: Adding 'tree_0_17 (.42)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.h:59:9: Adding 'tree_0_17 (.42)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.h:58:9: Adding 'tree_0_17 (.42)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.h:63:9: Adding 'tree_0_18 (.41)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.h:62:9: Adding 'tree_0_18 (.41)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.h:61:9: Adding 'tree_0_18 (.41)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.h:60:9: Adding 'tree_0_18 (.41)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.h:59:9: Adding 'tree_0_18 (.41)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.h:58:9: Adding 'tree_0_18 (.41)' into disaggregation list because there's array-partition pragma applied on the struct field
warning: firmware/my_prj.cpp:25:0: A depth specification is required for MAXI interface port 'x' for cosimulation.
warning: firmware/my_prj.cpp:25:0: A depth specification is required for MAXI interface port 'score' for cosimulation.
remark: firmware/BDT.cpp:26:29: Adding 'tree_0_18 (.41)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.cpp:26:29: Adding 'tree_0_18 (.41)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.cpp:26:29: Adding 'tree_0_18 (.41)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.cpp:26:29: Adding 'tree_0_18 (.41)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.cpp:26:29: Adding 'tree_0_18 (.41)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.cpp:26:29: Adding 'tree_0_18 (.41)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.cpp:25:29: Adding 'tree_0_17 (.42)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.cpp:25:29: Adding 'tree_0_17 (.42)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.cpp:25:29: Adding 'tree_0_17 (.42)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.cpp:25:29: Adding 'tree_0_17 (.42)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.cpp:25:29: Adding 'tree_0_17 (.42)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.cpp:25:29: Adding 'tree_0_17 (.42)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.cpp:24:29: Adding 'tree_0_16 (.43)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.cpp:24:29: Adding 'tree_0_16 (.43)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.cpp:24:29: Adding 'tree_0_16 (.43)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.cpp:24:29: Adding 'tree_0_16 (.43)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.cpp:24:29: Adding 'tree_0_16 (.43)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.cpp:24:29: Adding 'tree_0_16 (.43)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.cpp:23:29: Adding 'tree_0_15 (.44)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.cpp:23:29: Adding 'tree_0_15 (.44)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.cpp:23:29: Adding 'tree_0_15 (.44)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.cpp:23:29: Adding 'tree_0_15 (.44)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.cpp:23:29: Adding 'tree_0_15 (.44)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.cpp:23:29: Adding 'tree_0_15 (.44)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.cpp:22:29: Adding 'tree_0_14 (.45)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.cpp:22:29: Adding 'tree_0_14 (.45)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.cpp:22:29: Adding 'tree_0_14 (.45)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.cpp:22:29: Adding 'tree_0_14 (.45)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.cpp:22:29: Adding 'tree_0_14 (.45)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.cpp:22:29: Adding 'tree_0_14 (.45)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.cpp:21:29: Adding 'tree_0_13 (.46)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.cpp:21:29: Adding 'tree_0_13 (.46)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.cpp:21:29: Adding 'tree_0_13 (.46)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.cpp:21:29: Adding 'tree_0_13 (.46)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.cpp:21:29: Adding 'tree_0_13 (.46)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.cpp:21:29: Adding 'tree_0_13 (.46)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.cpp:20:29: Adding 'tree_0_12 (.47)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.cpp:20:29: Adding 'tree_0_12 (.47)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.cpp:20:29: Adding 'tree_0_12 (.47)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.cpp:20:29: Adding 'tree_0_12 (.47)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.cpp:20:29: Adding 'tree_0_12 (.47)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.cpp:20:29: Adding 'tree_0_12 (.47)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.cpp:19:29: Adding 'tree_0_11 (.48)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.cpp:19:29: Adding 'tree_0_11 (.48)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.cpp:19:29: Adding 'tree_0_11 (.48)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.cpp:19:29: Adding 'tree_0_11 (.48)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.cpp:19:29: Adding 'tree_0_11 (.48)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.cpp:19:29: Adding 'tree_0_11 (.48)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.cpp:18:29: Adding 'tree_0_10 (.49)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.cpp:18:29: Adding 'tree_0_10 (.49)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.cpp:18:29: Adding 'tree_0_10 (.49)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.cpp:18:29: Adding 'tree_0_10 (.49)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.cpp:18:29: Adding 'tree_0_10 (.49)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.cpp:18:29: Adding 'tree_0_10 (.49)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.cpp:17:27: Adding 'tree_0_9 (.50)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.cpp:17:27: Adding 'tree_0_9 (.50)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.cpp:17:27: Adding 'tree_0_9 (.50)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.cpp:17:27: Adding 'tree_0_9 (.50)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.cpp:17:27: Adding 'tree_0_9 (.50)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.cpp:17:27: Adding 'tree_0_9 (.50)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.cpp:16:27: Adding 'tree_0_8 (.51)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.cpp:16:27: Adding 'tree_0_8 (.51)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.cpp:16:27: Adding 'tree_0_8 (.51)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.cpp:16:27: Adding 'tree_0_8 (.51)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.cpp:16:27: Adding 'tree_0_8 (.51)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.cpp:16:27: Adding 'tree_0_8 (.51)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.cpp:15:27: Adding 'tree_0_7 (.52)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.cpp:15:27: Adding 'tree_0_7 (.52)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.cpp:15:27: Adding 'tree_0_7 (.52)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.cpp:15:27: Adding 'tree_0_7 (.52)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.cpp:15:27: Adding 'tree_0_7 (.52)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.cpp:15:27: Adding 'tree_0_7 (.52)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.cpp:14:27: Adding 'tree_0_6 (.53)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.cpp:14:27: Adding 'tree_0_6 (.53)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.cpp:14:27: Adding 'tree_0_6 (.53)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.cpp:14:27: Adding 'tree_0_6 (.53)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.cpp:14:27: Adding 'tree_0_6 (.53)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.cpp:14:27: Adding 'tree_0_6 (.53)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.cpp:13:27: Adding 'tree_0_5 (.54)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.cpp:13:27: Adding 'tree_0_5 (.54)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.cpp:13:27: Adding 'tree_0_5 (.54)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.cpp:13:27: Adding 'tree_0_5 (.54)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.cpp:13:27: Adding 'tree_0_5 (.54)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.cpp:13:27: Adding 'tree_0_5 (.54)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.cpp:12:27: Adding 'tree_0_4 (.55)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.cpp:12:27: Adding 'tree_0_4 (.55)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.cpp:12:27: Adding 'tree_0_4 (.55)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.cpp:12:27: Adding 'tree_0_4 (.55)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.cpp:12:27: Adding 'tree_0_4 (.55)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.cpp:12:27: Adding 'tree_0_4 (.55)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.cpp:11:27: Adding 'tree_0_3 (.56)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.cpp:11:27: Adding 'tree_0_3 (.56)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.cpp:11:27: Adding 'tree_0_3 (.56)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.cpp:11:27: Adding 'tree_0_3 (.56)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.cpp:11:27: Adding 'tree_0_3 (.56)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.cpp:11:27: Adding 'tree_0_3 (.56)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.cpp:10:27: Adding 'tree_0_2 (.57)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.cpp:10:27: Adding 'tree_0_2 (.57)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.cpp:10:27: Adding 'tree_0_2 (.57)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.cpp:10:27: Adding 'tree_0_2 (.57)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.cpp:10:27: Adding 'tree_0_2 (.57)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.cpp:10:27: Adding 'tree_0_2 (.57)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.cpp:9:27: Adding 'tree_0_1 (.58)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.cpp:9:27: Adding 'tree_0_1 (.58)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.cpp:9:27: Adding 'tree_0_1 (.58)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.cpp:9:27: Adding 'tree_0_1 (.58)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.cpp:9:27: Adding 'tree_0_1 (.58)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.cpp:9:27: Adding 'tree_0_1 (.58)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.cpp:8:27: Adding 'tree_0_0 (.59)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.cpp:8:27: Adding 'tree_0_0 (.59)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.cpp:8:27: Adding 'tree_0_0 (.59)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.cpp:8:27: Adding 'tree_0_0 (.59)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.cpp:8:27: Adding 'tree_0_0 (.59)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/BDT.cpp:8:27: Adding 'tree_0_0 (.59)' into disaggregation list because there's array-partition pragma applied on the struct field
remark: firmware/parameters.h:26:0: Disaggregating variable 'tree_0_0 (.59)'
remark: firmware/parameters.h:34:0: Disaggregating variable 'tree_0_1 (.58)'
remark: firmware/parameters.h:42:0: Disaggregating variable 'tree_0_2 (.57)'
remark: firmware/parameters.h:50:0: Disaggregating variable 'tree_0_3 (.56)'
remark: firmware/parameters.h:58:0: Disaggregating variable 'tree_0_4 (.55)'
remark: firmware/parameters.h:66:0: Disaggregating variable 'tree_0_5 (.54)'
remark: firmware/parameters.h:74:0: Disaggregating variable 'tree_0_6 (.53)'
remark: firmware/parameters.h:82:0: Disaggregating variable 'tree_0_7 (.52)'
remark: firmware/parameters.h:90:0: Disaggregating variable 'tree_0_8 (.51)'
remark: firmware/parameters.h:98:0: Disaggregating variable 'tree_0_9 (.50)'
remark: firmware/parameters.h:106:0: Disaggregating variable 'tree_0_10 (.49)'
remark: firmware/parameters.h:114:0: Disaggregating variable 'tree_0_11 (.48)'
remark: firmware/parameters.h:122:0: Disaggregating variable 'tree_0_12 (.47)'
remark: firmware/parameters.h:130:0: Disaggregating variable 'tree_0_13 (.46)'
remark: firmware/parameters.h:138:0: Disaggregating variable 'tree_0_14 (.45)'
remark: firmware/parameters.h:146:0: Disaggregating variable 'tree_0_15 (.44)'
remark: firmware/parameters.h:154:0: Disaggregating variable 'tree_0_16 (.43)'
remark: firmware/parameters.h:162:0: Disaggregating variable 'tree_0_17 (.42)'
remark: firmware/parameters.h:170:0: Disaggregating variable 'tree_0_18 (.41)'
remark: firmware/my_prj.cpp:20:20: Loop 'VITIS_LOOP_20_1' is marked as complete unroll implied by the pipeline pragma
remark: firmware/BDT.h:152:23: Loop 'VITIS_LOOP_152_1' is marked as complete unroll implied by the pipeline pragma
remark: firmware/BDT.h:145:5: Loop 'Reduce' is marked as complete unroll implied by the pipeline pragma
remark: firmware/BDT.h:119:23: Loop 'VITIS_LOOP_119_1' is marked as complete unroll implied by the pipeline pragma
remark: firmware/BDT.h:97:15: Loop 'Activate' is marked as complete unroll implied by the pipeline pragma
remark: firmware/BDT.h:84:11: Loop 'Compare' is marked as complete unroll implied by the pipeline pragma
remark: firmware/BDT.h:119:23: Loop 'VITIS_LOOP_119_1' is marked as complete unroll implied by the pipeline pragma
remark: firmware/BDT.h:97:15: Loop 'Activate' is marked as complete unroll implied by the pipeline pragma
remark: firmware/BDT.h:84:11: Loop 'Compare' is marked as complete unroll implied by the pipeline pragma
remark: firmware/BDT.h:119:23: Loop 'VITIS_LOOP_119_1' is marked as complete unroll implied by the pipeline pragma
remark: firmware/BDT.h:97:15: Loop 'Activate' is marked as complete unroll implied by the pipeline pragma
remark: firmware/BDT.h:84:11: Loop 'Compare' is marked as complete unroll implied by the pipeline pragma
remark: firmware/BDT.h:119:23: Loop 'VITIS_LOOP_119_1' is marked as complete unroll implied by the pipeline pragma
remark: firmware/BDT.h:97:15: Loop 'Activate' is marked as complete unroll implied by the pipeline pragma
remark: firmware/BDT.h:84:11: Loop 'Compare' is marked as complete unroll implied by the pipeline pragma
remark: firmware/BDT.h:119:23: Loop 'VITIS_LOOP_119_1' is marked as complete unroll implied by the pipeline pragma
remark: firmware/BDT.h:97:15: Loop 'Activate' is marked as complete unroll implied by the pipeline pragma
remark: firmware/BDT.h:84:11: Loop 'Compare' is marked as complete unroll implied by the pipeline pragma
remark: firmware/BDT.h:119:23: Loop 'VITIS_LOOP_119_1' is marked as complete unroll implied by the pipeline pragma
remark: firmware/BDT.h:97:15: Loop 'Activate' is marked as complete unroll implied by the pipeline pragma
remark: firmware/BDT.h:84:11: Loop 'Compare' is marked as complete unroll implied by the pipeline pragma
remark: firmware/BDT.h:119:23: Loop 'VITIS_LOOP_119_1' is marked as complete unroll implied by the pipeline pragma
remark: firmware/BDT.h:97:15: Loop 'Activate' is marked as complete unroll implied by the pipeline pragma
remark: firmware/BDT.h:84:11: Loop 'Compare' is marked as complete unroll implied by the pipeline pragma
remark: firmware/BDT.h:119:23: Loop 'VITIS_LOOP_119_1' is marked as complete unroll implied by the pipeline pragma
remark: firmware/BDT.h:97:15: Loop 'Activate' is marked as complete unroll implied by the pipeline pragma
remark: firmware/BDT.h:84:11: Loop 'Compare' is marked as complete unroll implied by the pipeline pragma
remark: firmware/BDT.h:119:23: Loop 'VITIS_LOOP_119_1' is marked as complete unroll implied by the pipeline pragma
remark: firmware/BDT.h:97:15: Loop 'Activate' is marked as complete unroll implied by the pipeline pragma
remark: firmware/BDT.h:84:11: Loop 'Compare' is marked as complete unroll implied by the pipeline pragma
remark: firmware/BDT.h:119:23: Loop 'VITIS_LOOP_119_1' is marked as complete unroll implied by the pipeline pragma
remark: firmware/BDT.h:97:15: Loop 'Activate' is marked as complete unroll implied by the pipeline pragma
remark: firmware/BDT.h:84:11: Loop 'Compare' is marked as complete unroll implied by the pipeline pragma
remark: firmware/BDT.h:119:23: Loop 'VITIS_LOOP_119_1' is marked as complete unroll implied by the pipeline pragma
remark: firmware/BDT.h:97:15: Loop 'Activate' is marked as complete unroll implied by the pipeline pragma
remark: firmware/BDT.h:84:11: Loop 'Compare' is marked as complete unroll implied by the pipeline pragma
remark: firmware/BDT.h:119:23: Loop 'VITIS_LOOP_119_1' is marked as complete unroll implied by the pipeline pragma
remark: firmware/BDT.h:97:15: Loop 'Activate' is marked as complete unroll implied by the pipeline pragma
remark: firmware/BDT.h:84:11: Loop 'Compare' is marked as complete unroll implied by the pipeline pragma
remark: firmware/BDT.h:119:23: Loop 'VITIS_LOOP_119_1' is marked as complete unroll implied by the pipeline pragma
remark: firmware/BDT.h:97:15: Loop 'Activate' is marked as complete unroll implied by the pipeline pragma
remark: firmware/BDT.h:84:11: Loop 'Compare' is marked as complete unroll implied by the pipeline pragma
remark: firmware/BDT.h:119:23: Loop 'VITIS_LOOP_119_1' is marked as complete unroll implied by the pipeline pragma
remark: firmware/BDT.h:97:15: Loop 'Activate' is marked as complete unroll implied by the pipeline pragma
remark: firmware/BDT.h:84:11: Loop 'Compare' is marked as complete unroll implied by the pipeline pragma
remark: firmware/BDT.h:119:23: Loop 'VITIS_LOOP_119_1' is marked as complete unroll implied by the pipeline pragma
remark: firmware/BDT.h:97:15: Loop 'Activate' is marked as complete unroll implied by the pipeline pragma
remark: firmware/BDT.h:84:11: Loop 'Compare' is marked as complete unroll implied by the pipeline pragma
remark: firmware/BDT.h:119:23: Loop 'VITIS_LOOP_119_1' is marked as complete unroll implied by the pipeline pragma
remark: firmware/BDT.h:97:15: Loop 'Activate' is marked as complete unroll implied by the pipeline pragma
remark: firmware/BDT.h:84:11: Loop 'Compare' is marked as complete unroll implied by the pipeline pragma
remark: firmware/BDT.h:119:23: Loop 'VITIS_LOOP_119_1' is marked as complete unroll implied by the pipeline pragma
remark: firmware/BDT.h:97:15: Loop 'Activate' is marked as complete unroll implied by the pipeline pragma
remark: firmware/BDT.h:84:11: Loop 'Compare' is marked as complete unroll implied by the pipeline pragma
remark: firmware/BDT.h:119:23: Loop 'VITIS_LOOP_119_1' is marked as complete unroll implied by the pipeline pragma
remark: firmware/BDT.h:97:15: Loop 'Activate' is marked as complete unroll implied by the pipeline pragma
remark: firmware/BDT.h:84:11: Loop 'Compare' is marked as complete unroll implied by the pipeline pragma
remark: firmware/BDT.h:119:23: Loop 'VITIS_LOOP_119_1' is marked as complete unroll implied by the pipeline pragma
remark: firmware/BDT.h:97:15: Loop 'Activate' is marked as complete unroll implied by the pipeline pragma
remark: firmware/BDT.h:84:11: Loop 'Compare' is marked as complete unroll implied by the pipeline pragma
remark: firmware/my_prj.cpp:14:20: Loop 'VITIS_LOOP_14_1' is marked as complete unroll implied by the pipeline pragma
remark: firmware/my_prj.cpp:19:0: Unrolling loop 'VITIS_LOOP_20_1' (firmware/my_prj.cpp:20:20) in function 'copy_output' completely with a factor of 1
remark: firmware/BDT.h:138:0: Unrolling loop 'VITIS_LOOP_152_1' (firmware/BDT.h:152:23) in function 'BDT::BDT<19, 2, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> [10], ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> >::decision_function' completely with a factor of 1
remark: firmware/BDT.h:138:0: Unrolling loop 'Reduce' (firmware/BDT.h:145:5) in function 'BDT::BDT<19, 2, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> [10], ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> >::decision_function' completely with a factor of 1
remark: firmware/BDT.h:56:0: Unrolling loop 'VITIS_LOOP_119_1' (firmware/BDT.h:119:23) in function 'BDT::Tree<18, 17, 9, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> [10], ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> >::decision_function<ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> >' completely with a factor of 9
remark: firmware/BDT.h:56:0: Unrolling loop 'Activate' (firmware/BDT.h:97:15) in function 'BDT::Tree<18, 17, 9, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> [10], ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> >::decision_function<ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> >' completely with a factor of 17
remark: firmware/BDT.h:56:0: Unrolling loop 'Compare' (firmware/BDT.h:84:11) in function 'BDT::Tree<18, 17, 9, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> [10], ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> >::decision_function<ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> >' completely with a factor of 17
remark: firmware/BDT.h:56:0: Unrolling loop 'VITIS_LOOP_119_1' (firmware/BDT.h:119:23) in function 'BDT::Tree<17, 23, 12, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> [10], ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> >::decision_function<ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> >' completely with a factor of 12
remark: firmware/BDT.h:56:0: Unrolling loop 'Activate' (firmware/BDT.h:97:15) in function 'BDT::Tree<17, 23, 12, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> [10], ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> >::decision_function<ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> >' completely with a factor of 23
remark: firmware/BDT.h:56:0: Unrolling loop 'Compare' (firmware/BDT.h:84:11) in function 'BDT::Tree<17, 23, 12, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> [10], ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> >::decision_function<ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> >' completely with a factor of 23
remark: firmware/BDT.h:56:0: Unrolling loop 'VITIS_LOOP_119_1' (firmware/BDT.h:119:23) in function 'BDT::Tree<16, 29, 15, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> [10], ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> >::decision_function<ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> >' completely with a factor of 15
remark: firmware/BDT.h:56:0: Unrolling loop 'Activate' (firmware/BDT.h:97:15) in function 'BDT::Tree<16, 29, 15, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> [10], ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> >::decision_function<ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> >' completely with a factor of 29
remark: firmware/BDT.h:56:0: Unrolling loop 'Compare' (firmware/BDT.h:84:11) in function 'BDT::Tree<16, 29, 15, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> [10], ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> >::decision_function<ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> >' completely with a factor of 29
remark: firmware/BDT.h:56:0: Unrolling loop 'VITIS_LOOP_119_1' (firmware/BDT.h:119:23) in function 'BDT::Tree<15, 17, 9, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> [10], ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> >::decision_function<ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> >' completely with a factor of 9
remark: firmware/BDT.h:56:0: Unrolling loop 'Activate' (firmware/BDT.h:97:15) in function 'BDT::Tree<15, 17, 9, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> [10], ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> >::decision_function<ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> >' completely with a factor of 17
remark: firmware/BDT.h:56:0: Unrolling loop 'Compare' (firmware/BDT.h:84:11) in function 'BDT::Tree<15, 17, 9, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> [10], ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> >::decision_function<ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> >' completely with a factor of 17
remark: firmware/BDT.h:56:0: Unrolling loop 'VITIS_LOOP_119_1' (firmware/BDT.h:119:23) in function 'BDT::Tree<14, 29, 15, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> [10], ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> >::decision_function<ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> >' completely with a factor of 15
remark: firmware/BDT.h:56:0: Unrolling loop 'Activate' (firmware/BDT.h:97:15) in function 'BDT::Tree<14, 29, 15, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> [10], ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> >::decision_function<ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> >' completely with a factor of 29
remark: firmware/BDT.h:56:0: Unrolling loop 'Compare' (firmware/BDT.h:84:11) in function 'BDT::Tree<14, 29, 15, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> [10], ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> >::decision_function<ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> >' completely with a factor of 29
remark: firmware/BDT.h:56:0: Unrolling loop 'VITIS_LOOP_119_1' (firmware/BDT.h:119:23) in function 'BDT::Tree<13, 31, 16, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> [10], ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> >::decision_function<ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> >' completely with a factor of 16
remark: firmware/BDT.h:56:0: Unrolling loop 'Activate' (firmware/BDT.h:97:15) in function 'BDT::Tree<13, 31, 16, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> [10], ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> >::decision_function<ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> >' completely with a factor of 31
remark: firmware/BDT.h:56:0: Unrolling loop 'Compare' (firmware/BDT.h:84:11) in function 'BDT::Tree<13, 31, 16, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> [10], ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> >::decision_function<ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> >' completely with a factor of 31
remark: firmware/BDT.h:56:0: Unrolling loop 'VITIS_LOOP_119_1' (firmware/BDT.h:119:23) in function 'BDT::Tree<12, 27, 14, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> [10], ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> >::decision_function<ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> >' completely with a factor of 14
remark: firmware/BDT.h:56:0: Unrolling loop 'Activate' (firmware/BDT.h:97:15) in function 'BDT::Tree<12, 27, 14, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> [10], ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> >::decision_function<ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> >' completely with a factor of 27
remark: firmware/BDT.h:56:0: Unrolling loop 'Compare' (firmware/BDT.h:84:11) in function 'BDT::Tree<12, 27, 14, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> [10], ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> >::decision_function<ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> >' completely with a factor of 27
remark: firmware/BDT.h:56:0: Unrolling loop 'VITIS_LOOP_119_1' (firmware/BDT.h:119:23) in function 'BDT::Tree<11, 31, 16, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> [10], ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> >::decision_function<ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> >' completely with a factor of 16
remark: firmware/BDT.h:56:0: Unrolling loop 'Activate' (firmware/BDT.h:97:15) in function 'BDT::Tree<11, 31, 16, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> [10], ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> >::decision_function<ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> >' completely with a factor of 31
remark: firmware/BDT.h:56:0: Unrolling loop 'Compare' (firmware/BDT.h:84:11) in function 'BDT::Tree<11, 31, 16, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> [10], ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> >::decision_function<ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> >' completely with a factor of 31
remark: firmware/BDT.h:56:0: Unrolling loop 'VITIS_LOOP_119_1' (firmware/BDT.h:119:23) in function 'BDT::Tree<10, 23, 12, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> [10], ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> >::decision_function<ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> >' completely with a factor of 12
remark: firmware/BDT.h:56:0: Unrolling loop 'Activate' (firmware/BDT.h:97:15) in function 'BDT::Tree<10, 23, 12, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> [10], ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> >::decision_function<ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> >' completely with a factor of 23
remark: firmware/BDT.h:56:0: Unrolling loop 'Compare' (firmware/BDT.h:84:11) in function 'BDT::Tree<10, 23, 12, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> [10], ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> >::decision_function<ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> >' completely with a factor of 23
remark: firmware/BDT.h:56:0: Unrolling loop 'VITIS_LOOP_119_1' (firmware/BDT.h:119:23) in function 'BDT::Tree<9, 25, 13, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> [10], ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> >::decision_function<ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> >' completely with a factor of 13
remark: firmware/BDT.h:56:0: Unrolling loop 'Activate' (firmware/BDT.h:97:15) in function 'BDT::Tree<9, 25, 13, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> [10], ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> >::decision_function<ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> >' completely with a factor of 25
remark: firmware/BDT.h:56:0: Unrolling loop 'Compare' (firmware/BDT.h:84:11) in function 'BDT::Tree<9, 25, 13, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> [10], ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> >::decision_function<ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> >' completely with a factor of 25
remark: firmware/BDT.h:56:0: Unrolling loop 'VITIS_LOOP_119_1' (firmware/BDT.h:119:23) in function 'BDT::Tree<8, 29, 15, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> [10], ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> >::decision_function<ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> >' completely with a factor of 15
remark: firmware/BDT.h:56:0: Unrolling loop 'Activate' (firmware/BDT.h:97:15) in function 'BDT::Tree<8, 29, 15, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> [10], ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> >::decision_function<ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> >' completely with a factor of 29
remark: firmware/BDT.h:56:0: Unrolling loop 'Compare' (firmware/BDT.h:84:11) in function 'BDT::Tree<8, 29, 15, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> [10], ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> >::decision_function<ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> >' completely with a factor of 29
remark: firmware/BDT.h:56:0: Unrolling loop 'VITIS_LOOP_119_1' (firmware/BDT.h:119:23) in function 'BDT::Tree<7, 29, 15, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> [10], ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> >::decision_function<ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> >' completely with a factor of 15
remark: firmware/BDT.h:56:0: Unrolling loop 'Activate' (firmware/BDT.h:97:15) in function 'BDT::Tree<7, 29, 15, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> [10], ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> >::decision_function<ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> >' completely with a factor of 29
remark: firmware/BDT.h:56:0: Unrolling loop 'Compare' (firmware/BDT.h:84:11) in function 'BDT::Tree<7, 29, 15, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> [10], ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> >::decision_function<ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> >' completely with a factor of 29
remark: firmware/BDT.h:56:0: Unrolling loop 'VITIS_LOOP_119_1' (firmware/BDT.h:119:23) in function 'BDT::Tree<6, 31, 16, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> [10], ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> >::decision_function<ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> >' completely with a factor of 16
remark: firmware/BDT.h:56:0: Unrolling loop 'Activate' (firmware/BDT.h:97:15) in function 'BDT::Tree<6, 31, 16, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> [10], ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> >::decision_function<ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> >' completely with a factor of 31
remark: firmware/BDT.h:56:0: Unrolling loop 'Compare' (firmware/BDT.h:84:11) in function 'BDT::Tree<6, 31, 16, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> [10], ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> >::decision_function<ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> >' completely with a factor of 31
remark: firmware/BDT.h:56:0: Unrolling loop 'VITIS_LOOP_119_1' (firmware/BDT.h:119:23) in function 'BDT::Tree<5, 31, 16, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> [10], ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> >::decision_function<ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> >' completely with a factor of 16
remark: firmware/BDT.h:56:0: Unrolling loop 'Activate' (firmware/BDT.h:97:15) in function 'BDT::Tree<5, 31, 16, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> [10], ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> >::decision_function<ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> >' completely with a factor of 31
remark: firmware/BDT.h:56:0: Unrolling loop 'Compare' (firmware/BDT.h:84:11) in function 'BDT::Tree<5, 31, 16, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> [10], ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> >::decision_function<ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> >' completely with a factor of 31
remark: firmware/BDT.h:56:0: Unrolling loop 'VITIS_LOOP_119_1' (firmware/BDT.h:119:23) in function 'BDT::Tree<4, 29, 15, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> [10], ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> >::decision_function<ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> >' completely with a factor of 15
remark: firmware/BDT.h:56:0: Unrolling loop 'Activate' (firmware/BDT.h:97:15) in function 'BDT::Tree<4, 29, 15, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> [10], ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> >::decision_function<ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> >' completely with a factor of 29
remark: firmware/BDT.h:56:0: Unrolling loop 'Compare' (firmware/BDT.h:84:11) in function 'BDT::Tree<4, 29, 15, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> [10], ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> >::decision_function<ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> >' completely with a factor of 29
remark: firmware/BDT.h:56:0: Unrolling loop 'VITIS_LOOP_119_1' (firmware/BDT.h:119:23) in function 'BDT::Tree<3, 31, 16, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> [10], ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> >::decision_function<ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> >' completely with a factor of 16
remark: firmware/BDT.h:56:0: Unrolling loop 'Activate' (firmware/BDT.h:97:15) in function 'BDT::Tree<3, 31, 16, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> [10], ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> >::decision_function<ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> >' completely with a factor of 31
remark: firmware/BDT.h:56:0: Unrolling loop 'Compare' (firmware/BDT.h:84:11) in function 'BDT::Tree<3, 31, 16, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> [10], ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> >::decision_function<ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> >' completely with a factor of 31
remark: firmware/BDT.h:56:0: Unrolling loop 'VITIS_LOOP_119_1' (firmware/BDT.h:119:23) in function 'BDT::Tree<2, 31, 16, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> [10], ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> >::decision_function<ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> >' completely with a factor of 16
remark: firmware/BDT.h:56:0: Unrolling loop 'Activate' (firmware/BDT.h:97:15) in function 'BDT::Tree<2, 31, 16, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> [10], ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> >::decision_function<ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> >' completely with a factor of 31
remark: firmware/BDT.h:56:0: Unrolling loop 'Compare' (firmware/BDT.h:84:11) in function 'BDT::Tree<2, 31, 16, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> [10], ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> >::decision_function<ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> >' completely with a factor of 31
remark: firmware/BDT.h:56:0: Unrolling loop 'VITIS_LOOP_119_1' (firmware/BDT.h:119:23) in function 'BDT::Tree<1, 31, 16, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> [10], ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> >::decision_function<ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> >' completely with a factor of 16
remark: firmware/BDT.h:56:0: Unrolling loop 'Activate' (firmware/BDT.h:97:15) in function 'BDT::Tree<1, 31, 16, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> [10], ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> >::decision_function<ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> >' completely with a factor of 31
remark: firmware/BDT.h:56:0: Unrolling loop 'Compare' (firmware/BDT.h:84:11) in function 'BDT::Tree<1, 31, 16, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> [10], ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> >::decision_function<ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> >' completely with a factor of 31
remark: firmware/BDT.h:56:0: Unrolling loop 'VITIS_LOOP_119_1' (firmware/BDT.h:119:23) in function 'BDT::Tree<0, 31, 16, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> [10], ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> >::decision_function<ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> >' completely with a factor of 16
remark: firmware/BDT.h:56:0: Unrolling loop 'Activate' (firmware/BDT.h:97:15) in function 'BDT::Tree<0, 31, 16, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> [10], ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> >::decision_function<ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> >' completely with a factor of 31
remark: firmware/BDT.h:56:0: Unrolling loop 'Compare' (firmware/BDT.h:84:11) in function 'BDT::Tree<0, 31, 16, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> [10], ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> >::decision_function<ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> >' completely with a factor of 31
remark: firmware/my_prj.cpp:13:0: Unrolling loop 'VITIS_LOOP_14_1' (firmware/my_prj.cpp:14:20) in function 'copy_input' completely with a factor of 10
remark: firmware/BDT.cpp:4:0: Inlining function '$_0::operator()(ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const*, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const*) const' into '$_0::__invoke(ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const*, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const*) (.115)'
remark: firmware/BDT.cpp:4:0: Inlining function '$_0::operator()(ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const*, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const*) const (.96.152)' into '$_0::__invoke(ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const*, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const*)'
remark: firmware/BDT.h:56:0: Inlining function '$_0::__invoke(ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const*, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const*)' into 'ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> BDT::Tree<0, 31, 16, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> [10], ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> >::decision_function<ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> >(ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0>*, bool (*)(ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const*, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const*)) const'
remark: firmware/BDT.h:56:0: Inlining function '$_0::__invoke(ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const*, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const*)' into 'ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> BDT::Tree<1, 31, 16, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> [10], ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> >::decision_function<ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> >(ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0>*, bool (*)(ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const*, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const*)) const'
remark: firmware/BDT.h:56:0: Inlining function '$_0::__invoke(ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const*, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const*)' into 'ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> BDT::Tree<2, 31, 16, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> [10], ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> >::decision_function<ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> >(ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0>*, bool (*)(ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const*, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const*)) const'
remark: firmware/BDT.h:56:0: Inlining function '$_0::__invoke(ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const*, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const*)' into 'ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> BDT::Tree<3, 31, 16, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> [10], ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> >::decision_function<ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> >(ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0>*, bool (*)(ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const*, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const*)) const'
remark: firmware/BDT.h:56:0: Inlining function '$_0::__invoke(ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const*, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const*)' into 'ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> BDT::Tree<4, 29, 15, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> [10], ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> >::decision_function<ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> >(ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0>*, bool (*)(ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const*, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const*)) const'
remark: firmware/BDT.h:56:0: Inlining function '$_0::__invoke(ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const*, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const*)' into 'ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> BDT::Tree<5, 31, 16, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> [10], ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> >::decision_function<ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> >(ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0>*, bool (*)(ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const*, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const*)) const'
remark: firmware/BDT.h:56:0: Inlining function '$_0::__invoke(ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const*, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const*)' into 'ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> BDT::Tree<6, 31, 16, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> [10], ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> >::decision_function<ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> >(ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0>*, bool (*)(ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const*, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const*)) const'
remark: firmware/BDT.h:56:0: Inlining function '$_0::__invoke(ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const*, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const*)' into 'ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> BDT::Tree<7, 29, 15, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> [10], ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> >::decision_function<ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> >(ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0>*, bool (*)(ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const*, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const*)) const'
remark: firmware/BDT.h:56:0: Inlining function '$_0::__invoke(ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const*, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const*)' into 'ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> BDT::Tree<8, 29, 15, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> [10], ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> >::decision_function<ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> >(ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0>*, bool (*)(ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const*, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const*)) const'
remark: firmware/BDT.h:56:0: Inlining function '$_0::__invoke(ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const*, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const*)' into 'ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> BDT::Tree<9, 25, 13, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> [10], ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> >::decision_function<ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> >(ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0>*, bool (*)(ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const*, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const*)) const'
remark: firmware/BDT.h:56:0: Inlining function '$_0::__invoke(ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const*, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const*)' into 'ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> BDT::Tree<10, 23, 12, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> [10], ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> >::decision_function<ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> >(ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0>*, bool (*)(ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const*, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const*)) const'
remark: firmware/BDT.h:56:0: Inlining function '$_0::__invoke(ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const*, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const*)' into 'ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> BDT::Tree<11, 31, 16, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> [10], ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> >::decision_function<ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> >(ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0>*, bool (*)(ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const*, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const*)) const'
remark: firmware/BDT.h:56:0: Inlining function '$_0::__invoke(ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const*, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const*)' into 'ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> BDT::Tree<12, 27, 14, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> [10], ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> >::decision_function<ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> >(ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0>*, bool (*)(ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const*, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const*)) const'
remark: firmware/BDT.h:56:0: Inlining function '$_0::__invoke(ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const*, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const*)' into 'ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> BDT::Tree<13, 31, 16, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> [10], ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> >::decision_function<ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> >(ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0>*, bool (*)(ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const*, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const*)) const'
remark: firmware/BDT.h:56:0: Inlining function '$_0::__invoke(ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const*, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const*)' into 'ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> BDT::Tree<14, 29, 15, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> [10], ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> >::decision_function<ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> >(ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0>*, bool (*)(ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const*, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const*)) const'
remark: firmware/BDT.h:56:0: Inlining function '$_0::__invoke(ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const*, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const*)' into 'ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> BDT::Tree<15, 17, 9, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> [10], ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> >::decision_function<ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> >(ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0>*, bool (*)(ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const*, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const*)) const'
remark: firmware/BDT.h:56:0: Inlining function '$_0::__invoke(ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const*, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const*)' into 'ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> BDT::Tree<16, 29, 15, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> [10], ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> >::decision_function<ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> >(ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0>*, bool (*)(ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const*, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const*)) const'
remark: firmware/BDT.h:56:0: Inlining function '$_0::__invoke(ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const*, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const*)' into 'ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> BDT::Tree<17, 23, 12, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> [10], ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> >::decision_function<ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> >(ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0>*, bool (*)(ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const*, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const*)) const'
remark: firmware/BDT.h:56:0: Inlining function '$_0::__invoke(ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const*, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const*)' into 'ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> BDT::Tree<18, 17, 9, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> [10], ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> >::decision_function<ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> >(ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0>*, bool (*)(ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const*, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const*)) const'
remark: firmware/BDT.h:22:0: Inlining function 'BDT::OpAdd<ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> >::operator()(ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0>) (.42.51)' into 'ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> BDT::reduce<ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 2, BDT::OpAdd<ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> > >(ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const*, BDT::OpAdd<ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> >) (.76)'
remark: firmware/BDT.h:22:0: Inlining function 'ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> BDT::reduce<ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 2, BDT::OpAdd<ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> > >(ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const*, BDT::OpAdd<ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> >) (.76)' into 'ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> BDT::reduce<ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 4, BDT::OpAdd<ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> > >(ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const*, BDT::OpAdd<ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> >) (.83)'
remark: firmware/BDT.h:22:0: Inlining function 'BDT::OpAdd<ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> >::operator()(ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0>) (.42.51)' into 'ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> BDT::reduce<ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 4, BDT::OpAdd<ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> > >(ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const*, BDT::OpAdd<ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> >) (.83)'
remark: firmware/BDT.h:22:0: Inlining function 'BDT::OpAdd<ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> >::operator()(ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0>) (.42.51)' into 'ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> BDT::reduce<ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 8, BDT::OpAdd<ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> > >(ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const*, BDT::OpAdd<ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> >)'
remark: firmware/BDT.h:22:0: Inlining function 'ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> BDT::reduce<ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 8, BDT::OpAdd<ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> > >(ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const*, BDT::OpAdd<ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> >)' into 'ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> BDT::reduce<ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 16, BDT::OpAdd<ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> > >(ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const*, BDT::OpAdd<ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> >)'
remark: firmware/BDT.h:22:0: Inlining function 'BDT::OpAdd<ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> >::operator()(ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0>) (.42.51)' into 'ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> BDT::reduce<ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 16, BDT::OpAdd<ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> > >(ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const*, BDT::OpAdd<ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> >)'
remark: firmware/BDT.h:22:0: Inlining function 'ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> BDT::reduce<ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 2, BDT::OpAdd<ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> > >(ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const*, BDT::OpAdd<ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> >) (.76)' into 'ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> BDT::reduce<ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 3, BDT::OpAdd<ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> > >(ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const*, BDT::OpAdd<ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> >)'
remark: firmware/BDT.h:22:0: Inlining function 'ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> BDT::reduce<ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1, BDT::OpAdd<ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> > >(ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const*, BDT::OpAdd<ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> >)' into 'ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> BDT::reduce<ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 3, BDT::OpAdd<ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> > >(ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const*, BDT::OpAdd<ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> >)'
remark: firmware/BDT.h:22:0: Inlining function 'BDT::OpAdd<ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> >::operator()(ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0>) (.42.51)' into 'ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> BDT::reduce<ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 3, BDT::OpAdd<ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> > >(ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const*, BDT::OpAdd<ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> >)'
remark: firmware/BDT.h:22:0: Inlining function 'ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> BDT::reduce<ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 16, BDT::OpAdd<ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> > >(ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const*, BDT::OpAdd<ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> >)' into 'ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> BDT::reduce<ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 19, BDT::OpAdd<ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> > >(ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const*, BDT::OpAdd<ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> >)'
remark: firmware/BDT.h:22:0: Inlining function 'ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> BDT::reduce<ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 3, BDT::OpAdd<ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> > >(ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const*, BDT::OpAdd<ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> >)' into 'ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> BDT::reduce<ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 19, BDT::OpAdd<ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> > >(ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const*, BDT::OpAdd<ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> >)'
remark: firmware/BDT.h:22:0: Inlining function 'BDT::OpAdd<ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> >::operator()(ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0>) (.42.51)' into 'ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> BDT::reduce<ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 19, BDT::OpAdd<ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> > >(ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const*, BDT::OpAdd<ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> >)'
remark: firmware/my_prj.cpp:25:0: Inlining function 'BDT::BDT<19, 2, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> [10], ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0> >::decision_function(ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0>*, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0>*) const' into 'my_prj_accelerator(int, int&, int&, float*, float*)'
remark: firmware/my_prj.cpp:25:0: Inlining function 'copy_output(int, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0>*, float*)' into 'my_prj_accelerator(int, int&, int&, float*, float*)'
remark: firmware/parameters.h:170:0: Applying array_partition to '_ZL9tree_0_18.41.parent': Complete partitioning on dimension 1.
remark: firmware/parameters.h:170:0: Applying array_partition to '_ZL9tree_0_18.41.children_right': Complete partitioning on dimension 1.
remark: firmware/parameters.h:170:0: Applying array_partition to '_ZL9tree_0_18.41.children_left': Complete partitioning on dimension 1.
remark: firmware/parameters.h:170:0: Applying array_partition to '_ZL9tree_0_18.41.value': Complete partitioning on dimension 1.
remark: firmware/parameters.h:170:0: Applying array_partition to '_ZL9tree_0_18.41.threshold': Complete partitioning on dimension 1.
remark: firmware/parameters.h:170:0: Applying array_partition to '_ZL9tree_0_18.41.feature': Complete partitioning on dimension 1.
remark: firmware/parameters.h:162:0: Applying array_partition to '_ZL9tree_0_17.42.parent': Complete partitioning on dimension 1.
remark: firmware/parameters.h:162:0: Applying array_partition to '_ZL9tree_0_17.42.children_right': Complete partitioning on dimension 1.
remark: firmware/parameters.h:162:0: Applying array_partition to '_ZL9tree_0_17.42.children_left': Complete partitioning on dimension 1.
remark: firmware/parameters.h:162:0: Applying array_partition to '_ZL9tree_0_17.42.value': Complete partitioning on dimension 1.
remark: firmware/parameters.h:162:0: Applying array_partition to '_ZL9tree_0_17.42.threshold': Complete partitioning on dimension 1.
remark: firmware/parameters.h:162:0: Applying array_partition to '_ZL9tree_0_17.42.feature': Complete partitioning on dimension 1.
remark: firmware/parameters.h:154:0: Applying array_partition to '_ZL9tree_0_16.43.parent': Complete partitioning on dimension 1.
remark: firmware/parameters.h:154:0: Applying array_partition to '_ZL9tree_0_16.43.children_right': Complete partitioning on dimension 1.
remark: firmware/parameters.h:154:0: Applying array_partition to '_ZL9tree_0_16.43.children_left': Complete partitioning on dimension 1.
remark: firmware/parameters.h:154:0: Applying array_partition to '_ZL9tree_0_16.43.value': Complete partitioning on dimension 1.
remark: firmware/parameters.h:154:0: Applying array_partition to '_ZL9tree_0_16.43.threshold': Complete partitioning on dimension 1.
remark: firmware/parameters.h:154:0: Applying array_partition to '_ZL9tree_0_16.43.feature': Complete partitioning on dimension 1.
remark: firmware/parameters.h:146:0: Applying array_partition to '_ZL9tree_0_15.44.parent': Complete partitioning on dimension 1.
remark: firmware/parameters.h:146:0: Applying array_partition to '_ZL9tree_0_15.44.children_right': Complete partitioning on dimension 1.
remark: firmware/parameters.h:146:0: Applying array_partition to '_ZL9tree_0_15.44.children_left': Complete partitioning on dimension 1.
remark: firmware/parameters.h:146:0: Applying array_partition to '_ZL9tree_0_15.44.value': Complete partitioning on dimension 1.
remark: firmware/parameters.h:146:0: Applying array_partition to '_ZL9tree_0_15.44.threshold': Complete partitioning on dimension 1.
remark: firmware/parameters.h:146:0: Applying array_partition to '_ZL9tree_0_15.44.feature': Complete partitioning on dimension 1.
remark: firmware/parameters.h:138:0: Applying array_partition to '_ZL9tree_0_14.45.parent': Complete partitioning on dimension 1.
remark: firmware/parameters.h:138:0: Applying array_partition to '_ZL9tree_0_14.45.children_right': Complete partitioning on dimension 1.
remark: firmware/parameters.h:138:0: Applying array_partition to '_ZL9tree_0_14.45.children_left': Complete partitioning on dimension 1.
remark: firmware/parameters.h:138:0: Applying array_partition to '_ZL9tree_0_14.45.value': Complete partitioning on dimension 1.
remark: firmware/parameters.h:138:0: Applying array_partition to '_ZL9tree_0_14.45.threshold': Complete partitioning on dimension 1.
remark: firmware/parameters.h:138:0: Applying array_partition to '_ZL9tree_0_14.45.feature': Complete partitioning on dimension 1.
remark: firmware/parameters.h:130:0: Applying array_partition to '_ZL9tree_0_13.46.parent': Complete partitioning on dimension 1.
remark: firmware/parameters.h:130:0: Applying array_partition to '_ZL9tree_0_13.46.children_right': Complete partitioning on dimension 1.
remark: firmware/parameters.h:130:0: Applying array_partition to '_ZL9tree_0_13.46.children_left': Complete partitioning on dimension 1.
remark: firmware/parameters.h:130:0: Applying array_partition to '_ZL9tree_0_13.46.value': Complete partitioning on dimension 1.
remark: firmware/parameters.h:130:0: Applying array_partition to '_ZL9tree_0_13.46.threshold': Complete partitioning on dimension 1.
remark: firmware/parameters.h:130:0: Applying array_partition to '_ZL9tree_0_13.46.feature': Complete partitioning on dimension 1.
remark: firmware/parameters.h:122:0: Applying array_partition to '_ZL9tree_0_12.47.parent': Complete partitioning on dimension 1.
remark: firmware/parameters.h:122:0: Applying array_partition to '_ZL9tree_0_12.47.children_right': Complete partitioning on dimension 1.
remark: firmware/parameters.h:122:0: Applying array_partition to '_ZL9tree_0_12.47.children_left': Complete partitioning on dimension 1.
remark: firmware/parameters.h:122:0: Applying array_partition to '_ZL9tree_0_12.47.value': Complete partitioning on dimension 1.
remark: firmware/parameters.h:122:0: Applying array_partition to '_ZL9tree_0_12.47.threshold': Complete partitioning on dimension 1.
remark: firmware/parameters.h:122:0: Applying array_partition to '_ZL9tree_0_12.47.feature': Complete partitioning on dimension 1.
remark: firmware/parameters.h:114:0: Applying array_partition to '_ZL9tree_0_11.48.parent': Complete partitioning on dimension 1.
remark: firmware/parameters.h:114:0: Applying array_partition to '_ZL9tree_0_11.48.children_right': Complete partitioning on dimension 1.
remark: firmware/parameters.h:114:0: Applying array_partition to '_ZL9tree_0_11.48.children_left': Complete partitioning on dimension 1.
remark: firmware/parameters.h:114:0: Applying array_partition to '_ZL9tree_0_11.48.value': Complete partitioning on dimension 1.
remark: firmware/parameters.h:114:0: Applying array_partition to '_ZL9tree_0_11.48.threshold': Complete partitioning on dimension 1.
remark: firmware/parameters.h:114:0: Applying array_partition to '_ZL9tree_0_11.48.feature': Complete partitioning on dimension 1.
remark: firmware/parameters.h:106:0: Applying array_partition to '_ZL9tree_0_10.49.parent': Complete partitioning on dimension 1.
remark: firmware/parameters.h:106:0: Applying array_partition to '_ZL9tree_0_10.49.children_right': Complete partitioning on dimension 1.
remark: firmware/parameters.h:106:0: Applying array_partition to '_ZL9tree_0_10.49.children_left': Complete partitioning on dimension 1.
remark: firmware/parameters.h:106:0: Applying array_partition to '_ZL9tree_0_10.49.value': Complete partitioning on dimension 1.
remark: firmware/parameters.h:106:0: Applying array_partition to '_ZL9tree_0_10.49.threshold': Complete partitioning on dimension 1.
remark: firmware/parameters.h:106:0: Applying array_partition to '_ZL9tree_0_10.49.feature': Complete partitioning on dimension 1.
remark: firmware/parameters.h:98:0: Applying array_partition to '_ZL8tree_0_9.50.parent': Complete partitioning on dimension 1.
remark: firmware/parameters.h:98:0: Applying array_partition to '_ZL8tree_0_9.50.children_right': Complete partitioning on dimension 1.
remark: firmware/parameters.h:98:0: Applying array_partition to '_ZL8tree_0_9.50.children_left': Complete partitioning on dimension 1.
remark: firmware/parameters.h:98:0: Applying array_partition to '_ZL8tree_0_9.50.value': Complete partitioning on dimension 1.
remark: firmware/parameters.h:98:0: Applying array_partition to '_ZL8tree_0_9.50.threshold': Complete partitioning on dimension 1.
remark: firmware/parameters.h:98:0: Applying array_partition to '_ZL8tree_0_9.50.feature': Complete partitioning on dimension 1.
remark: firmware/parameters.h:90:0: Applying array_partition to '_ZL8tree_0_8.51.parent': Complete partitioning on dimension 1.
remark: firmware/parameters.h:90:0: Applying array_partition to '_ZL8tree_0_8.51.children_right': Complete partitioning on dimension 1.
remark: firmware/parameters.h:90:0: Applying array_partition to '_ZL8tree_0_8.51.children_left': Complete partitioning on dimension 1.
remark: firmware/parameters.h:90:0: Applying array_partition to '_ZL8tree_0_8.51.value': Complete partitioning on dimension 1.
remark: firmware/parameters.h:90:0: Applying array_partition to '_ZL8tree_0_8.51.threshold': Complete partitioning on dimension 1.
remark: firmware/parameters.h:90:0: Applying array_partition to '_ZL8tree_0_8.51.feature': Complete partitioning on dimension 1.
remark: firmware/parameters.h:82:0: Applying array_partition to '_ZL8tree_0_7.52.parent': Complete partitioning on dimension 1.
remark: firmware/parameters.h:82:0: Applying array_partition to '_ZL8tree_0_7.52.children_right': Complete partitioning on dimension 1.
remark: firmware/parameters.h:82:0: Applying array_partition to '_ZL8tree_0_7.52.children_left': Complete partitioning on dimension 1.
remark: firmware/parameters.h:82:0: Applying array_partition to '_ZL8tree_0_7.52.value': Complete partitioning on dimension 1.
remark: firmware/parameters.h:82:0: Applying array_partition to '_ZL8tree_0_7.52.threshold': Complete partitioning on dimension 1.
remark: firmware/parameters.h:82:0: Applying array_partition to '_ZL8tree_0_7.52.feature': Complete partitioning on dimension 1.
remark: firmware/parameters.h:74:0: Applying array_partition to '_ZL8tree_0_6.53.parent': Complete partitioning on dimension 1.
remark: firmware/parameters.h:74:0: Applying array_partition to '_ZL8tree_0_6.53.children_right': Complete partitioning on dimension 1.
remark: firmware/parameters.h:74:0: Applying array_partition to '_ZL8tree_0_6.53.children_left': Complete partitioning on dimension 1.
remark: firmware/parameters.h:74:0: Applying array_partition to '_ZL8tree_0_6.53.value': Complete partitioning on dimension 1.
remark: firmware/parameters.h:74:0: Applying array_partition to '_ZL8tree_0_6.53.threshold': Complete partitioning on dimension 1.
remark: firmware/parameters.h:74:0: Applying array_partition to '_ZL8tree_0_6.53.feature': Complete partitioning on dimension 1.
remark: firmware/parameters.h:66:0: Applying array_partition to '_ZL8tree_0_5.54.parent': Complete partitioning on dimension 1.
remark: firmware/parameters.h:66:0: Applying array_partition to '_ZL8tree_0_5.54.children_right': Complete partitioning on dimension 1.
remark: firmware/parameters.h:66:0: Applying array_partition to '_ZL8tree_0_5.54.children_left': Complete partitioning on dimension 1.
remark: firmware/parameters.h:66:0: Applying array_partition to '_ZL8tree_0_5.54.value': Complete partitioning on dimension 1.
remark: firmware/parameters.h:66:0: Applying array_partition to '_ZL8tree_0_5.54.threshold': Complete partitioning on dimension 1.
remark: firmware/parameters.h:66:0: Applying array_partition to '_ZL8tree_0_5.54.feature': Complete partitioning on dimension 1.
remark: firmware/parameters.h:58:0: Applying array_partition to '_ZL8tree_0_4.55.parent': Complete partitioning on dimension 1.
remark: firmware/parameters.h:58:0: Applying array_partition to '_ZL8tree_0_4.55.children_right': Complete partitioning on dimension 1.
remark: firmware/parameters.h:58:0: Applying array_partition to '_ZL8tree_0_4.55.children_left': Complete partitioning on dimension 1.
remark: firmware/parameters.h:58:0: Applying array_partition to '_ZL8tree_0_4.55.value': Complete partitioning on dimension 1.
remark: firmware/parameters.h:58:0: Applying array_partition to '_ZL8tree_0_4.55.threshold': Complete partitioning on dimension 1.
remark: firmware/parameters.h:58:0: Applying array_partition to '_ZL8tree_0_4.55.feature': Complete partitioning on dimension 1.
remark: firmware/parameters.h:50:0: Applying array_partition to '_ZL8tree_0_3.56.parent': Complete partitioning on dimension 1.
remark: firmware/parameters.h:50:0: Applying array_partition to '_ZL8tree_0_3.56.children_right': Complete partitioning on dimension 1.
remark: firmware/parameters.h:50:0: Applying array_partition to '_ZL8tree_0_3.56.children_left': Complete partitioning on dimension 1.
remark: firmware/parameters.h:50:0: Applying array_partition to '_ZL8tree_0_3.56.value': Complete partitioning on dimension 1.
remark: firmware/parameters.h:50:0: Applying array_partition to '_ZL8tree_0_3.56.threshold': Complete partitioning on dimension 1.
remark: firmware/parameters.h:50:0: Applying array_partition to '_ZL8tree_0_3.56.feature': Complete partitioning on dimension 1.
remark: firmware/parameters.h:42:0: Applying array_partition to '_ZL8tree_0_2.57.parent': Complete partitioning on dimension 1.
remark: firmware/parameters.h:42:0: Applying array_partition to '_ZL8tree_0_2.57.children_right': Complete partitioning on dimension 1.
remark: firmware/parameters.h:42:0: Applying array_partition to '_ZL8tree_0_2.57.children_left': Complete partitioning on dimension 1.
remark: firmware/parameters.h:42:0: Applying array_partition to '_ZL8tree_0_2.57.value': Complete partitioning on dimension 1.
remark: firmware/parameters.h:42:0: Applying array_partition to '_ZL8tree_0_2.57.threshold': Complete partitioning on dimension 1.
remark: firmware/parameters.h:42:0: Applying array_partition to '_ZL8tree_0_2.57.feature': Complete partitioning on dimension 1.
remark: firmware/parameters.h:34:0: Applying array_partition to '_ZL8tree_0_1.58.parent': Complete partitioning on dimension 1.
remark: firmware/parameters.h:34:0: Applying array_partition to '_ZL8tree_0_1.58.children_right': Complete partitioning on dimension 1.
remark: firmware/parameters.h:34:0: Applying array_partition to '_ZL8tree_0_1.58.children_left': Complete partitioning on dimension 1.
remark: firmware/parameters.h:34:0: Applying array_partition to '_ZL8tree_0_1.58.value': Complete partitioning on dimension 1.
remark: firmware/parameters.h:34:0: Applying array_partition to '_ZL8tree_0_1.58.threshold': Complete partitioning on dimension 1.
remark: firmware/parameters.h:34:0: Applying array_partition to '_ZL8tree_0_1.58.feature': Complete partitioning on dimension 1.
remark: firmware/parameters.h:26:0: Applying array_partition to '_ZL8tree_0_0.59.parent': Complete partitioning on dimension 1.
remark: firmware/parameters.h:26:0: Applying array_partition to '_ZL8tree_0_0.59.children_right': Complete partitioning on dimension 1.
remark: firmware/parameters.h:26:0: Applying array_partition to '_ZL8tree_0_0.59.children_left': Complete partitioning on dimension 1.
remark: firmware/parameters.h:26:0: Applying array_partition to '_ZL8tree_0_0.59.value': Complete partitioning on dimension 1.
remark: firmware/parameters.h:26:0: Applying array_partition to '_ZL8tree_0_0.59.threshold': Complete partitioning on dimension 1.
remark: firmware/parameters.h:26:0: Applying array_partition to '_ZL8tree_0_0.59.feature': Complete partitioning on dimension 1.
remark: firmware/BDT.h:76:13: Applying array_partition to 'value_leaf': Complete partitioning on dimension 1.
remark: firmware/BDT.h:76:13: Applying array_partition to 'value_leaf': Complete partitioning on dimension 1.
remark: firmware/BDT.h:76:13: Applying array_partition to 'value_leaf': Complete partitioning on dimension 1.
remark: firmware/BDT.h:76:13: Applying array_partition to 'value_leaf': Complete partitioning on dimension 1.
remark: firmware/BDT.h:76:13: Applying array_partition to 'value_leaf': Complete partitioning on dimension 1.
remark: firmware/BDT.h:76:13: Applying array_partition to 'value_leaf': Complete partitioning on dimension 1.
remark: firmware/BDT.h:76:13: Applying array_partition to 'value_leaf': Complete partitioning on dimension 1.
remark: firmware/BDT.h:76:13: Applying array_partition to 'value_leaf': Complete partitioning on dimension 1.
remark: firmware/BDT.h:76:13: Applying array_partition to 'value_leaf': Complete partitioning on dimension 1.
remark: firmware/BDT.h:76:13: Applying array_partition to 'value_leaf': Complete partitioning on dimension 1.
remark: firmware/BDT.h:76:13: Applying array_partition to 'value_leaf': Complete partitioning on dimension 1.
remark: firmware/BDT.h:76:13: Applying array_partition to 'value_leaf': Complete partitioning on dimension 1.
remark: firmware/BDT.h:76:13: Applying array_partition to 'value_leaf': Complete partitioning on dimension 1.
remark: firmware/BDT.h:76:13: Applying array_partition to 'value_leaf': Complete partitioning on dimension 1.
remark: firmware/BDT.h:76:13: Applying array_partition to 'value_leaf': Complete partitioning on dimension 1.
remark: firmware/BDT.h:76:13: Applying array_partition to 'value_leaf': Complete partitioning on dimension 1.
remark: firmware/BDT.h:76:13: Applying array_partition to 'value_leaf': Complete partitioning on dimension 1.
remark: firmware/BDT.h:76:13: Applying array_partition to 'value_leaf': Complete partitioning on dimension 1.
remark: firmware/BDT.h:76:13: Applying array_partition to 'value_leaf': Complete partitioning on dimension 1.
remark: firmware/BDT.h:139:13: Applying array_partition to 'scores.i': Complete partitioning on dimension 1. Complete partitioning on dimension 2.
remark: firmware/my_prj.cpp:36:20: Sequential write of variable length has been inferred _XLX_SEP_ scoreseqscore gmem0 VITIS_LOOP_36_1 firmware/my_prj.cpp:36:20 my_prj_accelerator(int, int&, int&, float*, float*)  _XLX_SEP_ storewrite_Z11copy_outputiP8ap_fixedILi18ELi8EL9ap_q_mode5EL9ap_o_mode3ELi0EEPf.exit.store.3
remark: firmware/my_prj.cpp:15:16: Sequential read of length 10 has been inferred _XLX_SEP_ arrayidxseqx_in gmem0 copy_input(int, float*, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0>*)  _XLX_SEP_ loadreadentry.load.19loadread_ZN13ap_fixed_baseILi18ELi8ELb1EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ed.exit.load.5loadread_ZN13ap_fixed_baseILi18ELi8ELb1EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ed.exit50.load.6loadread_ZN13ap_fixed_baseILi18ELi8ELb1EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ed.exit97.load.6loadread_ZN13ap_fixed_baseILi18ELi8ELb1EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ed.exit144.load.6loadread_ZN13ap_fixed_baseILi18ELi8ELb1EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ed.exit191.load.6loadread_ZN13ap_fixed_baseILi18ELi8ELb1EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ed.exit238.load.6loadread_ZN13ap_fixed_baseILi18ELi8ELb1EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ed.exit285.load.6loadread_ZN13ap_fixed_baseILi18ELi8ELb1EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ed.exit332.load.6loadread_ZN13ap_fixed_baseILi18ELi8ELb1EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ed.exit379.load.6
remark: firmware/my_prj.cpp:36:20: Could not widen since type float size is greater than or equal to the max_widen_bitwidth threshold of 0 _XLX_SEP_ callwritescoreseqscore gmem0 VITIS_LOOP_36_1 firmware/my_prj.cpp:36:20 my_prj_accelerator(int, int&, int&, float*, float*) 
remark: firmware/my_prj.cpp:15:16: Could not widen since type float size is greater than or equal to the max_widen_bitwidth threshold of 0 _XLX_SEP_ callreadarrayidxseqx_in gmem0 copy_input(int, float*, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0>*) 
remark: firmware/my_prj.cpp:15:16: Multiple burst reads of length 10 and bit width 32 has been inferred. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. _XLX_SEP_ seq gmem0 copy_input(int, float*, ap_fixed<18, 8, (ap_q_mode)5, (ap_o_mode)3, 0>*) (.1) 
remark: firmware/my_prj.cpp:15:16: Multiple burst reads of length 10 and bit width 32 has been inferred on bundle 'gmem0'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.
remark: firmware/my_prj.cpp:36:20: Multiple burst writes of variable length and bit width 32 has been inferred. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. _XLX_SEP_ seq gmem0 VITIS_LOOP_36_1 firmware/my_prj.cpp:36:20 my_prj_accelerator(int, int&, int&, float*, float*) 
remark: firmware/my_prj.cpp:36:20: Multiple burst writes of variable length and bit width 32 in loop 'VITIS_LOOP_36_1'(firmware/my_prj.cpp:36:20) has been inferred on bundle 'gmem0'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.
===-------------------------------------------------------------------------===
                         Miscellaneous Ungrouped Timers
===-------------------------------------------------------------------------===

   ---User Time---   --System Time--   --User+System--   ---Wall Time---  --- Name ---
   1.9911 (100.0%)   0.3915 (100.0%)   2.3826 (100.0%)   2.4059 (100.0%)  Code Generation Time
   1.9911 (100.0%)   0.3915 (100.0%)   2.3826 (100.0%)   2.4059 (100.0%)  Total

===-------------------------------------------------------------------------===
                      ... Pass execution timing report ...
===-------------------------------------------------------------------------===
  Total Execution Time: 2.2875 seconds (2.3113 wall clock)

   ---User Time---   --System Time--   --User+System--   ---Wall Time---  --- Name ---
   0.0258 (  1.4%)   0.1434 ( 37.1%)   0.1692 (  7.4%)   0.1724 (  7.5%)  Auto automatic array partition analysis
   0.1300 (  6.8%)   0.0068 (  1.8%)   0.1368 (  6.0%)   0.1372 (  5.9%)  Global Variable Optimizer
   0.0267 (  1.4%)   0.0838 ( 21.7%)   0.1105 (  4.8%)   0.1105 (  4.8%)  Auto automatic array partition analysis
   0.0328 (  1.7%)   0.0672 ( 17.4%)   0.1001 (  4.4%)   0.1001 (  4.3%)  Automatic array partition transformation
   0.0826 (  4.3%)   0.0000 (  0.0%)   0.0826 (  3.6%)   0.0830 (  3.6%)  Reflow pragma unroll loops
   0.0643 (  3.4%)   0.0000 (  0.0%)   0.0643 (  2.8%)   0.0647 (  2.8%)  Dead Store Elimination
   0.0318 (  1.7%)   0.0055 (  1.4%)   0.0373 (  1.6%)   0.0372 (  1.6%)  Dead Store Elimination
   0.0369 (  1.9%)   0.0000 (  0.0%)   0.0369 (  1.6%)   0.0370 (  1.6%)  Dead Store Elimination
   0.0369 (  1.9%)   0.0000 (  0.0%)   0.0369 (  1.6%)   0.0370 (  1.6%)  Dead Store Elimination
   0.0366 (  1.9%)   0.0000 (  0.0%)   0.0367 (  1.6%)   0.0367 (  1.6%)  Dead Store Elimination
   0.0355 (  1.9%)   0.0000 (  0.0%)   0.0355 (  1.6%)   0.0359 (  1.6%)  Inliner for always_inline functions
   0.0349 (  1.8%)   0.0000 (  0.0%)   0.0349 (  1.5%)   0.0349 (  1.5%)  Auto automatic array partition analysis
   0.0344 (  1.8%)   0.0000 (  0.0%)   0.0344 (  1.5%)   0.0344 (  1.5%)  Auto automatic array partition analysis
   0.0293 (  1.5%)   0.0016 (  0.4%)   0.0309 (  1.4%)   0.0311 (  1.3%)  Dead Store Elimination
   0.0277 (  1.5%)   0.0000 (  0.0%)   0.0277 (  1.2%)   0.0279 (  1.2%)  Automatic inliner in reflow
   0.0255 (  1.3%)   0.0000 (  0.0%)   0.0255 (  1.1%)   0.0255 (  1.1%)  ArrayPartition - Partition Arrays into Banks
   0.0222 (  1.2%)   0.0023 (  0.6%)   0.0245 (  1.1%)   0.0250 (  1.1%)  Object Decomposition
   0.0233 (  1.2%)   0.0000 (  0.0%)   0.0233 (  1.0%)   0.0234 (  1.0%)  Memory Summary
   0.0216 (  1.1%)   0.0000 (  0.0%)   0.0216 (  0.9%)   0.0224 (  1.0%)  Generate HLS compatible IR
   0.0218 (  1.1%)   0.0000 (  0.0%)   0.0218 (  1.0%)   0.0221 (  1.0%)  Memory Summary
   0.0214 (  1.1%)   0.0002 (  0.1%)   0.0216 (  0.9%)   0.0219 (  0.9%)  Dead Store Elimination
   0.0207 (  1.1%)   0.0001 (  0.0%)   0.0208 (  0.9%)   0.0216 (  0.9%)  Dead Store Elimination
   0.0216 (  1.1%)   0.0000 (  0.0%)   0.0216 (  0.9%)   0.0216 (  0.9%)  PredicateAnalyzer - Predidate Analysis
   0.0204 (  1.1%)   0.0002 (  0.0%)   0.0206 (  0.9%)   0.0210 (  0.9%)  Dead Store Elimination
   0.0205 (  1.1%)   0.0000 (  0.0%)   0.0205 (  0.9%)   0.0205 (  0.9%)  PredicateAnalyzer - Predidate Analysis
   0.0204 (  1.1%)   0.0000 (  0.0%)   0.0204 (  0.9%)   0.0204 (  0.9%)  Dead Store Elimination
   0.0200 (  1.1%)   0.0000 (  0.0%)   0.0200 (  0.9%)   0.0202 (  0.9%)  Pragma preprocessing after clang
   0.0197 (  1.0%)   0.0000 (  0.0%)   0.0197 (  0.9%)   0.0197 (  0.9%)  Undecay arrays
   0.0178 (  0.9%)   0.0000 (  0.0%)   0.0178 (  0.8%)   0.0178 (  0.8%)  Lower intermediate type generated by HLSGen
   0.0176 (  0.9%)   0.0000 (  0.0%)   0.0176 (  0.8%)   0.0176 (  0.8%)  Value Propagation
   0.0172 (  0.9%)   0.0000 (  0.0%)   0.0172 (  0.8%)   0.0175 (  0.8%)  Global Value Numbering
   0.0146 (  0.8%)   0.0000 (  0.0%)   0.0146 (  0.6%)   0.0146 (  0.6%)  Collect complexity metrics for FE reflow
   0.0144 (  0.8%)   0.0000 (  0.0%)   0.0144 (  0.6%)   0.0144 (  0.6%)  Simplify the CFG
   0.0070 (  0.4%)   0.0032 (  0.8%)   0.0102 (  0.4%)   0.0109 (  0.5%)  Transform SSA value on top function to variable with pointer type
   0.0059 (  0.3%)   0.0038 (  1.0%)   0.0098 (  0.4%)   0.0109 (  0.5%)  Detach IR Wrapper
   0.0090 (  0.5%)   0.0000 (  0.0%)   0.0090 (  0.4%)   0.0096 (  0.4%)  Combine redundant instructions
   0.0094 (  0.5%)   0.0000 (  0.0%)   0.0094 (  0.4%)   0.0094 (  0.4%)  AccessGroup - Group the memory access for the same object
   0.0092 (  0.5%)   0.0000 (  0.0%)   0.0092 (  0.4%)   0.0092 (  0.4%)  Global Value Numbering
   0.0084 (  0.4%)   0.0000 (  0.0%)   0.0084 (  0.4%)   0.0085 (  0.4%)  Dominator Tree Construction
   0.0044 (  0.2%)   0.0039 (  1.0%)   0.0083 (  0.4%)   0.0083 (  0.4%)  AlignMemory - Align memory accesses
   0.0074 (  0.4%)   0.0000 (  0.0%)   0.0074 (  0.3%)   0.0074 (  0.3%)  AlignMemory - Align memory accesses
   0.0067 (  0.4%)   0.0002 (  0.0%)   0.0068 (  0.3%)   0.0069 (  0.3%)  Early GVN Hoisting of Expressions
   0.0067 (  0.4%)   0.0000 (  0.0%)   0.0067 (  0.3%)   0.0067 (  0.3%)  ReflowCheckPragmaConflicts - check pragma conflicts in reflow
   0.0066 (  0.3%)   0.0000 (  0.0%)   0.0066 (  0.3%)   0.0066 (  0.3%)  Deduce function attributes
   0.0062 (  0.3%)   0.0000 (  0.0%)   0.0062 (  0.3%)   0.0065 (  0.3%)  ROM inference pass
   0.0062 (  0.3%)   0.0000 (  0.0%)   0.0062 (  0.3%)   0.0062 (  0.3%)  Infer complete unroll based on pipeline pragma
   0.0061 (  0.3%)   0.0000 (  0.0%)   0.0061 (  0.3%)   0.0061 (  0.3%)  Bitcode for HLS
   0.0058 (  0.3%)   0.0001 (  0.0%)   0.0059 (  0.3%)   0.0059 (  0.3%)  Combine redundant instructions
   0.0055 (  0.3%)   0.0000 (  0.0%)   0.0055 (  0.2%)   0.0058 (  0.2%)  Generate IR Wrapper
   0.0056 (  0.3%)   0.0000 (  0.0%)   0.0056 (  0.2%)   0.0056 (  0.2%)  Combine redundant instructions
   0.0055 (  0.3%)   0.0000 (  0.0%)   0.0056 (  0.2%)   0.0056 (  0.2%)  Global Value Numbering
   0.0056 (  0.3%)   0.0000 (  0.0%)   0.0056 (  0.2%)   0.0056 (  0.2%)  Global Value Numbering
   0.0055 (  0.3%)   0.0001 (  0.0%)   0.0056 (  0.2%)   0.0056 (  0.2%)  Global Value Numbering
   0.0055 (  0.3%)   0.0000 (  0.0%)   0.0055 (  0.2%)   0.0055 (  0.2%)  Combine redundant instructions
   0.0051 (  0.3%)   0.0000 (  0.0%)   0.0051 (  0.2%)   0.0051 (  0.2%)  Global Value Numbering
   0.0036 (  0.2%)   0.0011 (  0.3%)   0.0047 (  0.2%)   0.0048 (  0.2%)  Collect complexity metrics for FE reflow
   0.0047 (  0.2%)   0.0000 (  0.0%)   0.0047 (  0.2%)   0.0047 (  0.2%)  Dead Store Elimination
   0.0046 (  0.2%)   0.0000 (  0.0%)   0.0046 (  0.2%)   0.0046 (  0.2%)  Global Value Numbering
   0.0043 (  0.2%)   0.0001 (  0.0%)   0.0044 (  0.2%)   0.0045 (  0.2%)  Automatic data reuse optimization
   0.0044 (  0.2%)   0.0001 (  0.0%)   0.0045 (  0.2%)   0.0045 (  0.2%)  Global Value Numbering
   0.0044 (  0.2%)   0.0000 (  0.0%)   0.0044 (  0.2%)   0.0044 (  0.2%)  Global Value Numbering
   0.0034 (  0.2%)   0.0010 (  0.3%)   0.0044 (  0.2%)   0.0044 (  0.2%)  Global Value Numbering
   0.0032 (  0.2%)   0.0011 (  0.3%)   0.0043 (  0.2%)   0.0043 (  0.2%)  Global Value Numbering
   0.0035 (  0.2%)   0.0008 (  0.2%)   0.0043 (  0.2%)   0.0043 (  0.2%)  Global Value Numbering
   0.0041 (  0.2%)   0.0000 (  0.0%)   0.0041 (  0.2%)   0.0041 (  0.2%)  Global Value Numbering
   0.0034 (  0.2%)   0.0006 (  0.2%)   0.0040 (  0.2%)   0.0041 (  0.2%)  Dead Store Elimination
   0.0039 (  0.2%)   0.0001 (  0.0%)   0.0040 (  0.2%)   0.0040 (  0.2%)  Memory SSA
   0.0039 (  0.2%)   0.0001 (  0.0%)   0.0040 (  0.2%)   0.0040 (  0.2%)  Global Value Numbering
   0.0033 (  0.2%)   0.0006 (  0.2%)   0.0040 (  0.2%)   0.0040 (  0.2%)  Dead Store Elimination
   0.0039 (  0.2%)   0.0000 (  0.0%)   0.0039 (  0.2%)   0.0039 (  0.2%)  Dead Store Elimination
   0.0022 (  0.1%)   0.0000 (  0.0%)   0.0022 (  0.1%)   0.0039 (  0.2%)  Aggressive Dead Code Elimination
   0.0031 (  0.2%)   0.0007 (  0.2%)   0.0038 (  0.2%)   0.0039 (  0.2%)  Global Value Numbering
   0.0037 (  0.2%)   0.0000 (  0.0%)   0.0037 (  0.2%)   0.0037 (  0.2%)  Global Value Numbering
   0.0035 (  0.2%)   0.0002 (  0.0%)   0.0037 (  0.2%)   0.0037 (  0.2%)  MemSSAOpt - Memory SSA based optimizations
   0.0033 (  0.2%)   0.0000 (  0.0%)   0.0033 (  0.1%)   0.0033 (  0.1%)  Deduce function attributes
   0.0033 (  0.2%)   0.0000 (  0.0%)   0.0033 (  0.1%)   0.0032 (  0.1%)  SROA
   0.0032 (  0.2%)   0.0000 (  0.0%)   0.0032 (  0.1%)   0.0032 (  0.1%)  AlignMemory - Align memory accesses
   0.0024 (  0.1%)   0.0007 (  0.2%)   0.0031 (  0.1%)   0.0031 (  0.1%)  Combine redundant instructions
   0.0031 (  0.2%)   0.0000 (  0.0%)   0.0031 (  0.1%)   0.0031 (  0.1%)  AlignMemory - Align memory accesses
   0.0028 (  0.1%)   0.0003 (  0.1%)   0.0031 (  0.1%)   0.0031 (  0.1%)  Combine redundant instructions
   0.0031 (  0.2%)   0.0000 (  0.0%)   0.0031 (  0.1%)   0.0031 (  0.1%)  Recursively inline barriers caller to kernel
   0.0031 (  0.2%)   0.0000 (  0.0%)   0.0031 (  0.1%)   0.0031 (  0.1%)  Global Value Numbering
   0.0030 (  0.2%)   0.0000 (  0.0%)   0.0030 (  0.1%)   0.0030 (  0.1%)  Rotate Loops
   0.0029 (  0.2%)   0.0000 (  0.0%)   0.0030 (  0.1%)   0.0030 (  0.1%)  Early GVN Hoisting of Expressions
   0.0030 (  0.2%)   0.0000 (  0.0%)   0.0030 (  0.1%)   0.0030 (  0.1%)  AlignMemory - Align memory accesses
   0.0024 (  0.1%)   0.0006 (  0.1%)   0.0030 (  0.1%)   0.0030 (  0.1%)  Early GVN Hoisting of Expressions
   0.0029 (  0.2%)   0.0000 (  0.0%)   0.0029 (  0.1%)   0.0029 (  0.1%)  Combine redundant instructions
   0.0029 (  0.2%)   0.0000 (  0.0%)   0.0029 (  0.1%)   0.0029 (  0.1%)  Combine redundant instructions
   0.0029 (  0.2%)   0.0000 (  0.0%)   0.0029 (  0.1%)   0.0029 (  0.1%)  Global Value Numbering
   0.0029 (  0.2%)   0.0000 (  0.0%)   0.0029 (  0.1%)   0.0029 (  0.1%)  Combine redundant instructions
   0.0028 (  0.1%)   0.0000 (  0.0%)   0.0028 (  0.1%)   0.0028 (  0.1%)  Combine redundant instructions
   0.0026 (  0.1%)   0.0002 (  0.1%)   0.0028 (  0.1%)   0.0028 (  0.1%)  Global Value Numbering
   0.0022 (  0.1%)   0.0005 (  0.1%)   0.0028 (  0.1%)   0.0028 (  0.1%)  Combine redundant instructions
   0.0028 (  0.1%)   0.0000 (  0.0%)   0.0028 (  0.1%)   0.0028 (  0.1%)  Global Value Numbering
   0.0028 (  0.1%)   0.0000 (  0.0%)   0.0028 (  0.1%)   0.0028 (  0.1%)  Combine redundant instructions
   0.0027 (  0.1%)   0.0000 (  0.0%)   0.0028 (  0.1%)   0.0028 (  0.1%)  Combine redundant instructions
   0.0016 (  0.1%)   0.0012 (  0.3%)   0.0027 (  0.1%)   0.0027 (  0.1%)  Combine redundant instructions
   0.0025 (  0.1%)   0.0002 (  0.1%)   0.0027 (  0.1%)   0.0027 (  0.1%)  Deduce function attributes
   0.0027 (  0.1%)   0.0000 (  0.0%)   0.0027 (  0.1%)   0.0027 (  0.1%)  Combine redundant instructions
   0.0027 (  0.1%)   0.0000 (  0.0%)   0.0027 (  0.1%)   0.0027 (  0.1%)  Combine redundant instructions
   0.0027 (  0.1%)   0.0000 (  0.0%)   0.0027 (  0.1%)   0.0027 (  0.1%)  Combine redundant instructions
   0.0027 (  0.1%)   0.0000 (  0.0%)   0.0027 (  0.1%)   0.0027 (  0.1%)  Global Value Numbering
   0.0027 (  0.1%)   0.0000 (  0.0%)   0.0027 (  0.1%)   0.0027 (  0.1%)  Combine redundant instructions
   0.0027 (  0.1%)   0.0000 (  0.0%)   0.0027 (  0.1%)   0.0027 (  0.1%)  Global Value Numbering
   0.0027 (  0.1%)   0.0000 (  0.0%)   0.0027 (  0.1%)   0.0027 (  0.1%)  Global Value Numbering
   0.0027 (  0.1%)   0.0000 (  0.0%)   0.0027 (  0.1%)   0.0027 (  0.1%)  Global Value Numbering
   0.0025 (  0.1%)   0.0001 (  0.0%)   0.0026 (  0.1%)   0.0027 (  0.1%)  Divergence Analysis
   0.0018 (  0.1%)   0.0009 (  0.2%)   0.0027 (  0.1%)   0.0027 (  0.1%)  Global Value Numbering
   0.0003 (  0.0%)   0.0018 (  0.5%)   0.0021 (  0.1%)   0.0027 (  0.1%)  Promote Memory to Register
   0.0026 (  0.1%)   0.0001 (  0.0%)   0.0027 (  0.1%)   0.0027 (  0.1%)  Combine redundant instructions
   0.0026 (  0.1%)   0.0000 (  0.0%)   0.0026 (  0.1%)   0.0026 (  0.1%)  Combine redundant instructions
   0.0026 (  0.1%)   0.0000 (  0.0%)   0.0026 (  0.1%)   0.0026 (  0.1%)  Deduce function attributes
   0.0026 (  0.1%)   0.0000 (  0.0%)   0.0026 (  0.1%)   0.0026 (  0.1%)  Combine redundant instructions
   0.0026 (  0.1%)   0.0000 (  0.0%)   0.0026 (  0.1%)   0.0026 (  0.1%)  Combine redundant instructions
   0.0012 (  0.1%)   0.0014 (  0.4%)   0.0026 (  0.1%)   0.0026 (  0.1%)  Combine redundant instructions
   0.0026 (  0.1%)   0.0000 (  0.0%)   0.0026 (  0.1%)   0.0026 (  0.1%)  Combine redundant instructions
   0.0026 (  0.1%)   0.0000 (  0.0%)   0.0026 (  0.1%)   0.0026 (  0.1%)  AlignMemory - Align memory accesses
   0.0024 (  0.1%)   0.0002 (  0.1%)   0.0026 (  0.1%)   0.0026 (  0.1%)  Global Value Numbering
   0.0022 (  0.1%)   0.0004 (  0.1%)   0.0026 (  0.1%)   0.0026 (  0.1%)  Combine redundant instructions
   0.0026 (  0.1%)   0.0000 (  0.0%)   0.0026 (  0.1%)   0.0026 (  0.1%)  AnnotateNoAlias - Annotate NoAlias Attribute on Arguments
   0.0026 (  0.1%)   0.0000 (  0.0%)   0.0026 (  0.1%)   0.0026 (  0.1%)  Early GVN Hoisting of Expressions
   0.0025 (  0.1%)   0.0000 (  0.0%)   0.0025 (  0.1%)   0.0025 (  0.1%)  AnnotateNoAlias - Annotate NoAlias Attribute on Arguments
   0.0025 (  0.1%)   0.0000 (  0.0%)   0.0025 (  0.1%)   0.0025 (  0.1%)  Combine redundant instructions
   0.0022 (  0.1%)   0.0001 (  0.0%)   0.0023 (  0.1%)   0.0025 (  0.1%)  Memory SSA
   0.0020 (  0.1%)   0.0005 (  0.1%)   0.0025 (  0.1%)   0.0025 (  0.1%)  Global Value Numbering
   0.0025 (  0.1%)   0.0000 (  0.0%)   0.0025 (  0.1%)   0.0025 (  0.1%)  Early GVN Hoisting of Expressions
   0.0025 (  0.1%)   0.0000 (  0.0%)   0.0025 (  0.1%)   0.0025 (  0.1%)  AlignMemory - Align memory accesses
   0.0017 (  0.1%)   0.0008 (  0.2%)   0.0025 (  0.1%)   0.0025 (  0.1%)  Global Value Numbering
   0.0025 (  0.1%)   0.0000 (  0.0%)   0.0025 (  0.1%)   0.0025 (  0.1%)  Global Value Numbering
   0.0021 (  0.1%)   0.0004 (  0.1%)   0.0025 (  0.1%)   0.0025 (  0.1%)  Early GVN Hoisting of Expressions
   0.0025 (  0.1%)   0.0000 (  0.0%)   0.0025 (  0.1%)   0.0025 (  0.1%)  Global Value Numbering
   0.0023 (  0.1%)   0.0000 (  0.0%)   0.0023 (  0.1%)   0.0025 (  0.1%)  Aggressive Dead Code Elimination
   0.0022 (  0.1%)   0.0002 (  0.1%)   0.0025 (  0.1%)   0.0025 (  0.1%)  Global Value Numbering
   0.0024 (  0.1%)   0.0001 (  0.0%)   0.0025 (  0.1%)   0.0025 (  0.1%)  Global Value Numbering
   0.0024 (  0.1%)   0.0000 (  0.0%)   0.0024 (  0.1%)   0.0024 (  0.1%)  Early GVN Hoisting of Expressions
   0.0017 (  0.1%)   0.0007 (  0.2%)   0.0024 (  0.1%)   0.0024 (  0.1%)  Global Value Numbering
   0.0018 (  0.1%)   0.0006 (  0.2%)   0.0024 (  0.1%)   0.0024 (  0.1%)  Global Value Numbering
   0.0024 (  0.1%)   0.0000 (  0.0%)   0.0024 (  0.1%)   0.0024 (  0.1%)  Global Value Numbering
   0.0024 (  0.1%)   0.0000 (  0.0%)   0.0024 (  0.1%)   0.0024 (  0.1%)  Global Value Numbering
   0.0024 (  0.1%)   0.0000 (  0.0%)   0.0024 (  0.1%)   0.0024 (  0.1%)  Early GVN Hoisting of Expressions
   0.0024 (  0.1%)   0.0000 (  0.0%)   0.0024 (  0.1%)   0.0024 (  0.1%)  Global Value Numbering
   0.0024 (  0.1%)   0.0000 (  0.0%)   0.0024 (  0.1%)   0.0024 (  0.1%)  Global Value Numbering
   0.0024 (  0.1%)   0.0000 (  0.0%)   0.0024 (  0.1%)   0.0024 (  0.1%)  Global Value Numbering
   0.0017 (  0.1%)   0.0006 (  0.2%)   0.0024 (  0.1%)   0.0024 (  0.1%)  Early GVN Hoisting of Expressions
   0.0020 (  0.1%)   0.0004 (  0.1%)   0.0024 (  0.1%)   0.0024 (  0.1%)  Global Value Numbering
   0.0023 (  0.1%)   0.0000 (  0.0%)   0.0023 (  0.1%)   0.0023 (  0.1%)  Aggressive Dead Code Elimination
   0.0015 (  0.1%)   0.0008 (  0.2%)   0.0023 (  0.1%)   0.0023 (  0.1%)  Function Alias Analysis Results
   0.0023 (  0.1%)   0.0000 (  0.0%)   0.0023 (  0.1%)   0.0023 (  0.1%)  AlignMemory - Align memory accesses
   0.0023 (  0.1%)   0.0000 (  0.0%)   0.0023 (  0.1%)   0.0023 (  0.1%)  Early GVN Hoisting of Expressions
   0.0023 (  0.1%)   0.0000 (  0.0%)   0.0023 (  0.1%)   0.0023 (  0.1%)   automatic function inline driven by performance to break up circuit dependence
   0.0023 (  0.1%)   0.0000 (  0.0%)   0.0023 (  0.1%)   0.0022 (  0.1%)  Function Alias Analysis Results
   0.0022 (  0.1%)   0.0000 (  0.0%)   0.0022 (  0.1%)   0.0022 (  0.1%)  CallGraph Construction
   0.0000 (  0.0%)   0.0022 (  0.6%)   0.0022 (  0.1%)   0.0022 (  0.1%)  Dead Global Elimination
   0.0022 (  0.1%)   0.0000 (  0.0%)   0.0022 (  0.1%)   0.0022 (  0.1%)  Interprocedural Sparse Conditional Constant Propagation
   0.0022 (  0.1%)   0.0000 (  0.0%)   0.0022 (  0.1%)   0.0022 (  0.1%)  Analyze sequential accesses
   0.0021 (  0.1%)   0.0000 (  0.0%)   0.0021 (  0.1%)   0.0021 (  0.1%)  Value Propagation
   0.0009 (  0.0%)   0.0013 (  0.3%)   0.0021 (  0.1%)   0.0021 (  0.1%)  Combine redundant instructions
   0.0021 (  0.1%)   0.0000 (  0.0%)   0.0021 (  0.1%)   0.0021 (  0.1%)   automatic function inline driven by performance to break up circuit dependence
   0.0021 (  0.1%)   0.0000 (  0.0%)   0.0021 (  0.1%)   0.0021 (  0.1%)  Aggressive Dead Code Elimination
   0.0021 (  0.1%)   0.0000 (  0.0%)   0.0021 (  0.1%)   0.0021 (  0.1%)  Remove redundant instructions
   0.0021 (  0.1%)   0.0000 (  0.0%)   0.0021 (  0.1%)   0.0021 (  0.1%)  Produce message if basic block has too many instructions
   0.0016 (  0.1%)   0.0004 (  0.1%)   0.0021 (  0.1%)   0.0021 (  0.1%)  Achieval II estimation - estimate acheival II lower bound according to constraint
   0.0020 (  0.1%)   0.0000 (  0.0%)   0.0020 (  0.1%)   0.0020 (  0.1%)  dump pragma info via xml format
   0.0020 (  0.1%)   0.0000 (  0.0%)   0.0020 (  0.1%)   0.0020 (  0.1%)  Loop Invariant Code Motion
   0.0020 (  0.1%)   0.0000 (  0.0%)   0.0020 (  0.1%)   0.0020 (  0.1%)  Dead Global Elimination
   0.0019 (  0.1%)   0.0000 (  0.0%)   0.0019 (  0.1%)   0.0019 (  0.1%)  Synthesis checker
   0.0018 (  0.1%)   0.0000 (  0.0%)   0.0018 (  0.1%)   0.0018 (  0.1%)  Loop Invariant Code Motion
   0.0018 (  0.1%)   0.0000 (  0.0%)   0.0018 (  0.1%)   0.0018 (  0.1%)  AnnotateNoAlias - Annotate NoAlias Attribute on Arguments
   0.0018 (  0.1%)   0.0000 (  0.0%)   0.0018 (  0.1%)   0.0018 (  0.1%)  AlignMemory - Align memory accesses
   0.0018 (  0.1%)   0.0000 (  0.0%)   0.0018 (  0.1%)   0.0018 (  0.1%)  Assign names to anonymous instructions (structure based)
   0.0018 (  0.1%)   0.0000 (  0.0%)   0.0018 (  0.1%)   0.0018 (  0.1%)  Dead Global Elimination
   0.0018 (  0.1%)   0.0000 (  0.0%)   0.0018 (  0.1%)   0.0018 (  0.1%)  Interprocedural Sparse Conditional Constant Propagation
   0.0015 (  0.1%)   0.0000 (  0.0%)   0.0015 (  0.1%)   0.0017 (  0.1%)  Remove redundant instructions
   0.0017 (  0.1%)   0.0000 (  0.0%)   0.0017 (  0.1%)   0.0017 (  0.1%)  Memory SSA
   0.0017 (  0.1%)   0.0000 (  0.0%)   0.0017 (  0.1%)   0.0017 (  0.1%)  Value Propagation
   0.0017 (  0.1%)   0.0000 (  0.0%)   0.0017 (  0.1%)   0.0017 (  0.1%)  Value Propagation
   0.0017 (  0.1%)   0.0000 (  0.0%)   0.0017 (  0.1%)   0.0017 (  0.1%)  LegacyShiftRegisterRecognize - Recognize shift registers and memory
   0.0007 (  0.0%)   0.0002 (  0.0%)   0.0008 (  0.0%)   0.0017 (  0.1%)  Print module to file
   0.0016 (  0.1%)   0.0000 (  0.0%)   0.0016 (  0.1%)   0.0016 (  0.1%)  Value Propagation
   0.0016 (  0.1%)   0.0000 (  0.0%)   0.0016 (  0.1%)   0.0016 (  0.1%)  Aggressive Dead Code Elimination
   0.0016 (  0.1%)   0.0000 (  0.0%)   0.0016 (  0.1%)   0.0016 (  0.1%)  Infer PPPO for array-to-streams
   0.0013 (  0.1%)   0.0003 (  0.1%)   0.0016 (  0.1%)   0.0016 (  0.1%)  Divergence Analysis
   0.0016 (  0.1%)   0.0000 (  0.0%)   0.0016 (  0.1%)   0.0016 (  0.1%)  Value Propagation
   0.0014 (  0.1%)   0.0000 (  0.0%)   0.0014 (  0.1%)   0.0016 (  0.1%)  Dead Global Elimination
   0.0016 (  0.1%)   0.0000 (  0.0%)   0.0016 (  0.1%)   0.0016 (  0.1%)  Remove redundant instructions
   0.0016 (  0.1%)   0.0000 (  0.0%)   0.0016 (  0.1%)   0.0016 (  0.1%)  Remove redundant instructions
   0.0015 (  0.1%)   0.0000 (  0.0%)   0.0015 (  0.1%)   0.0015 (  0.1%)  Dominator Tree Construction
   0.0015 (  0.1%)   0.0000 (  0.0%)   0.0015 (  0.1%)   0.0015 (  0.1%)  Merge accesses
   0.0015 (  0.1%)   0.0000 (  0.0%)   0.0015 (  0.1%)   0.0015 (  0.1%)  Remove redundant instructions
   0.0015 (  0.1%)   0.0000 (  0.0%)   0.0015 (  0.1%)   0.0015 (  0.1%)  Remove redundant instructions
   0.0015 (  0.1%)   0.0000 (  0.0%)   0.0015 (  0.1%)   0.0015 (  0.1%)  ROM inference pass
   0.0000 (  0.0%)   0.0012 (  0.3%)   0.0012 (  0.1%)   0.0015 (  0.1%)  Lower HLS related attributes
   0.0014 (  0.1%)   0.0000 (  0.0%)   0.0014 (  0.1%)   0.0014 (  0.1%)  Merge accesses
   0.0011 (  0.1%)   0.0004 (  0.1%)   0.0014 (  0.1%)   0.0014 (  0.1%)  Remove redundant instructions
   0.0014 (  0.1%)   0.0000 (  0.0%)   0.0014 (  0.1%)   0.0014 (  0.1%)  Promote 'by reference' arguments to scalars
   0.0014 (  0.1%)   0.0000 (  0.0%)   0.0014 (  0.1%)   0.0014 (  0.1%)  Remove redundant instructions
   0.0014 (  0.1%)   0.0000 (  0.0%)   0.0014 (  0.1%)   0.0014 (  0.1%)  Remove redundant instructions
   0.0014 (  0.1%)   0.0000 (  0.0%)   0.0014 (  0.1%)   0.0014 (  0.1%)  Collect complexity metrics for FE reflow
   0.0010 (  0.1%)   0.0004 (  0.1%)   0.0014 (  0.1%)   0.0014 (  0.1%)  Remove redundant instructions
   0.0014 (  0.1%)   0.0000 (  0.0%)   0.0014 (  0.1%)   0.0014 (  0.1%)  Collect complexity metrics for FE reflow
   0.0010 (  0.1%)   0.0004 (  0.1%)   0.0014 (  0.1%)   0.0014 (  0.1%)  Remove redundant instructions
   0.0013 (  0.1%)   0.0000 (  0.0%)   0.0013 (  0.1%)   0.0014 (  0.1%)  Remove redundant instructions
   0.0014 (  0.1%)   0.0000 (  0.0%)   0.0014 (  0.1%)   0.0013 (  0.1%)  Remove redundant instructions
   0.0013 (  0.1%)   0.0000 (  0.0%)   0.0013 (  0.1%)   0.0013 (  0.1%)  Aggressive Dead Code Elimination
   0.0013 (  0.1%)   0.0000 (  0.0%)   0.0013 (  0.1%)   0.0013 (  0.1%)  Memory Summary
   0.0013 (  0.1%)   0.0000 (  0.0%)   0.0013 (  0.1%)   0.0013 (  0.1%)  Remove redundant instructions
   0.0013 (  0.1%)   0.0000 (  0.0%)   0.0013 (  0.1%)   0.0013 (  0.1%)  Dead Argument Elimination
   0.0011 (  0.1%)   0.0002 (  0.1%)   0.0013 (  0.1%)   0.0013 (  0.1%)  Remove redundant instructions
   0.0013 (  0.1%)   0.0000 (  0.0%)   0.0013 (  0.1%)   0.0013 (  0.1%)  Collect complexity metrics for FE reflow
   0.0013 (  0.1%)   0.0000 (  0.0%)   0.0013 (  0.1%)   0.0013 (  0.1%)  Remove redundant instructions
   0.0013 (  0.1%)   0.0000 (  0.0%)   0.0013 (  0.1%)   0.0013 (  0.1%)  Remove redundant instructions
   0.0010 (  0.1%)   0.0003 (  0.1%)   0.0013 (  0.1%)   0.0013 (  0.1%)  Remove redundant instructions
   0.0013 (  0.1%)   0.0000 (  0.0%)   0.0013 (  0.1%)   0.0013 (  0.1%)  Reflow pragma unroll loops
   0.0013 (  0.1%)   0.0000 (  0.0%)   0.0013 (  0.1%)   0.0013 (  0.1%)  Aggressive Dead Code Elimination
   0.0000 (  0.0%)   0.0013 (  0.3%)   0.0013 (  0.1%)   0.0013 (  0.1%)  Reflow pragma unroll loops
   0.0013 (  0.1%)   0.0000 (  0.0%)   0.0013 (  0.1%)   0.0013 (  0.1%)  Remove redundant instructions
   0.0013 (  0.1%)   0.0000 (  0.0%)   0.0013 (  0.1%)   0.0013 (  0.1%)  Reflow pragma unroll loops
   0.0013 (  0.1%)   0.0000 (  0.0%)   0.0013 (  0.1%)   0.0013 (  0.1%)  Infer loop trip count
   0.0013 (  0.1%)   0.0000 (  0.0%)   0.0013 (  0.1%)   0.0013 (  0.1%)  Reflow pragma unroll loops
   0.0013 (  0.1%)   0.0000 (  0.0%)   0.0013 (  0.1%)   0.0013 (  0.1%)  Function Alias Analysis Results
   0.0013 (  0.1%)   0.0000 (  0.0%)   0.0013 (  0.1%)   0.0013 (  0.1%)  Remove redundant instructions
   0.0000 (  0.0%)   0.0013 (  0.3%)   0.0013 (  0.1%)   0.0013 (  0.1%)  Array abnormal access check
   0.0009 (  0.0%)   0.0003 (  0.1%)   0.0013 (  0.1%)   0.0013 (  0.1%)  Remove redundant instructions
   0.0010 (  0.1%)   0.0003 (  0.1%)   0.0013 (  0.1%)   0.0013 (  0.1%)  Remove redundant instructions
   0.0012 (  0.1%)   0.0000 (  0.0%)   0.0012 (  0.1%)   0.0013 (  0.1%)  Merge accesses
   0.0012 (  0.1%)   0.0000 (  0.0%)   0.0012 (  0.1%)   0.0012 (  0.1%)  CallGraph Construction
   0.0012 (  0.1%)   0.0001 (  0.0%)   0.0012 (  0.1%)   0.0012 (  0.1%)  Remove redundant instructions
   0.0009 (  0.0%)   0.0003 (  0.1%)   0.0012 (  0.1%)   0.0012 (  0.1%)  Aggressive Dead Code Elimination
   0.0007 (  0.0%)   0.0005 (  0.1%)   0.0012 (  0.1%)   0.0012 (  0.1%)  Remove redundant instructions
   0.0012 (  0.1%)   0.0000 (  0.0%)   0.0012 (  0.1%)   0.0012 (  0.1%)  Synthesis checker
   0.0004 (  0.0%)   0.0001 (  0.0%)   0.0004 (  0.0%)   0.0012 (  0.1%)  Divergence Analysis
   0.0012 (  0.1%)   0.0000 (  0.0%)   0.0012 (  0.1%)   0.0012 (  0.1%)  Remove redundant instructions
   0.0012 (  0.1%)   0.0000 (  0.0%)   0.0012 (  0.1%)   0.0012 (  0.1%)  Remove redundant instructions
   0.0012 (  0.1%)   0.0000 (  0.0%)   0.0012 (  0.1%)   0.0012 (  0.1%)  Remove redundant instructions
   0.0011 (  0.1%)   0.0000 (  0.0%)   0.0011 (  0.0%)   0.0012 (  0.1%)  Lower HLS related loops
   0.0012 (  0.1%)   0.0000 (  0.0%)   0.0012 (  0.1%)   0.0012 (  0.1%)  Reflow pragma unroll loops
   0.0012 (  0.1%)   0.0000 (  0.0%)   0.0012 (  0.1%)   0.0012 (  0.1%)  Aggressive Dead Code Elimination
   0.0010 (  0.1%)   0.0002 (  0.1%)   0.0012 (  0.1%)   0.0012 (  0.1%)  Remove redundant instructions
   0.0009 (  0.0%)   0.0003 (  0.1%)   0.0012 (  0.1%)   0.0012 (  0.1%)  Pragma preprocessing after clang
   0.0011 (  0.1%)   0.0000 (  0.0%)   0.0011 (  0.0%)   0.0012 (  0.1%)  Simplify the CFG
   0.0012 (  0.1%)   0.0000 (  0.0%)   0.0012 (  0.1%)   0.0012 (  0.1%)  CallGraph Construction
   0.0000 (  0.0%)   0.0012 (  0.3%)   0.0012 (  0.1%)   0.0012 (  0.0%)  Array out of bound check
   0.0008 (  0.0%)   0.0002 (  0.1%)   0.0010 (  0.0%)   0.0012 (  0.0%)  Function Alias Analysis Results
   0.0011 (  0.1%)   0.0000 (  0.0%)   0.0011 (  0.0%)   0.0011 (  0.0%)  Remove redundant instructions
   0.0010 (  0.1%)   0.0000 (  0.0%)   0.0010 (  0.0%)   0.0011 (  0.0%)  SeqAccessesInference - Infer Sequential accesses for HLS C/C++
   0.0011 (  0.1%)   0.0000 (  0.0%)   0.0011 (  0.0%)   0.0011 (  0.0%)  Remove redundant instructions
   0.0009 (  0.0%)   0.0003 (  0.1%)   0.0011 (  0.0%)   0.0011 (  0.0%)  Aggressive Dead Code Elimination
   0.0009 (  0.0%)   0.0002 (  0.1%)   0.0011 (  0.0%)   0.0011 (  0.0%)  Remove redundant instructions
   0.0006 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)   0.0011 (  0.0%)  Collect complexity metrics for FE reflow
   0.0011 (  0.1%)   0.0000 (  0.0%)   0.0011 (  0.0%)   0.0011 (  0.0%)  Infer nuw/nsw flags for instructions
   0.0011 (  0.1%)   0.0000 (  0.0%)   0.0011 (  0.0%)   0.0011 (  0.0%)  Merge accesses
   0.0011 (  0.1%)   0.0000 (  0.0%)   0.0011 (  0.0%)   0.0011 (  0.0%)  Loop Invariant Code Motion
   0.0011 (  0.1%)   0.0000 (  0.0%)   0.0011 (  0.0%)   0.0011 (  0.0%)  Remove redundant instructions
   0.0011 (  0.1%)   0.0000 (  0.0%)   0.0011 (  0.0%)   0.0011 (  0.0%)  Merge accesses
   0.0011 (  0.1%)   0.0000 (  0.0%)   0.0011 (  0.0%)   0.0011 (  0.0%)  AnnotateNoAlias - Annotate NoAlias Attribute on Arguments
   0.0010 (  0.1%)   0.0000 (  0.0%)   0.0011 (  0.0%)   0.0011 (  0.0%)  Aggressive Dead Code Elimination
   0.0011 (  0.1%)   0.0000 (  0.0%)   0.0011 (  0.0%)   0.0011 (  0.0%)  Interprocedural Sparse Conditional Constant Propagation
   0.0010 (  0.1%)   0.0001 (  0.0%)   0.0010 (  0.0%)   0.0010 (  0.0%)  Function Alias Analysis Results
   0.0010 (  0.1%)   0.0000 (  0.0%)   0.0010 (  0.0%)   0.0010 (  0.0%)  Aggressive Dead Code Elimination
   0.0010 (  0.1%)   0.0000 (  0.0%)   0.0010 (  0.0%)   0.0010 (  0.0%)  Value Propagation
   0.0010 (  0.1%)   0.0000 (  0.0%)   0.0010 (  0.0%)   0.0010 (  0.0%)  Simple constant propagation
   0.0010 (  0.1%)   0.0000 (  0.0%)   0.0010 (  0.0%)   0.0010 (  0.0%)  Simple constant propagation
   0.0007 (  0.0%)   0.0002 (  0.0%)   0.0009 (  0.0%)   0.0010 (  0.0%)  Function Alias Analysis Results
   0.0010 (  0.1%)   0.0000 (  0.0%)   0.0010 (  0.0%)   0.0010 (  0.0%)  Value Propagation
   0.0007 (  0.0%)   0.0003 (  0.1%)   0.0010 (  0.0%)   0.0010 (  0.0%)  Aggressive Dead Code Elimination
   0.0010 (  0.1%)   0.0000 (  0.0%)   0.0010 (  0.0%)   0.0010 (  0.0%)  Aggressive Dead Code Elimination
   0.0010 (  0.1%)   0.0000 (  0.0%)   0.0010 (  0.0%)   0.0010 (  0.0%)  Function Alias Analysis Results
   0.0009 (  0.0%)   0.0000 (  0.0%)   0.0009 (  0.0%)   0.0009 (  0.0%)  Collect complexity metrics for FE reflow
   0.0009 (  0.0%)   0.0000 (  0.0%)   0.0009 (  0.0%)   0.0009 (  0.0%)  Aggressive Dead Code Elimination
   0.0009 (  0.0%)   0.0000 (  0.0%)   0.0009 (  0.0%)   0.0009 (  0.0%)  Value Propagation
   0.0007 (  0.0%)   0.0002 (  0.0%)   0.0009 (  0.0%)   0.0009 (  0.0%)  Value Propagation
   0.0009 (  0.0%)   0.0000 (  0.0%)   0.0009 (  0.0%)   0.0009 (  0.0%)  Combine redundant instructions
   0.0007 (  0.0%)   0.0002 (  0.1%)   0.0009 (  0.0%)   0.0009 (  0.0%)  Value Propagation
   0.0006 (  0.0%)   0.0003 (  0.1%)   0.0009 (  0.0%)   0.0009 (  0.0%)  Aggressive Dead Code Elimination
   0.0009 (  0.0%)   0.0000 (  0.0%)   0.0009 (  0.0%)   0.0009 (  0.0%)  Value Propagation
   0.0009 (  0.0%)   0.0000 (  0.0%)   0.0009 (  0.0%)   0.0009 (  0.0%)  Value Propagation
   0.0006 (  0.0%)   0.0003 (  0.1%)   0.0009 (  0.0%)   0.0009 (  0.0%)  Memory SSA
   0.0009 (  0.0%)   0.0000 (  0.0%)   0.0009 (  0.0%)   0.0009 (  0.0%)  Function Alias Analysis Results
   0.0009 (  0.0%)   0.0000 (  0.0%)   0.0009 (  0.0%)   0.0009 (  0.0%)  Collect complexity metrics for FE reflow
   0.0007 (  0.0%)   0.0001 (  0.0%)   0.0009 (  0.0%)   0.0009 (  0.0%)  Value Propagation
   0.0009 (  0.0%)   0.0000 (  0.0%)   0.0009 (  0.0%)   0.0009 (  0.0%)  Value Propagation
   0.0009 (  0.0%)   0.0000 (  0.0%)   0.0009 (  0.0%)   0.0009 (  0.0%)  Value Propagation
   0.0009 (  0.0%)   0.0000 (  0.0%)   0.0009 (  0.0%)   0.0009 (  0.0%)  Dead Instruction Elimination
   0.0008 (  0.0%)   0.0000 (  0.0%)   0.0009 (  0.0%)   0.0009 (  0.0%)  Function Alias Analysis Results
   0.0007 (  0.0%)   0.0000 (  0.0%)   0.0007 (  0.0%)   0.0009 (  0.0%)  Auto automatic array partition filter analysis
   0.0004 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)   0.0009 (  0.0%)  DefaultInterfaceBuilderNew - Build Default Top Interface
   0.0008 (  0.0%)   0.0001 (  0.0%)   0.0008 (  0.0%)   0.0009 (  0.0%)  Value Propagation
   0.0007 (  0.0%)   0.0002 (  0.0%)   0.0009 (  0.0%)   0.0009 (  0.0%)   automatic parallel and pipeline insertion based performance constraint
   0.0008 (  0.0%)   0.0000 (  0.0%)   0.0008 (  0.0%)   0.0008 (  0.0%)  Aggressive Dead Code Elimination
   0.0008 (  0.0%)   0.0000 (  0.0%)   0.0008 (  0.0%)   0.0008 (  0.0%)  Aggressive Dead Code Elimination
   0.0008 (  0.0%)   0.0000 (  0.0%)   0.0008 (  0.0%)   0.0008 (  0.0%)  Array out of bound check
   0.0005 (  0.0%)   0.0003 (  0.1%)   0.0008 (  0.0%)   0.0008 (  0.0%)  Value Propagation
   0.0008 (  0.0%)   0.0000 (  0.0%)   0.0008 (  0.0%)   0.0008 (  0.0%)  Function Alias Analysis Results
   0.0008 (  0.0%)   0.0000 (  0.0%)   0.0008 (  0.0%)   0.0008 (  0.0%)  Memory Summary
   0.0008 (  0.0%)   0.0001 (  0.0%)   0.0008 (  0.0%)   0.0008 (  0.0%)  Function Alias Analysis Results
   0.0008 (  0.0%)   0.0000 (  0.0%)   0.0008 (  0.0%)   0.0008 (  0.0%)  Function Alias Analysis Results
   0.0008 (  0.0%)   0.0000 (  0.0%)   0.0008 (  0.0%)   0.0008 (  0.0%)  Function Alias Analysis Results
   0.0008 (  0.0%)   0.0000 (  0.0%)   0.0008 (  0.0%)   0.0008 (  0.0%)  Function Alias Analysis Results
   0.0001 (  0.0%)   0.0007 (  0.2%)   0.0008 (  0.0%)   0.0008 (  0.0%)  CallGraph Construction
   0.0008 (  0.0%)   0.0000 (  0.0%)   0.0008 (  0.0%)   0.0008 (  0.0%)  Function Alias Analysis Results
   0.0008 (  0.0%)   0.0000 (  0.0%)   0.0008 (  0.0%)   0.0008 (  0.0%)  Function Alias Analysis Results
   0.0008 (  0.0%)   0.0000 (  0.0%)   0.0008 (  0.0%)   0.0008 (  0.0%)  Function Alias Analysis Results
   0.0008 (  0.0%)   0.0000 (  0.0%)   0.0008 (  0.0%)   0.0008 (  0.0%)  Dead Store Elimination
   0.0008 (  0.0%)   0.0000 (  0.0%)   0.0008 (  0.0%)   0.0008 (  0.0%)  Infer nuw/nsw flags for instructions
   0.0008 (  0.0%)   0.0000 (  0.0%)   0.0008 (  0.0%)   0.0008 (  0.0%)  Aggressive Dead Code Elimination
   0.0008 (  0.0%)   0.0000 (  0.0%)   0.0008 (  0.0%)   0.0008 (  0.0%)  Dead Store Elimination
   0.0008 (  0.0%)   0.0000 (  0.0%)   0.0008 (  0.0%)   0.0008 (  0.0%)  Memory SSA
   0.0008 (  0.0%)   0.0000 (  0.0%)   0.0008 (  0.0%)   0.0008 (  0.0%)  Function Alias Analysis Results
   0.0008 (  0.0%)   0.0000 (  0.0%)   0.0008 (  0.0%)   0.0008 (  0.0%)  Function Alias Analysis Results
   0.0008 (  0.0%)   0.0000 (  0.0%)   0.0008 (  0.0%)   0.0008 (  0.0%)  Aggressive Dead Code Elimination
   0.0007 (  0.0%)   0.0001 (  0.0%)   0.0008 (  0.0%)   0.0008 (  0.0%)  Infer nuw/nsw flags for instructions
   0.0008 (  0.0%)   0.0000 (  0.0%)   0.0008 (  0.0%)   0.0008 (  0.0%)  Function Alias Analysis Results
   0.0008 (  0.0%)   0.0000 (  0.0%)   0.0008 (  0.0%)   0.0008 (  0.0%)  Value Propagation
   0.0002 (  0.0%)   0.0006 (  0.2%)   0.0008 (  0.0%)   0.0008 (  0.0%)  Dominator Tree Construction
   0.0002 (  0.0%)   0.0005 (  0.1%)   0.0008 (  0.0%)   0.0008 (  0.0%)  Function Alias Analysis Results
   0.0008 (  0.0%)   0.0000 (  0.0%)   0.0008 (  0.0%)   0.0008 (  0.0%)  Function Alias Analysis Results
   0.0008 (  0.0%)   0.0000 (  0.0%)   0.0008 (  0.0%)   0.0008 (  0.0%)  Eliminate dead debug information intrinsic
   0.0008 (  0.0%)   0.0000 (  0.0%)   0.0008 (  0.0%)   0.0008 (  0.0%)  Collect complexity metrics for FE reflow
   0.0003 (  0.0%)   0.0005 (  0.1%)   0.0008 (  0.0%)   0.0008 (  0.0%)  Infer nuw/nsw flags for instructions
   0.0008 (  0.0%)   0.0000 (  0.0%)   0.0008 (  0.0%)   0.0008 (  0.0%)  Function duplication
   0.0008 (  0.0%)   0.0000 (  0.0%)   0.0008 (  0.0%)   0.0008 (  0.0%)  Value Propagation
   0.0008 (  0.0%)   0.0000 (  0.0%)   0.0008 (  0.0%)   0.0008 (  0.0%)  Aggressive Dead Code Elimination
   0.0008 (  0.0%)   0.0000 (  0.0%)   0.0008 (  0.0%)   0.0008 (  0.0%)  Simplify the CFG
   0.0008 (  0.0%)   0.0000 (  0.0%)   0.0008 (  0.0%)   0.0008 (  0.0%)  Lazy Value Information Analysis
   0.0007 (  0.0%)   0.0000 (  0.0%)   0.0008 (  0.0%)   0.0008 (  0.0%)  Function Alias Analysis Results
   0.0007 (  0.0%)   0.0000 (  0.0%)   0.0008 (  0.0%)   0.0008 (  0.0%)  Aggressive Dead Code Elimination
   0.0007 (  0.0%)   0.0000 (  0.0%)   0.0007 (  0.0%)   0.0007 (  0.0%)  Aggressive Dead Code Elimination
   0.0007 (  0.0%)   0.0001 (  0.0%)   0.0007 (  0.0%)   0.0007 (  0.0%)  Dead Store Elimination
   0.0006 (  0.0%)   0.0001 (  0.0%)   0.0007 (  0.0%)   0.0007 (  0.0%)  Memory SSA
   0.0007 (  0.0%)   0.0000 (  0.0%)   0.0007 (  0.0%)   0.0007 (  0.0%)   automatic parallel and pipeline insertion based performance constraint
   0.0007 (  0.0%)   0.0000 (  0.0%)   0.0007 (  0.0%)   0.0007 (  0.0%)  CallGraph Construction
   0.0007 (  0.0%)   0.0000 (  0.0%)   0.0007 (  0.0%)   0.0007 (  0.0%)  Array out of bound check
   0.0007 (  0.0%)   0.0000 (  0.0%)   0.0007 (  0.0%)   0.0007 (  0.0%)  Memory SSA
   0.0007 (  0.0%)   0.0000 (  0.0%)   0.0007 (  0.0%)   0.0007 (  0.0%)  Collect complexity metrics for FE reflow
   0.0007 (  0.0%)   0.0000 (  0.0%)   0.0007 (  0.0%)   0.0007 (  0.0%)  Array out of bound check
   0.0007 (  0.0%)   0.0000 (  0.0%)   0.0007 (  0.0%)   0.0007 (  0.0%)  Dead Store Elimination
   0.0007 (  0.0%)   0.0000 (  0.0%)   0.0007 (  0.0%)   0.0007 (  0.0%)  Array out of bound check
   0.0004 (  0.0%)   0.0003 (  0.1%)   0.0007 (  0.0%)   0.0007 (  0.0%)  Dead Store Elimination
   0.0007 (  0.0%)   0.0000 (  0.0%)   0.0007 (  0.0%)   0.0007 (  0.0%)  Natural Loop Information
   0.0007 (  0.0%)   0.0000 (  0.0%)   0.0007 (  0.0%)   0.0007 (  0.0%)  Dead Store Elimination
   0.0007 (  0.0%)   0.0000 (  0.0%)   0.0007 (  0.0%)   0.0007 (  0.0%)  Aggressive Dead Code Elimination
   0.0007 (  0.0%)   0.0000 (  0.0%)   0.0007 (  0.0%)   0.0007 (  0.0%)  Collect complexity metrics for FE reflow
   0.0007 (  0.0%)   0.0000 (  0.0%)   0.0007 (  0.0%)   0.0007 (  0.0%)  Array out of bound check
   0.0005 (  0.0%)   0.0002 (  0.0%)   0.0007 (  0.0%)   0.0007 (  0.0%)  Aggressive Dead Code Elimination
   0.0007 (  0.0%)   0.0000 (  0.0%)   0.0007 (  0.0%)   0.0007 (  0.0%)  Aggressive Dead Code Elimination
   0.0007 (  0.0%)   0.0000 (  0.0%)   0.0007 (  0.0%)   0.0007 (  0.0%)  Inliner for always_inline functions
   0.0003 (  0.0%)   0.0004 (  0.1%)   0.0007 (  0.0%)   0.0007 (  0.0%)  Remove redundant instructions
   0.0007 (  0.0%)   0.0000 (  0.0%)   0.0007 (  0.0%)   0.0007 (  0.0%)  Collect complexity metrics for FE reflow
   0.0007 (  0.0%)   0.0000 (  0.0%)   0.0007 (  0.0%)   0.0007 (  0.0%)  Function Alias Analysis Results
   0.0007 (  0.0%)   0.0000 (  0.0%)   0.0007 (  0.0%)   0.0007 (  0.0%)  Function Alias Analysis Results
   0.0007 (  0.0%)   0.0000 (  0.0%)   0.0007 (  0.0%)   0.0007 (  0.0%)  Reflow pipeline loop automatically
   0.0007 (  0.0%)   0.0000 (  0.0%)   0.0007 (  0.0%)   0.0007 (  0.0%)  Dead Store Elimination
   0.0006 (  0.0%)   0.0000 (  0.0%)   0.0007 (  0.0%)   0.0007 (  0.0%)  Dead Store Elimination
   0.0007 (  0.0%)   0.0000 (  0.0%)   0.0007 (  0.0%)   0.0007 (  0.0%)  Function Alias Analysis Results
   0.0006 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)   0.0007 (  0.0%)  Function Alias Analysis Results
   0.0007 (  0.0%)   0.0000 (  0.0%)   0.0007 (  0.0%)   0.0007 (  0.0%)  ProduceBurstMessages - Produce Burst Messages
   0.0007 (  0.0%)   0.0000 (  0.0%)   0.0007 (  0.0%)   0.0007 (  0.0%)  Function Alias Analysis Results
   0.0007 (  0.0%)   0.0000 (  0.0%)   0.0007 (  0.0%)   0.0007 (  0.0%)  Collect complexity metrics for FE reflow
   0.0007 (  0.0%)   0.0000 (  0.0%)   0.0007 (  0.0%)   0.0007 (  0.0%)  Function Alias Analysis Results
   0.0005 (  0.0%)   0.0002 (  0.0%)   0.0007 (  0.0%)   0.0007 (  0.0%)  Dead Store Elimination
   0.0006 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)   0.0007 (  0.0%)  Function Alias Analysis Results
   0.0003 (  0.0%)   0.0003 (  0.1%)   0.0007 (  0.0%)   0.0007 (  0.0%)  Dead Store Elimination
   0.0006 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)   0.0007 (  0.0%)  Dead Store Elimination
   0.0006 (  0.0%)   0.0000 (  0.0%)   0.0007 (  0.0%)   0.0007 (  0.0%)  Function Alias Analysis Results
   0.0006 (  0.0%)   0.0000 (  0.0%)   0.0007 (  0.0%)   0.0007 (  0.0%)  Dead Store Elimination
   0.0003 (  0.0%)   0.0003 (  0.1%)   0.0006 (  0.0%)   0.0006 (  0.0%)  Function Alias Analysis Results
   0.0005 (  0.0%)   0.0002 (  0.0%)   0.0006 (  0.0%)   0.0006 (  0.0%)  Function Alias Analysis Results
   0.0006 (  0.0%)   0.0001 (  0.0%)   0.0006 (  0.0%)   0.0006 (  0.0%)  Aggressive Dead Code Elimination
   0.0006 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)   0.0006 (  0.0%)  Memory SSA
   0.0006 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)   0.0006 (  0.0%)  Memory SSA
   0.0006 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)   0.0006 (  0.0%)  Function Alias Analysis Results
   0.0006 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)   0.0006 (  0.0%)  Dead Store Elimination
   0.0006 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)   0.0006 (  0.0%)  Assign names to anonymous instructions (structure based)
   0.0006 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)   0.0006 (  0.0%)  Function Alias Analysis Results
   0.0006 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)   0.0006 (  0.0%)  Dominator Tree Construction
   0.0006 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)   0.0006 (  0.0%)  Dominator Tree Construction
   0.0006 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)   0.0006 (  0.0%)  Function Alias Analysis Results
   0.0006 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)   0.0006 (  0.0%)  Memory SSA
   0.0006 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)   0.0006 (  0.0%)  Function Alias Analysis Results
   0.0006 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)   0.0006 (  0.0%)  Infer nuw/nsw flags for instructions
   0.0006 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)   0.0006 (  0.0%)  Dead Store Elimination
   0.0006 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)   0.0006 (  0.0%)  Function Alias Analysis Results
   0.0006 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)   0.0006 (  0.0%)  Aggressive Dead Code Elimination
   0.0005 (  0.0%)   0.0001 (  0.0%)   0.0006 (  0.0%)   0.0006 (  0.0%)  Function Alias Analysis Results
   0.0006 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)   0.0006 (  0.0%)  Aggressive Dead Code Elimination
   0.0006 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)   0.0006 (  0.0%)  Dead Store Elimination
   0.0005 (  0.0%)   0.0001 (  0.0%)   0.0006 (  0.0%)   0.0006 (  0.0%)  Function Alias Analysis Results
   0.0006 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)   0.0006 (  0.0%)  Dominator Tree Construction
   0.0006 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)   0.0006 (  0.0%)  Dominator Tree Construction
   0.0006 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)   0.0006 (  0.0%)  Function Alias Analysis Results
   0.0006 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)   0.0006 (  0.0%)  Memory SSA
   0.0006 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)   0.0006 (  0.0%)  Function Alias Analysis Results
   0.0006 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)   0.0006 (  0.0%)  Function Alias Analysis Results
   0.0006 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)   0.0006 (  0.0%)  Collect complexity metrics for FE reflow
   0.0006 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)   0.0006 (  0.0%)  Simplify types in the LLVM IR, redundant type hierarchy
   0.0005 (  0.0%)   0.0001 (  0.0%)   0.0006 (  0.0%)   0.0006 (  0.0%)  Function Alias Analysis Results
   0.0006 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)   0.0006 (  0.0%)  Post-Dominator Tree Construction
   0.0006 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)   0.0006 (  0.0%)  Function Alias Analysis Results
   0.0006 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)   0.0006 (  0.0%)  Function Alias Analysis Results
   0.0006 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)   0.0006 (  0.0%)  Function Alias Analysis Results
   0.0005 (  0.0%)   0.0001 (  0.0%)   0.0006 (  0.0%)   0.0006 (  0.0%)  Function Alias Analysis Results
   0.0001 (  0.0%)   0.0005 (  0.1%)   0.0006 (  0.0%)   0.0006 (  0.0%)  Dominator Tree Construction
   0.0005 (  0.0%)   0.0001 (  0.0%)   0.0006 (  0.0%)   0.0006 (  0.0%)  Function Alias Analysis Results
   0.0006 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)   0.0006 (  0.0%)  Aggressive Dead Code Elimination
   0.0005 (  0.0%)   0.0001 (  0.0%)   0.0006 (  0.0%)   0.0006 (  0.0%)  Function Alias Analysis Results
   0.0006 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)   0.0006 (  0.0%)  Aggressive Dead Code Elimination
   0.0006 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)   0.0006 (  0.0%)  Dead Code Elimination
   0.0006 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)   0.0006 (  0.0%)  Function Alias Analysis Results
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0006 (  0.0%)  Infer set function attributes
   0.0006 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)   0.0006 (  0.0%)  Function Alias Analysis Results
   0.0006 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)   0.0006 (  0.0%)  Dominator Tree Construction
   0.0005 (  0.0%)   0.0001 (  0.0%)   0.0006 (  0.0%)   0.0006 (  0.0%)  Function Alias Analysis Results
   0.0006 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)   0.0006 (  0.0%)  Function Alias Analysis Results
   0.0006 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)   0.0006 (  0.0%)  Jump Threading
   0.0006 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)   0.0006 (  0.0%)  RemoveConflictingBurst - Remove port conflicting bursts
   0.0006 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)   0.0006 (  0.0%)  Function Alias Analysis Results
   0.0005 (  0.0%)   0.0001 (  0.0%)   0.0006 (  0.0%)   0.0006 (  0.0%)  Function Alias Analysis Results
   0.0006 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)   0.0006 (  0.0%)  Function Alias Analysis Results
   0.0006 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)   0.0006 (  0.0%)  Function Alias Analysis Results
   0.0003 (  0.0%)   0.0003 (  0.1%)   0.0006 (  0.0%)   0.0006 (  0.0%)  Function Alias Analysis Results
   0.0006 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)   0.0006 (  0.0%)  Function Alias Analysis Results
   0.0006 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)   0.0006 (  0.0%)  SROA
   0.0006 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)   0.0006 (  0.0%)  Function Alias Analysis Results
   0.0006 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)   0.0006 (  0.0%)  Function Alias Analysis Results
   0.0006 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)   0.0006 (  0.0%)  Function Alias Analysis Results
   0.0006 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)   0.0006 (  0.0%)  Function Alias Analysis Results
   0.0005 (  0.0%)   0.0001 (  0.0%)   0.0006 (  0.0%)   0.0006 (  0.0%)  Function Alias Analysis Results
   0.0005 (  0.0%)   0.0001 (  0.0%)   0.0006 (  0.0%)   0.0006 (  0.0%)  Function Alias Analysis Results
   0.0004 (  0.0%)   0.0002 (  0.1%)   0.0006 (  0.0%)   0.0006 (  0.0%)  Function Alias Analysis Results
   0.0006 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)   0.0006 (  0.0%)  Function Alias Analysis Results
   0.0005 (  0.0%)   0.0001 (  0.0%)   0.0006 (  0.0%)   0.0006 (  0.0%)  Function Alias Analysis Results
   0.0006 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)   0.0006 (  0.0%)  Function Alias Analysis Results
   0.0006 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)   0.0006 (  0.0%)  Function Alias Analysis Results
   0.0006 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)   0.0006 (  0.0%)  Function Alias Analysis Results
   0.0006 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)   0.0006 (  0.0%)  Function Alias Analysis Results
   0.0006 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)   0.0006 (  0.0%)  Aggressive Dead Code Elimination
   0.0006 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)   0.0006 (  0.0%)  Function Alias Analysis Results
   0.0004 (  0.0%)   0.0002 (  0.0%)   0.0006 (  0.0%)   0.0006 (  0.0%)  Function Alias Analysis Results
   0.0004 (  0.0%)   0.0002 (  0.0%)   0.0006 (  0.0%)   0.0006 (  0.0%)  Aggressive Dead Code Elimination
   0.0006 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)   0.0006 (  0.0%)  Natural Loop Information
   0.0006 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)   0.0006 (  0.0%)  Function Alias Analysis Results
   0.0006 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)   0.0006 (  0.0%)  Function Alias Analysis Results
   0.0006 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)   0.0006 (  0.0%)  Function Alias Analysis Results
   0.0004 (  0.0%)   0.0001 (  0.0%)   0.0006 (  0.0%)   0.0006 (  0.0%)  Aggressive Dead Code Elimination
   0.0001 (  0.0%)   0.0004 (  0.1%)   0.0006 (  0.0%)   0.0006 (  0.0%)  Function Alias Analysis Results
   0.0005 (  0.0%)   0.0001 (  0.0%)   0.0006 (  0.0%)   0.0006 (  0.0%)  Function Alias Analysis Results
   0.0006 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)   0.0006 (  0.0%)  Function Alias Analysis Results
   0.0006 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)   0.0006 (  0.0%)  Function Alias Analysis Results
   0.0005 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)   0.0006 (  0.0%)  Dominator Tree Construction
   0.0006 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)   0.0006 (  0.0%)  Function Alias Analysis Results
   0.0005 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)   0.0006 (  0.0%)  Produce message if basic block has too many instructions
   0.0006 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)   0.0006 (  0.0%)  Function Alias Analysis Results
   0.0006 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)   0.0006 (  0.0%)  Function Alias Analysis Results
   0.0006 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)   0.0006 (  0.0%)  Aggressive Dead Code Elimination
   0.0005 (  0.0%)   0.0001 (  0.0%)   0.0005 (  0.0%)   0.0006 (  0.0%)  Function Alias Analysis Results
   0.0004 (  0.0%)   0.0001 (  0.0%)   0.0006 (  0.0%)   0.0006 (  0.0%)  Function Alias Analysis Results
   0.0006 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)   0.0006 (  0.0%)  Function Alias Analysis Results
   0.0004 (  0.0%)   0.0001 (  0.0%)   0.0006 (  0.0%)   0.0006 (  0.0%)  Function Alias Analysis Results
   0.0006 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)   0.0006 (  0.0%)  Function Alias Analysis Results
   0.0005 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)   0.0006 (  0.0%)  Function Alias Analysis Results
   0.0006 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)   0.0006 (  0.0%)  AttrPropagation - Propagate Pointer Parameter Attribute
   0.0004 (  0.0%)   0.0002 (  0.0%)   0.0006 (  0.0%)   0.0006 (  0.0%)  Function Alias Analysis Results
   0.0006 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)   0.0006 (  0.0%)  Function Alias Analysis Results
   0.0002 (  0.0%)   0.0003 (  0.1%)   0.0006 (  0.0%)   0.0006 (  0.0%)  Dead Store Elimination
   0.0006 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)   0.0006 (  0.0%)  Function Alias Analysis Results
   0.0006 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)   0.0006 (  0.0%)  Function Alias Analysis Results
   0.0005 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)   0.0006 (  0.0%)  Function Alias Analysis Results
   0.0005 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)   0.0006 (  0.0%)  Aggressive Dead Code Elimination
   0.0006 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)   0.0006 (  0.0%)  Function Alias Analysis Results
   0.0006 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)   0.0006 (  0.0%)  Collect complexity metrics for FE reflow
   0.0005 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)   0.0006 (  0.0%)  LoopDepAnalysis - Reflow Loop Dependence Annotation
   0.0005 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)   0.0006 (  0.0%)  Function Alias Analysis Results
   0.0004 (  0.0%)   0.0001 (  0.0%)   0.0006 (  0.0%)   0.0005 (  0.0%)  Aggressive Dead Code Elimination
   0.0005 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)   0.0005 (  0.0%)  Function Alias Analysis Results
   0.0005 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)   0.0005 (  0.0%)  Collect complexity metrics for FE reflow
   0.0005 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)   0.0005 (  0.0%)  Function Alias Analysis Results
   0.0005 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)   0.0005 (  0.0%)  Function Alias Analysis Results
   0.0003 (  0.0%)   0.0002 (  0.1%)   0.0005 (  0.0%)   0.0005 (  0.0%)  Function Alias Analysis Results
   0.0005 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)   0.0005 (  0.0%)  Function Alias Analysis Results
   0.0005 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)   0.0005 (  0.0%)  Function Alias Analysis Results
   0.0005 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)   0.0005 (  0.0%)  Aggressive Dead Code Elimination
   0.0005 (  0.0%)   0.0001 (  0.0%)   0.0005 (  0.0%)   0.0005 (  0.0%)  Aggressive Dead Code Elimination
   0.0000 (  0.0%)   0.0005 (  0.1%)   0.0005 (  0.0%)   0.0005 (  0.0%)  Function Alias Analysis Results
   0.0005 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)   0.0005 (  0.0%)  Function Alias Analysis Results
   0.0005 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)   0.0005 (  0.0%)  Function Alias Analysis Results
   0.0005 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)   0.0005 (  0.0%)  Dominator Tree Construction
   0.0005 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)   0.0005 (  0.0%)  Function Alias Analysis Results
   0.0005 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)   0.0005 (  0.0%)  Memory SSA
   0.0005 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)   0.0005 (  0.0%)  Function Alias Analysis Results
   0.0005 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)   0.0005 (  0.0%)  Function Alias Analysis Results
   0.0003 (  0.0%)   0.0002 (  0.1%)   0.0005 (  0.0%)   0.0005 (  0.0%)  Memory SSA
   0.0005 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)   0.0005 (  0.0%)  Eliminate dead stores globally
   0.0005 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)   0.0005 (  0.0%)  InferXCLAttributes - Infer XCL attributes
   0.0005 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)   0.0005 (  0.0%)  Dead Store Elimination
   0.0005 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)   0.0005 (  0.0%)  Assign names to anonymous instructions (structure based)
   0.0005 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)   0.0005 (  0.0%)  Function Alias Analysis Results
   0.0005 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)   0.0005 (  0.0%)  Function Alias Analysis Results
   0.0005 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)   0.0005 (  0.0%)  Function Alias Analysis Results
   0.0004 (  0.0%)   0.0001 (  0.0%)   0.0005 (  0.0%)   0.0005 (  0.0%)  Function Alias Analysis Results
   0.0005 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)   0.0005 (  0.0%)  Function Alias Analysis Results
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0005 (  0.0%)  Post-Dominator Tree Construction
   0.0005 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)   0.0005 (  0.0%)  Dominator Tree Construction
   0.0005 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)   0.0005 (  0.0%)  Memory SSA
   0.0005 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)   0.0005 (  0.0%)  Canonicalize natural loops
   0.0005 (  0.0%)   0.0001 (  0.0%)   0.0005 (  0.0%)   0.0005 (  0.0%)  Function Alias Analysis Results
   0.0005 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)   0.0005 (  0.0%)  Aggressive Dead Code Elimination
   0.0005 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)   0.0005 (  0.0%)  Aggressive Dead Code Elimination
   0.0005 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)   0.0005 (  0.0%)  Simple constant propagation
   0.0004 (  0.0%)   0.0001 (  0.0%)   0.0005 (  0.0%)   0.0005 (  0.0%)  CallGraph Construction
   0.0003 (  0.0%)   0.0002 (  0.0%)   0.0005 (  0.0%)   0.0005 (  0.0%)  Aggressive Dead Code Elimination
   0.0004 (  0.0%)   0.0001 (  0.0%)   0.0005 (  0.0%)   0.0005 (  0.0%)  Function Alias Analysis Results
   0.0005 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)   0.0005 (  0.0%)  Aggressive Dead Code Elimination
   0.0005 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)   0.0005 (  0.0%)  Dead Store Elimination
   0.0005 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)   0.0005 (  0.0%)  WidenBurst - Widen bursts
   0.0003 (  0.0%)   0.0002 (  0.0%)   0.0005 (  0.0%)   0.0005 (  0.0%)  Function Alias Analysis Results
   0.0005 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)   0.0005 (  0.0%)  Aggressive Dead Code Elimination
   0.0005 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)   0.0005 (  0.0%)  Function Alias Analysis Results
   0.0004 (  0.0%)   0.0001 (  0.0%)   0.0005 (  0.0%)   0.0005 (  0.0%)  Function Alias Analysis Results
   0.0005 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)   0.0005 (  0.0%)  Function Alias Analysis Results
   0.0004 (  0.0%)   0.0001 (  0.0%)   0.0005 (  0.0%)   0.0005 (  0.0%)  Function Alias Analysis Results
   0.0005 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)   0.0005 (  0.0%)  Function Alias Analysis Results
   0.0005 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)   0.0005 (  0.0%)  Function Alias Analysis Results
   0.0005 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)   0.0005 (  0.0%)  Function Alias Analysis Results
   0.0002 (  0.0%)   0.0003 (  0.1%)   0.0005 (  0.0%)   0.0005 (  0.0%)  Dominator Tree Construction
   0.0005 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)   0.0005 (  0.0%)  Dead Global Elimination
   0.0004 (  0.0%)   0.0001 (  0.0%)   0.0005 (  0.0%)   0.0005 (  0.0%)  Function Alias Analysis Results
   0.0004 (  0.0%)   0.0001 (  0.0%)   0.0005 (  0.0%)   0.0005 (  0.0%)  Function Alias Analysis Results
   0.0005 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)   0.0005 (  0.0%)  Function Alias Analysis Results
   0.0005 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)   0.0005 (  0.0%)  Function Alias Analysis Results
   0.0005 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)   0.0005 (  0.0%)  Function Alias Analysis Results
   0.0005 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)   0.0005 (  0.0%)  Memory SSA
   0.0005 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)   0.0005 (  0.0%)  Function Alias Analysis Results
   0.0005 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)   0.0005 (  0.0%)  Function Alias Analysis Results
   0.0005 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)   0.0005 (  0.0%)  Function Alias Analysis Results
   0.0005 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)   0.0005 (  0.0%)  Function Alias Analysis Results
   0.0005 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)   0.0005 (  0.0%)  Function Alias Analysis Results
   0.0005 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)   0.0005 (  0.0%)  Function Alias Analysis Results
   0.0005 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)   0.0005 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0005 (  0.1%)   0.0005 (  0.0%)   0.0005 (  0.0%)  Memory SSA
   0.0004 (  0.0%)   0.0001 (  0.0%)   0.0005 (  0.0%)   0.0005 (  0.0%)  Function Alias Analysis Results
   0.0005 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)   0.0005 (  0.0%)  Simplify types in the LLVM IR, redundant type hierarchy
   0.0005 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)   0.0005 (  0.0%)  Dominator Tree Construction
   0.0005 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)   0.0005 (  0.0%)  Dominator Tree Construction
   0.0005 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)   0.0005 (  0.0%)  Jump Threading
   0.0005 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)   0.0005 (  0.0%)  Function Alias Analysis Results
   0.0004 (  0.0%)   0.0001 (  0.0%)   0.0005 (  0.0%)   0.0005 (  0.0%)  Function Alias Analysis Results
   0.0005 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)   0.0005 (  0.0%)  Function Alias Analysis Results
   0.0005 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)   0.0005 (  0.0%)  Jump Threading
   0.0003 (  0.0%)   0.0002 (  0.0%)   0.0005 (  0.0%)   0.0005 (  0.0%)  Function Alias Analysis Results
   0.0003 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)   0.0005 (  0.0%)  Loop Load Elimination
   0.0005 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)   0.0005 (  0.0%)  Function Alias Analysis Results
   0.0005 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)   0.0005 (  0.0%)  Divergence Analysis
   0.0003 (  0.0%)   0.0001 (  0.0%)   0.0005 (  0.0%)   0.0005 (  0.0%)  Function Alias Analysis Results
   0.0003 (  0.0%)   0.0002 (  0.0%)   0.0005 (  0.0%)   0.0005 (  0.0%)  Function Alias Analysis Results
   0.0005 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)   0.0005 (  0.0%)  Function Alias Analysis Results
   0.0005 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)   0.0005 (  0.0%)  Memory SSA
   0.0005 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)   0.0005 (  0.0%)  Aggressive Dead Code Elimination
   0.0005 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)   0.0005 (  0.0%)  Function Alias Analysis Results
   0.0005 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)   0.0005 (  0.0%)  Infer PPPO for array-to-streams
   0.0005 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)   0.0005 (  0.0%)  Change xcl attribute to call sideeffect
   0.0004 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)   0.0005 (  0.0%)  Dominator Tree Construction
   0.0005 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)   0.0005 (  0.0%)  Infer nuw/nsw flags for instructions
   0.0000 (  0.0%)   0.0005 (  0.1%)   0.0005 (  0.0%)   0.0005 (  0.0%)  Function Alias Analysis Results
   0.0005 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)   0.0005 (  0.0%)  Function Alias Analysis Results
   0.0003 (  0.0%)   0.0001 (  0.0%)   0.0005 (  0.0%)   0.0005 (  0.0%)  Function Alias Analysis Results
   0.0004 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)   0.0004 (  0.0%)  Divergence Analysis
   0.0004 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)   0.0004 (  0.0%)  Straight line strength reduction
   0.0004 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)   0.0004 (  0.0%)  Dominator Tree Construction
   0.0002 (  0.0%)   0.0002 (  0.1%)   0.0004 (  0.0%)   0.0004 (  0.0%)  Infer nuw/nsw flags for instructions
   0.0004 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)   0.0004 (  0.0%)  Dominator Tree Construction
   0.0004 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)   0.0004 (  0.0%)  Memory SSA
   0.0004 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)   0.0004 (  0.0%)  Simplify types in the LLVM IR, redundant type hierarchy
   0.0000 (  0.0%)   0.0004 (  0.1%)   0.0004 (  0.0%)   0.0004 (  0.0%)  Resolve full load/store
   0.0004 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)   0.0004 (  0.0%)  Lower HLS related intrinsics
   0.0004 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)   0.0004 (  0.0%)  Infer nuw/nsw flags for instructions
   0.0004 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)   0.0004 (  0.0%)  Collect complexity metrics for FE reflow
   0.0004 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)   0.0004 (  0.0%)  Dominator Tree Construction
   0.0004 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)   0.0004 (  0.0%)  Function Alias Analysis Results
   0.0004 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)   0.0004 (  0.0%)  Dominator Tree Construction
   0.0004 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)   0.0004 (  0.0%)  Memory SSA
   0.0004 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)   0.0004 (  0.0%)  Promote Memory to Register
   0.0004 (  0.0%)   0.0001 (  0.0%)   0.0004 (  0.0%)   0.0004 (  0.0%)  Aggressive Dead Code Elimination
   0.0004 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)   0.0004 (  0.0%)  Dominator Tree Construction
   0.0004 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)   0.0004 (  0.0%)  Aggressive Dead Code Elimination
   0.0004 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)   0.0004 (  0.0%)  Infer nuw/nsw flags for instructions
   0.0003 (  0.0%)   0.0002 (  0.0%)   0.0004 (  0.0%)   0.0004 (  0.0%)  Infer nuw/nsw flags for instructions
   0.0004 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)   0.0004 (  0.0%)  Infer nuw/nsw flags for instructions
   0.0004 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)   0.0004 (  0.0%)  CallGraph Construction
   0.0004 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)   0.0004 (  0.0%)  LoopDepAnalysis - Reflow Loop Dependence Annotation
   0.0004 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)   0.0004 (  0.0%)  Function Alias Analysis Results
   0.0004 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)   0.0004 (  0.0%)  Dominator Tree Construction
   0.0004 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)   0.0004 (  0.0%)  Dominator Tree Construction
   0.0004 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)   0.0004 (  0.0%)  Infer nuw/nsw flags for instructions
   0.0004 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)   0.0004 (  0.0%)  Function Alias Analysis Results
   0.0003 (  0.0%)   0.0001 (  0.0%)   0.0004 (  0.0%)   0.0004 (  0.0%)  Dump HBM driver helper code
   0.0004 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)   0.0004 (  0.0%)  Infer nuw/nsw flags for instructions
   0.0004 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)   0.0004 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0001 (  0.0%)   0.0003 (  0.1%)   0.0004 (  0.0%)   0.0004 (  0.0%)  Infer nuw/nsw flags for instructions
   0.0004 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)   0.0004 (  0.0%)  Unswitch loops
   0.0004 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)   0.0004 (  0.0%)  Memory SSA
   0.0004 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)   0.0004 (  0.0%)  Aggressive Dead Code Elimination
   0.0004 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)   0.0004 (  0.0%)  Infer nuw/nsw flags for instructions
   0.0004 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)   0.0004 (  0.0%)  Aggressive Dead Code Elimination
   0.0001 (  0.0%)   0.0002 (  0.0%)   0.0003 (  0.0%)   0.0004 (  0.0%)  Lower black box
   0.0004 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)   0.0004 (  0.0%)  Promote Memory to Register
   0.0003 (  0.0%)   0.0001 (  0.0%)   0.0004 (  0.0%)   0.0004 (  0.0%)  Canonicalize natural loops
   0.0003 (  0.0%)   0.0001 (  0.0%)   0.0004 (  0.0%)   0.0004 (  0.0%)  Infer nuw/nsw flags for instructions
   0.0004 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)   0.0004 (  0.0%)  Infer nuw/nsw flags for instructions
   0.0004 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)   0.0004 (  0.0%)  Infer nuw/nsw flags for instructions
   0.0004 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)   0.0004 (  0.0%)  Lower tasks into dataflow form
   0.0001 (  0.0%)   0.0003 (  0.1%)   0.0004 (  0.0%)   0.0004 (  0.0%)  Natural Loop Information
   0.0004 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)   0.0004 (  0.0%)  Memory SSA
   0.0003 (  0.0%)   0.0001 (  0.0%)   0.0004 (  0.0%)   0.0004 (  0.0%)  Dead Global Elimination
   0.0004 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)   0.0004 (  0.0%)  Dominator Tree Construction
   0.0004 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)   0.0004 (  0.0%)  Natural Loop Information
   0.0004 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)   0.0004 (  0.0%)  Dead Argument Elimination
   0.0001 (  0.0%)   0.0002 (  0.1%)   0.0004 (  0.0%)   0.0004 (  0.0%)  Dominator Tree Construction
   0.0004 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)   0.0004 (  0.0%)  Array abnormal access check
   0.0003 (  0.0%)   0.0001 (  0.0%)   0.0004 (  0.0%)   0.0004 (  0.0%)  Dominator Tree Construction
   0.0004 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)   0.0004 (  0.0%)  Infer nuw/nsw flags for instructions
   0.0004 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)   0.0004 (  0.0%)  Simplify the CFG
   0.0003 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)  CallGraph Construction
   0.0003 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)  Infer nuw/nsw flags for instructions
   0.0003 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)  CallGraph Construction
   0.0003 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)  Infer nuw/nsw flags for instructions
   0.0003 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)  Canonicalize natural loops
   0.0003 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)  Simplify the CFG
   0.0003 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)  Scalar Evolution Analysis
   0.0003 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)  Infer nuw/nsw flags for instructions
   0.0003 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)  Canonicalize natural loops
   0.0003 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)  CallGraph Construction
   0.0003 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)  Canonicalize natural loops
   0.0003 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)  Natural Loop Information
   0.0002 (  0.0%)   0.0001 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)  Aggressive Dead Code Elimination
   0.0003 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)  Infer nuw/nsw flags for instructions
   0.0003 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)  Dominator Tree Construction
   0.0003 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)  Dominator Tree Construction
   0.0003 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)  Global Variable Optimizer
   0.0003 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)  Eliminate pointer selection
   0.0003 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)  Interleave memory accesses
   0.0003 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)  Aggressive Dead Code Elimination
   0.0003 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)  Infer complete unroll based on pipeline pragma
   0.0001 (  0.0%)   0.0002 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)  clean some traps produced by clang
   0.0003 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)  Infer nuw/nsw flags for instructions
   0.0003 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)  Natural Loop Information
   0.0003 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)  Infer nuw/nsw flags for instructions
   0.0003 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)  Simplify the CFG
   0.0003 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)  Post-Dominator Tree Construction
   0.0003 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)  Infer nuw/nsw flags for instructions
   0.0003 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)  Dead Code Elimination
   0.0003 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)  LegalizeName - Check interface name in terms of HDL syntax
   0.0003 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)  Post-Dominator Tree Construction
   0.0003 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)  Dominator Tree Construction
   0.0003 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)  Infer nuw/nsw flags for instructions
   0.0003 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)  CallGraph Construction
   0.0003 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)  Dominator Tree Construction
   0.0002 (  0.0%)   0.0001 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)  Dominator Tree Construction
   0.0003 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)  Dominator Tree Construction
   0.0003 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)  Canonicalize natural loops
   0.0002 (  0.0%)   0.0002 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)  CallGraph Construction
   0.0003 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)  Canonicalize natural loops
   0.0003 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)  Simplify the CFG
   0.0003 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)  Dominator Tree Construction
   0.0003 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)  Post-Dominator Tree Construction
   0.0003 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)  Infer PPPO for array-to-streams
   0.0003 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)  Post-Dominator Tree Construction
   0.0003 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)  Canonicalize natural loops
   0.0003 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)  Natural Loop Information
   0.0003 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)  Infer complete unroll based on pipeline pragma
   0.0003 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)  Post-Dominator Tree Construction
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)  Simplify the CFG
   0.0003 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)  Simplify the CFG
   0.0003 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)  Natural Loop Information
   0.0003 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)  CallGraph Construction
   0.0003 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)  Natural Loop Information
   0.0003 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)  CallGraph Construction
   0.0003 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)  Loop-Closed SSA Form Pass
   0.0001 (  0.0%)   0.0002 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)  Assign names to anonymous instructions (structure based)
   0.0003 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)  CallGraph Construction
   0.0003 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)  Induction Variable Simplification
   0.0003 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)  Scalar Evolution Analysis
   0.0003 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)  CallGraph Construction
   0.0003 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)  Dominator Tree Construction
   0.0003 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)  Natural Loop Information
   0.0003 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)  Simplify the CFG
   0.0003 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)  Dominator Tree Construction
   0.0003 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)  Simplify the CFG
   0.0002 (  0.0%)   0.0001 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)  Simplify the CFG
   0.0003 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)  Canonicalize natural loops
   0.0003 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)  Simplify the CFG
   0.0003 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)  Natural Loop Information
   0.0003 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)  Scalar Evolution Analysis
   0.0002 (  0.0%)   0.0001 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)  Divergence Analysis
   0.0003 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)  Induction Variable Simplification
   0.0003 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)  Canonicalize natural loops
   0.0003 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)  Simplify the CFG
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)  Simplify the CFG
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)  Simplify the CFG
   0.0001 (  0.0%)   0.0002 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)  Natural Loop Information
   0.0003 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)  Auto automatic array partition filter analysis
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0003 (  0.0%)  Dominator Tree Construction
   0.0002 (  0.0%)   0.0001 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)  Scalar Evolution Analysis
   0.0003 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)  Structure stription
   0.0003 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)   0.0002 (  0.0%)  Infer complete unroll based on pipeline pragma
   0.0002 (  0.0%)   0.0001 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Simplify the CFG
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Dead Code Elimination
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Canonicalize natural loops
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0002 (  0.1%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Infer PPPO for array-to-streams
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Canonicalize natural loops
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Loop-Closed SSA Form Pass
   0.0002 (  0.0%)   0.0001 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Simplify the CFG
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Simplify the CFG
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Simplify the CFG
   0.0002 (  0.0%)   0.0001 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Canonicalize natural loops
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Dataflow Process Duplication
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Automatically infer occurrence information
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Canonicalize natural loops
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Detect single entry single exit regions
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Detect single entry single exit regions
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Canonicalize natural loops
   0.0000 (  0.0%)   0.0002 (  0.1%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  SROA
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  CallGraph Construction
   0.0001 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Scalar Evolution Analysis
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Extract dataflow loop
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Scalar Evolution Analysis
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  CallGraph Construction
   0.0001 (  0.0%)   0.0001 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Canonicalize natural loops
   0.0000 (  0.0%)   0.0002 (  0.1%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Disaggregation preprocessing
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Loop Invariant Code Motion
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Simplify the CFG
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  LowerPredicate - Lower predicates to control-flow
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Post-Dominator Tree Construction
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Internalize Global Symbols
   0.0000 (  0.0%)   0.0002 (  0.1%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  CallGraph Construction
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Simplify the CFG
   0.0001 (  0.0%)   0.0001 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Canonicalize natural loops
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Loop-Closed SSA Form Pass
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Simplify loop CFG
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  CallGraph Construction
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Canonicalize natural loops
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  CallGraph Construction
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Loop-Closed SSA Form Pass
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Loop-Closed SSA Form Pass
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Induction Variable Simplification
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  CallGraph Construction
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Canonicalize natural loops
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Post-Dominator Tree Construction
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Canonicalize natural loops
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  SROA
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Post-Dominator Tree Construction
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Post-Dominator Tree Construction
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  CallGraph Construction
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  LegacyShiftRegisterRecognize - Recognize shift registers and memory
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Post-Dominator Tree Construction
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Post-Dominator Tree Construction
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Post-Dominator Tree Construction
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  CallGraph Construction
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Eliminate pointer selection
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Special handling of axis with side-channels
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Canonicalize natural loops
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Post-Dominator Tree Construction
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Post-Dominator Tree Construction
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Lower printf for the fpga target
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  CallGraph Construction
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Post-Dominator Tree Construction
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Scalar Evolution Analysis
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  LowerPredicate - Lower predicates to control-flow
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Post-Dominator Tree Construction
   0.0001 (  0.0%)   0.0001 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Post-Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  SROA
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Resolve full load/store
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Infer PPPO for array-to-streams
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Post-Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Scalar Evolution Analysis
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Canonicalize natural loops
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Post-Dominator Tree Construction
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Post-Dominator Tree Construction
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  demangle Name to normal Name
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Post-Dominator Tree Construction
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Canonicalize natural loops
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Array abnormal access check
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Induction Variable Simplification
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Post-Dominator Tree Construction
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Dead Code Elimination
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Canonicalize natural loops
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Post-Dominator Tree Construction
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Array abnormal access check
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Canonicalize natural loops
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Post-Dominator Tree Construction
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Post-Dominator Tree Construction
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Loop-Closed SSA Form Pass
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Canonicalize natural loops
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Post-Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Post-Dominator Tree Construction
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Post-Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Post-Dominator Tree Construction
   0.0001 (  0.0%)   0.0001 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Post-Dominator Tree Construction
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Post-Dominator Tree Construction
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Post-Dominator Tree Construction
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Loop-Closed SSA Form Pass
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Array abnormal access check
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Post-Dominator Tree Construction
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Array abnormal access check
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Post-Dominator Tree Construction
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Lower BINDOP scope bundle
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Eliminate pointer selection
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Canonicalize natural loops
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Post-Dominator Tree Construction
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Post-Dominator Tree Construction
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Post-Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Post-Dominator Tree Construction
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  CallGraph Construction
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Dominance Frontier Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Post-Dominator Tree Construction
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Post-Dominator Tree Construction
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Post-Dominator Tree Construction
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  CallGraph Construction
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Post-Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0002 (  0.0%)  Lazy Block Frequency Analysis
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  LayoutTransform - Layout Transform Pragma Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Post-Dominator Tree Construction
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Detect single entry single exit regions
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Canonicalize natural loops
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Scalar Evolution Analysis
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Eliminate dead debug information intrinsic
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Canonicalize natural loops
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  CallGraph Construction
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0002 (  0.0%)  Memory Dependence Analysis
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Scalar Evolution Analysis
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Canonicalize natural loops
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Post-Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Control Dependence Analysis
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Post-Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0002 (  0.0%)  Post-Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0002 (  0.0%)  Eliminate dead debug information intrinsic
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Post-Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Post-Dominator Tree Construction
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Post-Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Canonicalize natural loops
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Post-Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Simplify the CFG
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0002 (  0.0%)  Eliminate dead debug information intrinsic
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0002 (  0.0%)  Remove unreachable basic blocks under switch
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  CallGraph Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0002 (  0.0%)  Post-Dominator Tree Construction
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Post-Dominator Tree Construction
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Loop Invariant Code Motion
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Dominance Frontier Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0002 (  0.0%)  Eliminate dead debug information intrinsic
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Post-Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0002 (  0.0%)  Loop Invariant Code Motion
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  CallGraph Construction
   0.0001 (  0.0%)   0.0001 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Post-Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Post-Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Undecay arrays
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Control Dependence Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0001 (  0.0%)  ShiftRegInference - Automatic Shift Register Inference
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Post-Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Post-Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Post-Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  CallGraph Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Lazy Value Information Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Post-Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Post-Dominator Tree Construction
   0.0001 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Simplify the CFG
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Post-Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0002 (  0.0%)   0.0001 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Post-Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Post-Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Induction Variable Simplification
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  CallGraph Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Post-Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Lazy Value Information Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Post-Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Canonicalize natural loops
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Promote Memory to Register
   0.0001 (  0.0%)   0.0001 (  0.0%)   0.0002 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Eliminate dead debug information intrinsic
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  CallGraph Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Post-Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Post-Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Preprocessing before loop rotation
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  CallGraph Construction
   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Merge accesses in the same region
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Post-Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Post-Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Post-Dominator Tree Construction
   0.0001 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Lazy Value Information Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Post-Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Induction Variable Simplification
   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Post-Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Lazy Value Information Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Detect single entry single exit regions
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Eliminate dead debug information intrinsic
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  CallGraph Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Post-Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Post-Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Post-Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Eliminate dead debug information intrinsic
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Post-Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Post-Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Eliminate dead debug information intrinsic
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dead Argument Elimination
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Loop-Closed SSA Form Pass
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Loop-Closed SSA Form Pass
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Post-Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Loop-Closed SSA Form Pass
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dead Global Elimination
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Delete dead loops
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Post-Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Post-Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  CallGraph Construction
   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Eliminate dead stores globally
   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  LayoutTransform - Layout Transform Pragma Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  CallGraph Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Post-Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Induction Variable Simplification
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  CallGraph Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  SROA
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Lower directive scopes
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Object Decomposition
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Memory Dependence Analysis
   0.0001 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Detect single entry single exit regions
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Eliminate dead debug information intrinsic
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  CallGraph Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  CallGraph Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dead Argument Elimination
   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Post-Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Detect single entry single exit regions
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominance Frontier Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Loop-Closed SSA Form Pass
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  CallGraph Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Stream object marker
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Eliminate dead debug information intrinsic
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  InferXCLAttrImplications - Infer XCL attribute implications
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  CallGraph Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  CallGraph Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Eliminate dead debug information intrinsic
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominance Frontier Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Detect single entry single exit regions
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Loop-Closed SSA Form Pass
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  AccessGroup - Group the memory access for the same object
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Lazy Value Information Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Loop-Closed SSA Form Pass
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  CallGraph Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Eliminate pointer selection
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Loop-Closed SSA Form Pass
   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dead Argument Elimination
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Loop-Closed SSA Form Pass
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Delinearization
   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  SROA
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Loop-Closed SSA Form Pass
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Eliminate pointer selection
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Eliminate pointer selection
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Loop-Closed SSA Form Pass
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  InterfaceEncodingChange - Change Interface Encoding format
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Eliminate dead debug information intrinsic
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Promote Memory to Register
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Remove unreachable basic blocks under switch
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Remove unreachable basic blocks under switch
   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dead Argument Elimination
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Generate Loops to iterate over workitems
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Disaggregation preprocessing
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Remove unreachable basic blocks under switch
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Lazy Branch Probability Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Function Alias Analysis Results
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Loop-Closed SSA Form Pass
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Loop-Closed SSA Form Pass
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominance Frontier Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Loop-Closed SSA Form Pass
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Loop-Closed SSA Form Pass
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  CallGraph Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Remove unreachable basic blocks under switch
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Loop-Closed SSA Form Pass
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Loop-Closed SSA Form Pass
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Eliminate dead debug information intrinsic
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Loop-Closed SSA Form Pass
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  CallGraph Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Memory Dependence Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Loop-Closed SSA Form Pass
   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  CallGraph Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Optimization Remark Emitter
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Critical Path Aanlysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Simplify loop CFG
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  CallGraph Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Remove unreachable basic blocks under switch
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Lazy Branch Probability Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dead Argument Elimination
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Optimization Remark Emitter
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dead Argument Elimination
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dead Code Elimination
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  CallGraph Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Infer direct input/output accesses
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Induction Variable Simplification
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Lazy Block Frequency Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  CallGraph Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  CallGraph Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  CallGraph Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Eliminate pointer selection
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Loop-Closed SSA Form Pass
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  CallGraph Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominance Frontier Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Eliminate pointer selection
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  CallGraph Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Critical Path Aanlysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Memory Dependence Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Lazy Value Information Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Auto automatic array partition filter analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Eliminate dead debug information intrinsic
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Eliminate pointer selection
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Eliminate dead debug information intrinsic
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dead Code Elimination
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  CallGraph Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  CallGraph Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Eliminate dead debug information intrinsic
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Eliminate dead debug information intrinsic
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Inline sub function calls recursively
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  CallGraph Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Eliminate dead debug information intrinsic
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Eliminate dead debug information intrinsic
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Lazy Value Information Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Lazy Value Information Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Auto automatic array partition filter analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Eliminate dead debug information intrinsic
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Auto automatic array partition filter analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominance Frontier Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Eliminate dead debug information intrinsic
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Eliminate pointer selection
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Auto automatic array partition filter analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  CallGraph Construction
   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dead Global Elimination
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Eliminate dead debug information intrinsic
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Eliminate dead debug information intrinsic
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  CallGraph Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Eliminate dead debug information intrinsic
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Struct object aggregation
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Eliminate dead debug information intrinsic
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Eliminate dead debug information intrinsic
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Eliminate dead debug information intrinsic
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Remove unreachable basic blocks under switch
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dead Global Elimination
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Lazy Value Information Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Eliminate dead debug information intrinsic
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Remove unreachable basic blocks under switch
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Loop-Closed SSA Form Pass
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Lazy Value Information Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Remove unreachable basic blocks under switch
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  SPIRUpdateIntrRange - Update SPIR Intrinsics Metadata
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Canonicalize natural loops
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Loop Invariant Code Motion
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dead Global Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Build loop flatten cost model
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalarize vector operations
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Resolve full load/store
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Remove unreachable basic blocks under switch
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Eliminate dead stores globally
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Lower stream depth
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Memory Dependence Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Remove unreachable basic blocks under switch
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Remove unreachable basic blocks under switch
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Function Alias Analysis Results
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Canonicalize natural loops
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Canonicalize natural loops
   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Function Alias Analysis Results
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Canonicalize natural loops
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Optimization Remark Emitter
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Canonicalize natural loops
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  ReflowCheckVarPragmaConflicts - check variable pragma conflicts in reflow
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Canonicalization
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Remove unreachable basic blocks under switch
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Canonicalize natural loops
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Remove unreachable basic blocks under switch
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Remove unreachable basic blocks under switch
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Lazy Value Information Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Memory Dependence Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  CallGraph Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Lazy Value Information Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Promote Memory to Register
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Remove unreachable basic blocks under switch
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Promote Memory to Register
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Remove unreachable basic blocks under switch
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  CallGraph Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Function Alias Analysis Results
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0000 (  0.0%)  SimplifyPredicate - Simplify predicate
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Remove unreachable basic blocks under switch
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0000 (  0.0%)  Eliminate pointer selection for FIFO
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Remove unreachable basic blocks under switch
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Remove unreachable basic blocks under switch
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Remove unreachable basic blocks under switch
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  ShiftRegInference - Automatic Shift Register Inference
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  LCSSA Verifier
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0000 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Promote Memory to Register
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0000 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Function duplication
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  LCSSA Verifier
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  LCSSA Verifier
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Dead Global Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Loop-Closed SSA Form Pass
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Remove unreachable basic blocks under switch
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Shrink Synchronization Regions in SPMD program to reduce CFG complexity
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Unify function exit nodes
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  SimplifyPredicate - Simplify predicate
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  InterfaceCheck - Check Interface
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Predicate SPIR Kernels
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Promote Memory to Register
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Promote Memory to Register
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  LCSSA Verifier
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Canonicalize natural loops
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Promote Memory to Register
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Critical Path Aanlysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Canonicalize natural loops
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Analyze occurrence information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  LCSSA Verifier
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  LCSSA Verifier
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Canonicalization
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Critical Path Aanlysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  LCSSA Verifier
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Achieval II estimation - estimate acheival II lower bound according to constraint
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Canonicalize natural loops
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Loop-Closed SSA Form Pass
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Build Synchronization Regions in SPMD program
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  LCSSA Verifier
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  LCSSA Verifier
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Loop-Closed SSA Form Pass
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Loop Access Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Canonicalize natural loops
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lower llvm.assume to _ssdm_AssertFail
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Vectorize the SPMD regions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Loop-Closed SSA Form Pass
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Reflow auto unroll loops
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Predicate analysis under a loop context
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  LCSSA Verifier
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Canonicalization
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  LCSSA Verifier
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  LCSSA Verifier
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Predicate analysis under a loop context
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  LCSSA Verifier
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Expand private memory for each workitem in SPMD program
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  LCSSA Verifier
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Canonicalization
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Canonicalization
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  LCSSA Verifier
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Canonicalization
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  LCSSA Verifier
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Canonicalization
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Canonicalization
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Canonicalization
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Canonicalization
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  LCSSA Verifier
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  SPIRUpdateIntrRange - Update SPIR Intrinsics Metadata
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Eliminate guard varible
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  LCSSA Verifier
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Infer workgroup size for opencl Kernel
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  LCSSA Verifier
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  LCSSA Verifier
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Canonicalization
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Aggressive Dead Code Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  LCSSA Verifier
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  LCSSA Verifier
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Canonicalization
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  LCSSA Verifier
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  LCSSA Verifier
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Performance Evaluation
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  LCSSA Verifier
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  LCSSA Verifier
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  LCSSA Verifier
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Eliminate guard varible
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  LCSSA Verifier
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  LCSSA Verifier
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  LCSSA Verifier
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  LCSSA Verifier
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  LCSSA Verifier
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  LCSSA Verifier
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  LCSSA Verifier
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Entirety access check on array-to-stream
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  LCSSA Verifier
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  LCSSA Verifier
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  LCSSA Verifier
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Struct object aggregation
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lower memory intrinsic
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  LayoutTransform - Layout Transform Pragma Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Reduce the height of tree
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Rotate Loops
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Rotate Loops
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Interprocedural constant propagation
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Rotate Loops
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  ArrayReshape - Reshape Arrays into Wider Arrays
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Dead Global Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Interprocedural constant propagation
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Interprocedural constant propagation
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lower HLS related intrinsics
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  ArrayPartition - Partition Arrays into Banks
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Interprocedural constant propagation
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Interface Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Reduce the height of tree
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lower intrinsics for FPGAs
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Assumption Cache Tracker
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lower HLS related intrinsics
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  LayoutTransform - Layout Transform Pragma Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Eliminate dead stores globally
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Interface Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Achieval II estimation - estimate acheival II lower bound according to constraint
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Interface Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Delete dead loops
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Delete dead loops
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Achieval II estimation - estimate acheival II lower bound according to constraint
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lower HLS related intrinsics
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Simplify loop CFG
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Performance Evaluation
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Delete dead loops
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Simplify loop CFG
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Interface Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lower intrinsics for FPGAs
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Structure Decomposition
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Interface Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  LayoutTransform - Layout Transform Pragma Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Interface Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Delete dead loops
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Outline pipeline stages
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Interface Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Simplify loop CFG
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Interface Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Delete dead loops
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lower intrinsics for FPGAs
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Interface Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lower intrinsics for FPGAs
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Interface Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Revert PPPO for array-to-stream
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Simplify loop CFG
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Interface Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Interface Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Revert PPPO for array-to-stream
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Revert PPPO for array-to-stream
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Interface Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Interface Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Revert PPPO for array-to-stream
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  A No-Op Barrier Pass
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Interface Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Interface Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Interface Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Interface Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Interface Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Interface Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Interface Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Interface Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  DeSPMD - Insert barriers into uniform loops
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Interface Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Interface Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Interface Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Interface Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Interface Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  A No-Op Barrier Pass
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Entirety access check on array-to-stream
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Simplify loop CFG
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Interface Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Interface Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Interface Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Interface Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Interface Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Interface Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Interface Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Evaluate _ssdm_string2bits
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  A No-Op Barrier Pass
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  A No-Op Barrier Pass
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Interface Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Interface Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Interface Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Interface Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Target Transform Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Profile summary info
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Collect basic metrics for FE reflow
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Interface Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Target Library Information
   1.9010 (100.0%)   0.3866 (100.0%)   2.2875 (100.0%)   2.3113 (100.0%)  Total

===-------------------------------------------------------------------------===
                                LLVM IR Parsing
===-------------------------------------------------------------------------===
  Total Execution Time: 0.0193 seconds (0.0212 wall clock)

   ---User Time---   --System Time--   --User+System--   ---Wall Time---  --- Name ---
   0.0162 (100.0%)   0.0032 (100.0%)   0.0193 (100.0%)   0.0212 (100.0%)  Parse IR
   0.0162 (100.0%)   0.0032 (100.0%)   0.0193 (100.0%)   0.0212 (100.0%)  Total

===-------------------------------------------------------------------------===
                          Clang front-end time report
===-------------------------------------------------------------------------===
  Total Execution Time: 2.4018 seconds (2.4271 wall clock)

   ---User Time---   --System Time--   --User+System--   ---Wall Time---  --- Name ---
   2.0071 (100.0%)   0.3948 (100.0%)   2.4018 (100.0%)   2.4271 (100.0%)  Clang front-end timer
   2.0071 (100.0%)   0.3948 (100.0%)   2.4018 (100.0%)   2.4271 (100.0%)  Total

