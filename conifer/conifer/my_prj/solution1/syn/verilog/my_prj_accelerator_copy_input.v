// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module my_prj_accelerator_copy_input (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        m_axi_gmem0_AWVALID,
        m_axi_gmem0_AWREADY,
        m_axi_gmem0_AWADDR,
        m_axi_gmem0_AWID,
        m_axi_gmem0_AWLEN,
        m_axi_gmem0_AWSIZE,
        m_axi_gmem0_AWBURST,
        m_axi_gmem0_AWLOCK,
        m_axi_gmem0_AWCACHE,
        m_axi_gmem0_AWPROT,
        m_axi_gmem0_AWQOS,
        m_axi_gmem0_AWREGION,
        m_axi_gmem0_AWUSER,
        m_axi_gmem0_WVALID,
        m_axi_gmem0_WREADY,
        m_axi_gmem0_WDATA,
        m_axi_gmem0_WSTRB,
        m_axi_gmem0_WLAST,
        m_axi_gmem0_WID,
        m_axi_gmem0_WUSER,
        m_axi_gmem0_ARVALID,
        m_axi_gmem0_ARREADY,
        m_axi_gmem0_ARADDR,
        m_axi_gmem0_ARID,
        m_axi_gmem0_ARLEN,
        m_axi_gmem0_ARSIZE,
        m_axi_gmem0_ARBURST,
        m_axi_gmem0_ARLOCK,
        m_axi_gmem0_ARCACHE,
        m_axi_gmem0_ARPROT,
        m_axi_gmem0_ARQOS,
        m_axi_gmem0_ARREGION,
        m_axi_gmem0_ARUSER,
        m_axi_gmem0_RVALID,
        m_axi_gmem0_RREADY,
        m_axi_gmem0_RDATA,
        m_axi_gmem0_RLAST,
        m_axi_gmem0_RID,
        m_axi_gmem0_RFIFONUM,
        m_axi_gmem0_RUSER,
        m_axi_gmem0_RRESP,
        m_axi_gmem0_BVALID,
        m_axi_gmem0_BREADY,
        m_axi_gmem0_BRESP,
        m_axi_gmem0_BID,
        m_axi_gmem0_BUSER,
        ap_ce,
        n,
        x_in,
        ap_return_0,
        ap_return_1,
        ap_return_2,
        ap_return_3,
        ap_return_4,
        ap_return_5,
        ap_return_6,
        ap_return_7,
        ap_return_8,
        ap_return_9,
        gmem0_blk_n_AR,
        gmem0_blk_n_R
);

parameter    ap_ST_fsm_pp0_stage0 = 10'd1;
parameter    ap_ST_fsm_pp0_stage1 = 10'd2;
parameter    ap_ST_fsm_pp0_stage2 = 10'd4;
parameter    ap_ST_fsm_pp0_stage3 = 10'd8;
parameter    ap_ST_fsm_pp0_stage4 = 10'd16;
parameter    ap_ST_fsm_pp0_stage5 = 10'd32;
parameter    ap_ST_fsm_pp0_stage6 = 10'd64;
parameter    ap_ST_fsm_pp0_stage7 = 10'd128;
parameter    ap_ST_fsm_pp0_stage8 = 10'd256;
parameter    ap_ST_fsm_pp0_stage9 = 10'd512;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output   m_axi_gmem0_AWVALID;
input   m_axi_gmem0_AWREADY;
output  [31:0] m_axi_gmem0_AWADDR;
output  [0:0] m_axi_gmem0_AWID;
output  [31:0] m_axi_gmem0_AWLEN;
output  [2:0] m_axi_gmem0_AWSIZE;
output  [1:0] m_axi_gmem0_AWBURST;
output  [1:0] m_axi_gmem0_AWLOCK;
output  [3:0] m_axi_gmem0_AWCACHE;
output  [2:0] m_axi_gmem0_AWPROT;
output  [3:0] m_axi_gmem0_AWQOS;
output  [3:0] m_axi_gmem0_AWREGION;
output  [0:0] m_axi_gmem0_AWUSER;
output   m_axi_gmem0_WVALID;
input   m_axi_gmem0_WREADY;
output  [31:0] m_axi_gmem0_WDATA;
output  [3:0] m_axi_gmem0_WSTRB;
output   m_axi_gmem0_WLAST;
output  [0:0] m_axi_gmem0_WID;
output  [0:0] m_axi_gmem0_WUSER;
output   m_axi_gmem0_ARVALID;
input   m_axi_gmem0_ARREADY;
output  [31:0] m_axi_gmem0_ARADDR;
output  [0:0] m_axi_gmem0_ARID;
output  [31:0] m_axi_gmem0_ARLEN;
output  [2:0] m_axi_gmem0_ARSIZE;
output  [1:0] m_axi_gmem0_ARBURST;
output  [1:0] m_axi_gmem0_ARLOCK;
output  [3:0] m_axi_gmem0_ARCACHE;
output  [2:0] m_axi_gmem0_ARPROT;
output  [3:0] m_axi_gmem0_ARQOS;
output  [3:0] m_axi_gmem0_ARREGION;
output  [0:0] m_axi_gmem0_ARUSER;
input   m_axi_gmem0_RVALID;
output   m_axi_gmem0_RREADY;
input  [31:0] m_axi_gmem0_RDATA;
input   m_axi_gmem0_RLAST;
input  [0:0] m_axi_gmem0_RID;
input  [8:0] m_axi_gmem0_RFIFONUM;
input  [0:0] m_axi_gmem0_RUSER;
input  [1:0] m_axi_gmem0_RRESP;
input   m_axi_gmem0_BVALID;
output   m_axi_gmem0_BREADY;
input  [1:0] m_axi_gmem0_BRESP;
input  [0:0] m_axi_gmem0_BID;
input  [0:0] m_axi_gmem0_BUSER;
input   ap_ce;
input  [28:0] n;
input  [31:0] x_in;
output  [17:0] ap_return_0;
output  [17:0] ap_return_1;
output  [17:0] ap_return_2;
output  [17:0] ap_return_3;
output  [17:0] ap_return_4;
output  [17:0] ap_return_5;
output  [17:0] ap_return_6;
output  [17:0] ap_return_7;
output  [17:0] ap_return_8;
output  [17:0] ap_return_9;
output   gmem0_blk_n_AR;
output   gmem0_blk_n_R;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg m_axi_gmem0_ARVALID;
reg m_axi_gmem0_RREADY;
reg gmem0_blk_n_AR;
reg gmem0_blk_n_R;

(* fsm_encoding = "none" *) reg   [9:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage9;
reg    ap_block_state20_pp0_stage9_iter1;
reg    ap_block_pp0_stage9_subdone;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_pp0_stage2;
wire    ap_block_pp0_stage0;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_pp0_stage1;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_pp0_stage3;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_pp0_stage4;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_pp0_stage5;
wire    ap_CS_fsm_pp0_stage6;
wire    ap_block_pp0_stage6;
wire    ap_CS_fsm_pp0_stage7;
wire    ap_block_pp0_stage7;
wire    ap_CS_fsm_pp0_stage8;
wire    ap_block_pp0_stage8;
wire    ap_block_pp0_stage9;
wire   [26:0] trunc_ln15_fu_111_p1;
reg   [26:0] trunc_ln15_reg_2302;
reg    ap_block_state11_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_11001;
wire   [31:0] add_ln15_1_fu_123_p2;
reg   [31:0] add_ln15_1_reg_2307;
reg   [29:0] trunc_ln15_2_reg_2312;
reg    ap_block_state12_pp0_stage1_iter1;
reg    ap_block_pp0_stage1_11001;
reg    ap_block_state13_pp0_stage2_iter1;
reg    ap_block_pp0_stage2_11001;
reg   [31:0] gmem0_addr_read_reg_2323;
reg   [31:0] gmem0_addr_read_reg_2323_pp0_iter2_reg;
wire   [31:0] bitcast_ln15_fu_161_p1;
reg   [31:0] gmem0_addr_read_1_reg_2334;
reg   [31:0] gmem0_addr_read_1_reg_2334_pp0_iter2_reg;
wire   [31:0] bitcast_ln15_1_fu_165_p1;
reg   [31:0] gmem0_addr_read_2_reg_2345;
reg   [31:0] gmem0_addr_read_2_reg_2345_pp0_iter2_reg;
wire   [31:0] bitcast_ln15_2_fu_169_p1;
reg    ap_block_state14_pp0_stage3_iter1;
reg    ap_block_pp0_stage3_11001;
reg   [31:0] gmem0_addr_read_3_reg_2356;
reg   [31:0] gmem0_addr_read_3_reg_2356_pp0_iter2_reg;
wire   [31:0] bitcast_ln15_3_fu_173_p1;
reg    ap_block_state15_pp0_stage4_iter1;
reg    ap_block_pp0_stage4_11001;
reg   [31:0] gmem0_addr_read_4_reg_2367;
reg   [31:0] gmem0_addr_read_4_reg_2367_pp0_iter2_reg;
wire   [62:0] trunc_ln15_1_fu_181_p1;
reg   [62:0] trunc_ln15_1_reg_2373;
reg   [0:0] tmp_reg_2378;
reg   [10:0] tmp2_reg_2383;
wire   [51:0] trunc_ln15_3_fu_203_p1;
reg   [51:0] trunc_ln15_3_reg_2388;
wire   [31:0] bitcast_ln15_4_fu_207_p1;
reg    ap_block_state16_pp0_stage5_iter1;
reg    ap_block_pp0_stage5_11001;
reg   [31:0] gmem0_addr_read_5_reg_2398;
reg   [31:0] gmem0_addr_read_5_reg_2398_pp0_iter2_reg;
wire   [53:0] zext_ln15_1_fu_221_p1;
reg   [53:0] zext_ln15_1_reg_2404;
wire   [53:0] sub_ln15_fu_225_p2;
reg   [53:0] sub_ln15_reg_2409;
wire   [0:0] icmp_ln15_fu_231_p2;
reg   [0:0] icmp_ln15_reg_2414;
wire   [10:0] trunc_ln15_4_fu_242_p1;
reg   [10:0] trunc_ln15_4_reg_2421;
wire   [0:0] icmp_ln15_1_fu_246_p2;
reg   [0:0] icmp_ln15_1_reg_2427;
wire   [0:0] icmp_ln15_2_fu_252_p2;
reg   [0:0] icmp_ln15_2_reg_2433;
wire   [62:0] trunc_ln15_8_fu_262_p1;
reg   [62:0] trunc_ln15_8_reg_2439;
reg   [0:0] tmp_10_reg_2444;
reg   [10:0] tmp_s_reg_2449;
wire   [51:0] trunc_ln15_9_fu_284_p1;
reg   [51:0] trunc_ln15_9_reg_2454;
wire   [31:0] bitcast_ln15_5_fu_288_p1;
reg    ap_block_state17_pp0_stage6_iter1;
reg    ap_block_pp0_stage6_11001;
reg   [31:0] gmem0_addr_read_6_reg_2464;
reg   [31:0] gmem0_addr_read_6_reg_2464_pp0_iter2_reg;
wire   [53:0] select_ln15_fu_292_p3;
reg   [53:0] select_ln15_reg_2470;
wire   [10:0] select_ln15_1_fu_307_p3;
reg   [10:0] select_ln15_1_reg_2475;
wire   [17:0] trunc_ln15_5_fu_314_p1;
reg   [17:0] trunc_ln15_5_reg_2483;
wire   [53:0] zext_ln15_7_fu_328_p1;
reg   [53:0] zext_ln15_7_reg_2489;
wire   [53:0] sub_ln15_3_fu_332_p2;
reg   [53:0] sub_ln15_3_reg_2494;
wire   [0:0] icmp_ln15_5_fu_338_p2;
reg   [0:0] icmp_ln15_5_reg_2499;
wire   [10:0] trunc_ln15_10_fu_349_p1;
reg   [10:0] trunc_ln15_10_reg_2506;
wire   [0:0] icmp_ln15_6_fu_353_p2;
reg   [0:0] icmp_ln15_6_reg_2512;
wire   [0:0] icmp_ln15_7_fu_359_p2;
reg   [0:0] icmp_ln15_7_reg_2518;
wire   [62:0] trunc_ln15_14_fu_369_p1;
reg   [62:0] trunc_ln15_14_reg_2524;
reg   [0:0] tmp_12_reg_2529;
reg   [10:0] tmp_1_reg_2534;
wire   [51:0] trunc_ln15_15_fu_391_p1;
reg   [51:0] trunc_ln15_15_reg_2539;
wire   [31:0] bitcast_ln15_6_fu_395_p1;
reg    ap_block_state18_pp0_stage7_iter1;
reg    ap_block_pp0_stage7_11001;
reg   [31:0] gmem0_addr_read_7_reg_2549;
reg   [31:0] gmem0_addr_read_7_reg_2549_pp0_iter2_reg;
wire   [0:0] icmp_ln15_3_fu_399_p2;
reg   [0:0] icmp_ln15_3_reg_2555;
wire   [0:0] icmp_ln15_4_fu_412_p2;
reg   [0:0] icmp_ln15_4_reg_2565;
wire   [53:0] select_ln15_4_fu_425_p3;
reg   [53:0] select_ln15_4_reg_2575;
wire   [10:0] select_ln15_5_fu_440_p3;
reg   [10:0] select_ln15_5_reg_2580;
wire   [17:0] trunc_ln15_11_fu_447_p1;
reg   [17:0] trunc_ln15_11_reg_2588;
wire   [53:0] zext_ln15_13_fu_461_p1;
reg   [53:0] zext_ln15_13_reg_2594;
wire   [53:0] sub_ln15_6_fu_465_p2;
reg   [53:0] sub_ln15_6_reg_2599;
wire   [0:0] icmp_ln15_10_fu_471_p2;
reg   [0:0] icmp_ln15_10_reg_2604;
wire   [10:0] trunc_ln15_16_fu_482_p1;
reg   [10:0] trunc_ln15_16_reg_2611;
wire   [0:0] icmp_ln15_11_fu_486_p2;
reg   [0:0] icmp_ln15_11_reg_2617;
wire   [0:0] icmp_ln15_12_fu_492_p2;
reg   [0:0] icmp_ln15_12_reg_2623;
wire   [62:0] trunc_ln15_20_fu_502_p1;
reg   [62:0] trunc_ln15_20_reg_2629;
reg   [0:0] tmp_14_reg_2634;
reg   [10:0] tmp_2_reg_2639;
wire   [51:0] trunc_ln15_21_fu_524_p1;
reg   [51:0] trunc_ln15_21_reg_2644;
wire   [31:0] bitcast_ln15_7_fu_528_p1;
reg    ap_block_state19_pp0_stage8_iter1;
reg    ap_block_pp0_stage8_11001;
reg   [31:0] gmem0_addr_read_8_reg_2654;
reg   [31:0] gmem0_addr_read_8_reg_2654_pp0_iter2_reg;
wire   [17:0] grp_fu_420_p2;
reg   [17:0] shl_ln15_reg_2660;
wire   [0:0] icmp_ln15_8_fu_532_p2;
reg   [0:0] icmp_ln15_8_reg_2665;
wire   [0:0] icmp_ln15_9_fu_545_p2;
reg   [0:0] icmp_ln15_9_reg_2675;
wire   [53:0] select_ln15_8_fu_558_p3;
reg   [53:0] select_ln15_8_reg_2685;
wire   [10:0] select_ln15_9_fu_573_p3;
reg   [10:0] select_ln15_9_reg_2690;
wire   [17:0] trunc_ln15_17_fu_580_p1;
reg   [17:0] trunc_ln15_17_reg_2698;
wire   [53:0] zext_ln15_19_fu_594_p1;
reg   [53:0] zext_ln15_19_reg_2704;
wire   [53:0] sub_ln15_9_fu_598_p2;
reg   [53:0] sub_ln15_9_reg_2709;
wire   [0:0] icmp_ln15_15_fu_604_p2;
reg   [0:0] icmp_ln15_15_reg_2714;
wire   [10:0] trunc_ln15_22_fu_615_p1;
reg   [10:0] trunc_ln15_22_reg_2721;
wire   [0:0] icmp_ln15_16_fu_619_p2;
reg   [0:0] icmp_ln15_16_reg_2727;
wire   [0:0] icmp_ln15_17_fu_625_p2;
reg   [0:0] icmp_ln15_17_reg_2733;
wire   [62:0] trunc_ln15_26_fu_635_p1;
reg   [62:0] trunc_ln15_26_reg_2739;
reg   [0:0] tmp_16_reg_2744;
reg   [10:0] tmp_3_reg_2749;
wire   [51:0] trunc_ln15_27_fu_657_p1;
reg   [51:0] trunc_ln15_27_reg_2754;
wire   [31:0] bitcast_ln15_8_fu_661_p1;
reg    ap_block_pp0_stage9_11001;
reg   [31:0] gmem0_addr_read_9_reg_2764;
reg   [31:0] gmem0_addr_read_9_reg_2764_pp0_iter2_reg;
wire   [17:0] select_ln15_41_fu_688_p3;
reg   [17:0] select_ln15_41_reg_2770;
wire   [0:0] and_ln15_1_fu_705_p2;
reg   [0:0] and_ln15_1_reg_2775;
wire   [17:0] grp_fu_553_p2;
reg   [17:0] shl_ln15_1_reg_2780;
wire   [0:0] icmp_ln15_13_fu_710_p2;
reg   [0:0] icmp_ln15_13_reg_2785;
wire   [0:0] icmp_ln15_14_fu_723_p2;
reg   [0:0] icmp_ln15_14_reg_2795;
wire   [53:0] select_ln15_12_fu_736_p3;
reg   [53:0] select_ln15_12_reg_2805;
wire   [10:0] select_ln15_13_fu_751_p3;
reg   [10:0] select_ln15_13_reg_2810;
wire   [17:0] trunc_ln15_23_fu_758_p1;
reg   [17:0] trunc_ln15_23_reg_2818;
wire   [53:0] zext_ln15_25_fu_772_p1;
reg   [53:0] zext_ln15_25_reg_2824;
wire   [53:0] sub_ln15_12_fu_776_p2;
reg   [53:0] sub_ln15_12_reg_2829;
wire   [0:0] icmp_ln15_20_fu_782_p2;
reg   [0:0] icmp_ln15_20_reg_2834;
wire   [10:0] trunc_ln15_28_fu_793_p1;
reg   [10:0] trunc_ln15_28_reg_2841;
wire   [0:0] icmp_ln15_21_fu_797_p2;
reg   [0:0] icmp_ln15_21_reg_2847;
wire   [0:0] icmp_ln15_22_fu_803_p2;
reg   [0:0] icmp_ln15_22_reg_2853;
wire   [62:0] trunc_ln15_32_fu_813_p1;
reg   [62:0] trunc_ln15_32_reg_2859;
reg   [0:0] tmp_18_reg_2864;
reg   [10:0] tmp_4_reg_2869;
wire   [51:0] trunc_ln15_33_fu_835_p1;
reg   [51:0] trunc_ln15_33_reg_2874;
wire   [31:0] bitcast_ln15_9_fu_839_p1;
wire   [17:0] select_ln15_44_fu_866_p3;
reg   [17:0] select_ln15_44_reg_2884;
wire   [0:0] and_ln15_3_fu_883_p2;
reg   [0:0] and_ln15_3_reg_2889;
wire   [17:0] grp_fu_731_p2;
reg   [17:0] shl_ln15_2_reg_2894;
wire   [0:0] icmp_ln15_18_fu_888_p2;
reg   [0:0] icmp_ln15_18_reg_2899;
wire   [0:0] icmp_ln15_19_fu_901_p2;
reg   [0:0] icmp_ln15_19_reg_2909;
wire   [53:0] select_ln15_16_fu_914_p3;
reg   [53:0] select_ln15_16_reg_2919;
wire   [10:0] select_ln15_17_fu_929_p3;
reg   [10:0] select_ln15_17_reg_2924;
wire   [17:0] trunc_ln15_29_fu_936_p1;
reg   [17:0] trunc_ln15_29_reg_2932;
wire   [53:0] zext_ln15_30_fu_950_p1;
reg   [53:0] zext_ln15_30_reg_2938;
wire   [53:0] sub_ln15_15_fu_954_p2;
reg   [53:0] sub_ln15_15_reg_2943;
wire   [0:0] icmp_ln15_25_fu_960_p2;
reg   [0:0] icmp_ln15_25_reg_2948;
wire   [10:0] trunc_ln15_34_fu_971_p1;
reg   [10:0] trunc_ln15_34_reg_2955;
wire   [0:0] icmp_ln15_26_fu_975_p2;
reg   [0:0] icmp_ln15_26_reg_2961;
wire   [0:0] icmp_ln15_27_fu_981_p2;
reg   [0:0] icmp_ln15_27_reg_2967;
wire   [62:0] trunc_ln15_38_fu_991_p1;
reg   [62:0] trunc_ln15_38_reg_2973;
reg   [0:0] tmp_20_reg_2978;
reg   [10:0] tmp_5_reg_2983;
wire   [51:0] trunc_ln15_39_fu_1013_p1;
reg   [51:0] trunc_ln15_39_reg_2988;
wire   [17:0] select_ln15_47_fu_1040_p3;
reg   [17:0] select_ln15_47_reg_2993;
wire   [0:0] and_ln15_5_fu_1057_p2;
reg   [0:0] and_ln15_5_reg_2998;
wire   [17:0] grp_fu_909_p2;
reg   [17:0] shl_ln15_3_reg_3003;
wire   [0:0] icmp_ln15_23_fu_1062_p2;
reg   [0:0] icmp_ln15_23_reg_3008;
wire   [0:0] icmp_ln15_24_fu_1075_p2;
reg   [0:0] icmp_ln15_24_reg_3018;
wire   [53:0] select_ln15_20_fu_1088_p3;
reg   [53:0] select_ln15_20_reg_3028;
wire   [10:0] select_ln15_21_fu_1103_p3;
reg   [10:0] select_ln15_21_reg_3033;
wire   [17:0] trunc_ln15_35_fu_1110_p1;
reg   [17:0] trunc_ln15_35_reg_3041;
wire   [53:0] zext_ln15_32_fu_1124_p1;
reg   [53:0] zext_ln15_32_reg_3047;
wire   [53:0] sub_ln15_18_fu_1128_p2;
reg   [53:0] sub_ln15_18_reg_3052;
wire   [0:0] icmp_ln15_30_fu_1134_p2;
reg   [0:0] icmp_ln15_30_reg_3057;
wire   [10:0] trunc_ln15_40_fu_1145_p1;
reg   [10:0] trunc_ln15_40_reg_3064;
wire   [0:0] icmp_ln15_31_fu_1149_p2;
reg   [0:0] icmp_ln15_31_reg_3070;
wire   [0:0] icmp_ln15_32_fu_1155_p2;
reg   [0:0] icmp_ln15_32_reg_3076;
wire   [62:0] trunc_ln15_44_fu_1165_p1;
reg   [62:0] trunc_ln15_44_reg_3082;
reg   [0:0] tmp_22_reg_3087;
reg   [10:0] tmp_6_reg_3092;
wire   [51:0] trunc_ln15_45_fu_1187_p1;
reg   [51:0] trunc_ln15_45_reg_3097;
wire   [17:0] select_ln15_50_fu_1214_p3;
reg   [17:0] select_ln15_50_reg_3102;
wire   [0:0] and_ln15_7_fu_1231_p2;
reg   [0:0] and_ln15_7_reg_3107;
wire   [17:0] grp_fu_1083_p2;
reg   [17:0] shl_ln15_4_reg_3112;
wire   [0:0] icmp_ln15_28_fu_1236_p2;
reg   [0:0] icmp_ln15_28_reg_3117;
wire   [0:0] icmp_ln15_29_fu_1249_p2;
reg   [0:0] icmp_ln15_29_reg_3127;
wire   [53:0] select_ln15_24_fu_1262_p3;
reg   [53:0] select_ln15_24_reg_3137;
wire   [10:0] select_ln15_25_fu_1277_p3;
reg   [10:0] select_ln15_25_reg_3142;
wire   [17:0] trunc_ln15_41_fu_1284_p1;
reg   [17:0] trunc_ln15_41_reg_3150;
wire   [53:0] zext_ln15_34_fu_1298_p1;
reg   [53:0] zext_ln15_34_reg_3156;
wire   [53:0] sub_ln15_21_fu_1302_p2;
reg   [53:0] sub_ln15_21_reg_3161;
wire   [0:0] icmp_ln15_35_fu_1308_p2;
reg   [0:0] icmp_ln15_35_reg_3166;
wire   [10:0] trunc_ln15_46_fu_1319_p1;
reg   [10:0] trunc_ln15_46_reg_3173;
wire   [0:0] icmp_ln15_36_fu_1323_p2;
reg   [0:0] icmp_ln15_36_reg_3179;
wire   [0:0] icmp_ln15_37_fu_1329_p2;
reg   [0:0] icmp_ln15_37_reg_3185;
wire   [62:0] trunc_ln15_50_fu_1339_p1;
reg   [62:0] trunc_ln15_50_reg_3191;
reg   [0:0] tmp_24_reg_3196;
reg   [10:0] tmp_7_reg_3201;
wire   [51:0] trunc_ln15_51_fu_1361_p1;
reg   [51:0] trunc_ln15_51_reg_3206;
wire   [53:0] grp_fu_407_p2;
reg   [53:0] ashr_ln15_reg_3211;
wire   [17:0] select_ln15_53_fu_1388_p3;
reg   [17:0] select_ln15_53_reg_3216;
wire   [0:0] and_ln15_9_fu_1405_p2;
reg   [0:0] and_ln15_9_reg_3221;
wire   [17:0] grp_fu_1257_p2;
reg   [17:0] shl_ln15_5_reg_3226;
wire   [0:0] icmp_ln15_33_fu_1410_p2;
reg   [0:0] icmp_ln15_33_reg_3231;
wire   [0:0] icmp_ln15_34_fu_1423_p2;
reg   [0:0] icmp_ln15_34_reg_3241;
wire   [53:0] select_ln15_28_fu_1436_p3;
reg   [53:0] select_ln15_28_reg_3251;
wire   [10:0] select_ln15_29_fu_1451_p3;
reg   [10:0] select_ln15_29_reg_3256;
wire   [17:0] trunc_ln15_47_fu_1458_p1;
reg   [17:0] trunc_ln15_47_reg_3264;
wire   [53:0] zext_ln15_36_fu_1472_p1;
reg   [53:0] zext_ln15_36_reg_3270;
wire   [53:0] sub_ln15_24_fu_1476_p2;
reg   [53:0] sub_ln15_24_reg_3275;
wire   [0:0] icmp_ln15_40_fu_1482_p2;
reg   [0:0] icmp_ln15_40_reg_3280;
wire   [10:0] trunc_ln15_52_fu_1493_p1;
reg   [10:0] trunc_ln15_52_reg_3287;
wire   [0:0] icmp_ln15_41_fu_1497_p2;
reg   [0:0] icmp_ln15_41_reg_3293;
wire   [0:0] icmp_ln15_42_fu_1503_p2;
reg   [0:0] icmp_ln15_42_reg_3299;
wire   [62:0] trunc_ln15_56_fu_1513_p1;
reg   [62:0] trunc_ln15_56_reg_3305;
reg   [0:0] tmp_26_reg_3310;
reg   [10:0] tmp_8_reg_3315;
wire   [51:0] trunc_ln15_57_fu_1535_p1;
reg   [51:0] trunc_ln15_57_reg_3320;
wire   [17:0] select_ln15_42_fu_1564_p3;
reg   [17:0] select_ln15_42_reg_3325;
wire   [53:0] grp_fu_540_p2;
reg   [53:0] ashr_ln15_1_reg_3330;
wire   [17:0] select_ln15_56_fu_1593_p3;
reg   [17:0] select_ln15_56_reg_3335;
wire   [0:0] and_ln15_11_fu_1610_p2;
reg   [0:0] and_ln15_11_reg_3340;
wire   [17:0] grp_fu_1431_p2;
reg   [17:0] shl_ln15_6_reg_3345;
wire   [0:0] icmp_ln15_38_fu_1615_p2;
reg   [0:0] icmp_ln15_38_reg_3350;
wire   [0:0] icmp_ln15_39_fu_1628_p2;
reg   [0:0] icmp_ln15_39_reg_3360;
wire   [53:0] select_ln15_32_fu_1641_p3;
reg   [53:0] select_ln15_32_reg_3370;
wire   [10:0] select_ln15_33_fu_1656_p3;
reg   [10:0] select_ln15_33_reg_3375;
wire   [17:0] trunc_ln15_53_fu_1663_p1;
reg   [17:0] trunc_ln15_53_reg_3383;
wire   [53:0] zext_ln15_38_fu_1677_p1;
reg   [53:0] zext_ln15_38_reg_3389;
wire   [53:0] sub_ln15_27_fu_1681_p2;
reg   [53:0] sub_ln15_27_reg_3394;
wire   [0:0] icmp_ln15_45_fu_1687_p2;
reg   [0:0] icmp_ln15_45_reg_3399;
wire   [10:0] trunc_ln15_58_fu_1698_p1;
reg   [10:0] trunc_ln15_58_reg_3406;
wire   [0:0] icmp_ln15_46_fu_1702_p2;
reg   [0:0] icmp_ln15_46_reg_3412;
wire   [0:0] icmp_ln15_47_fu_1708_p2;
reg   [0:0] icmp_ln15_47_reg_3418;
wire   [17:0] select_ln15_45_fu_1739_p3;
reg   [17:0] select_ln15_45_reg_3424;
wire   [53:0] grp_fu_718_p2;
reg   [53:0] ashr_ln15_2_reg_3429;
wire   [17:0] select_ln15_59_fu_1768_p3;
reg   [17:0] select_ln15_59_reg_3434;
wire   [0:0] and_ln15_13_fu_1785_p2;
reg   [0:0] and_ln15_13_reg_3439;
wire   [17:0] grp_fu_1636_p2;
reg   [17:0] shl_ln15_7_reg_3444;
wire   [0:0] icmp_ln15_43_fu_1790_p2;
reg   [0:0] icmp_ln15_43_reg_3449;
wire   [0:0] icmp_ln15_44_fu_1803_p2;
reg   [0:0] icmp_ln15_44_reg_3459;
wire   [53:0] select_ln15_36_fu_1816_p3;
reg   [53:0] select_ln15_36_reg_3469;
wire   [10:0] select_ln15_37_fu_1831_p3;
reg   [10:0] select_ln15_37_reg_3474;
wire   [17:0] trunc_ln15_59_fu_1838_p1;
reg   [17:0] trunc_ln15_59_reg_3482;
wire   [17:0] select_ln15_48_fu_1867_p3;
reg   [17:0] select_ln15_48_reg_3488;
wire   [53:0] grp_fu_896_p2;
reg   [53:0] ashr_ln15_3_reg_3493;
wire   [17:0] select_ln15_62_fu_1896_p3;
reg   [17:0] select_ln15_62_reg_3498;
wire   [0:0] and_ln15_15_fu_1913_p2;
reg   [0:0] and_ln15_15_reg_3503;
wire   [17:0] grp_fu_1811_p2;
reg   [17:0] shl_ln15_8_reg_3508;
wire   [0:0] icmp_ln15_48_fu_1918_p2;
reg   [0:0] icmp_ln15_48_reg_3513;
wire   [0:0] icmp_ln15_49_fu_1931_p2;
reg   [0:0] icmp_ln15_49_reg_3523;
wire   [17:0] select_ln15_51_fu_1969_p3;
reg   [17:0] select_ln15_51_reg_3533;
wire   [53:0] grp_fu_1070_p2;
reg   [53:0] ashr_ln15_4_reg_3538;
wire   [17:0] select_ln15_65_fu_1998_p3;
reg   [17:0] select_ln15_65_reg_3543;
wire   [0:0] and_ln15_17_fu_2015_p2;
reg   [0:0] and_ln15_17_reg_3548;
wire   [17:0] grp_fu_1939_p2;
reg   [17:0] shl_ln15_9_reg_3553;
wire   [17:0] select_ln15_54_fu_2045_p3;
reg   [17:0] select_ln15_54_reg_3558;
wire   [53:0] grp_fu_1244_p2;
reg   [53:0] ashr_ln15_5_reg_3563;
wire   [17:0] select_ln15_68_fu_2074_p3;
reg   [17:0] select_ln15_68_reg_3568;
wire   [0:0] and_ln15_19_fu_2091_p2;
reg   [0:0] and_ln15_19_reg_3573;
wire   [17:0] select_ln15_57_fu_2121_p3;
reg   [17:0] select_ln15_57_reg_3578;
wire   [53:0] grp_fu_1418_p2;
reg   [53:0] ashr_ln15_6_reg_3583;
wire   [17:0] select_ln15_60_fu_2152_p3;
reg   [17:0] select_ln15_60_reg_3588;
wire   [53:0] grp_fu_1623_p2;
reg   [53:0] ashr_ln15_7_reg_3593;
wire   [17:0] select_ln15_63_fu_2183_p3;
reg   [17:0] select_ln15_63_reg_3598;
wire   [53:0] grp_fu_1798_p2;
reg   [53:0] ashr_ln15_8_reg_3603;
wire   [17:0] select_ln15_66_fu_2214_p3;
reg   [17:0] select_ln15_66_reg_3608;
wire   [53:0] grp_fu_1926_p2;
reg   [53:0] ashr_ln15_9_reg_3613;
reg    ap_enable_reg_pp0_iter0_reg;
reg    ap_block_pp0_stage3_subdone;
wire  signed [31:0] sext_ln15_fu_151_p1;
reg   [31:0] grp_fu_108_p0;
wire   [31:0] shl_ln15_10_fu_115_p3;
wire   [31:0] shl_ln15_s_fu_129_p3;
wire   [31:0] add_ln15_fu_136_p2;
wire   [63:0] grp_fu_108_p1;
wire   [63:0] bitcast_ln724_fu_177_p1;
wire   [52:0] zext_ln15_1_cast_fu_214_p3;
wire   [11:0] zext_ln15_fu_211_p1;
wire   [11:0] sub_ln15_1_fu_236_p2;
wire   [63:0] bitcast_ln724_1_fu_258_p1;
wire   [10:0] add_ln15_2_fu_297_p2;
wire   [10:0] sub_ln15_2_fu_302_p2;
wire   [52:0] zext_ln15_7_cast_fu_321_p3;
wire   [11:0] zext_ln15_3_fu_318_p1;
wire   [11:0] sub_ln15_4_fu_343_p2;
wire   [63:0] bitcast_ln724_2_fu_365_p1;
wire   [53:0] grp_fu_407_p1;
wire   [17:0] grp_fu_420_p1;
wire   [10:0] add_ln15_3_fu_430_p2;
wire   [10:0] sub_ln15_5_fu_435_p2;
wire   [52:0] zext_ln15_13_cast_fu_454_p3;
wire   [11:0] zext_ln15_6_fu_451_p1;
wire   [11:0] sub_ln15_7_fu_476_p2;
wire   [63:0] bitcast_ln724_3_fu_498_p1;
wire   [53:0] grp_fu_540_p1;
wire   [17:0] grp_fu_553_p1;
wire   [10:0] add_ln15_4_fu_563_p2;
wire   [10:0] sub_ln15_8_fu_568_p2;
wire   [52:0] zext_ln15_19_cast_fu_587_p3;
wire   [11:0] zext_ln15_9_fu_584_p1;
wire   [11:0] sub_ln15_10_fu_609_p2;
wire   [63:0] bitcast_ln724_4_fu_631_p1;
wire   [17:0] select_ln15_3_fu_665_p3;
wire   [0:0] xor_ln15_fu_678_p2;
wire   [0:0] and_ln15_fu_683_p2;
wire   [17:0] select_ln15_40_fu_671_p3;
wire   [0:0] or_ln15_fu_695_p2;
wire   [0:0] xor_ln15_1_fu_699_p2;
wire   [53:0] grp_fu_718_p1;
wire   [17:0] grp_fu_731_p1;
wire   [10:0] add_ln15_5_fu_741_p2;
wire   [10:0] sub_ln15_11_fu_746_p2;
wire   [52:0] zext_ln15_25_cast_fu_765_p3;
wire   [11:0] zext_ln15_12_fu_762_p1;
wire   [11:0] sub_ln15_13_fu_787_p2;
wire   [63:0] bitcast_ln724_5_fu_809_p1;
wire   [17:0] select_ln15_7_fu_843_p3;
wire   [0:0] xor_ln15_2_fu_856_p2;
wire   [0:0] and_ln15_2_fu_861_p2;
wire   [17:0] select_ln15_43_fu_849_p3;
wire   [0:0] or_ln15_1_fu_873_p2;
wire   [0:0] xor_ln15_3_fu_877_p2;
wire   [53:0] grp_fu_896_p1;
wire   [17:0] grp_fu_909_p1;
wire   [10:0] add_ln15_6_fu_919_p2;
wire   [10:0] sub_ln15_14_fu_924_p2;
wire   [52:0] zext_ln15_30_cast_fu_943_p3;
wire   [11:0] zext_ln15_15_fu_940_p1;
wire   [11:0] sub_ln15_16_fu_965_p2;
wire   [63:0] bitcast_ln724_6_fu_987_p1;
wire   [17:0] select_ln15_11_fu_1017_p3;
wire   [0:0] xor_ln15_4_fu_1030_p2;
wire   [0:0] and_ln15_4_fu_1035_p2;
wire   [17:0] select_ln15_46_fu_1023_p3;
wire   [0:0] or_ln15_2_fu_1047_p2;
wire   [0:0] xor_ln15_5_fu_1051_p2;
wire   [53:0] grp_fu_1070_p1;
wire   [17:0] grp_fu_1083_p1;
wire   [10:0] add_ln15_7_fu_1093_p2;
wire   [10:0] sub_ln15_17_fu_1098_p2;
wire   [52:0] zext_ln15_32_cast_fu_1117_p3;
wire   [11:0] zext_ln15_18_fu_1114_p1;
wire   [11:0] sub_ln15_19_fu_1139_p2;
wire   [63:0] bitcast_ln724_7_fu_1161_p1;
wire   [17:0] select_ln15_15_fu_1191_p3;
wire   [0:0] xor_ln15_6_fu_1204_p2;
wire   [0:0] and_ln15_6_fu_1209_p2;
wire   [17:0] select_ln15_49_fu_1197_p3;
wire   [0:0] or_ln15_3_fu_1221_p2;
wire   [0:0] xor_ln15_7_fu_1225_p2;
wire   [53:0] grp_fu_1244_p1;
wire   [17:0] grp_fu_1257_p1;
wire   [10:0] add_ln15_8_fu_1267_p2;
wire   [10:0] sub_ln15_20_fu_1272_p2;
wire   [52:0] zext_ln15_34_cast_fu_1291_p3;
wire   [11:0] zext_ln15_21_fu_1288_p1;
wire   [11:0] sub_ln15_22_fu_1313_p2;
wire   [63:0] bitcast_ln724_8_fu_1335_p1;
wire   [17:0] select_ln15_19_fu_1365_p3;
wire   [0:0] xor_ln15_8_fu_1378_p2;
wire   [0:0] and_ln15_8_fu_1383_p2;
wire   [17:0] select_ln15_52_fu_1371_p3;
wire   [0:0] or_ln15_4_fu_1395_p2;
wire   [0:0] xor_ln15_9_fu_1399_p2;
wire   [53:0] grp_fu_1418_p1;
wire   [17:0] grp_fu_1431_p1;
wire   [10:0] add_ln15_9_fu_1441_p2;
wire   [10:0] sub_ln15_23_fu_1446_p2;
wire   [52:0] zext_ln15_36_cast_fu_1465_p3;
wire   [11:0] zext_ln15_24_fu_1462_p1;
wire   [11:0] sub_ln15_25_fu_1487_p2;
wire   [63:0] bitcast_ln724_9_fu_1509_p1;
wire   [0:0] tmp_9_fu_1542_p3;
wire   [17:0] trunc_ln15_6_fu_1539_p1;
wire   [17:0] select_ln15_70_fu_1549_p3;
wire   [17:0] select_ln15_2_fu_1557_p3;
wire   [17:0] select_ln15_23_fu_1570_p3;
wire   [0:0] xor_ln15_10_fu_1583_p2;
wire   [0:0] and_ln15_10_fu_1588_p2;
wire   [17:0] select_ln15_55_fu_1576_p3;
wire   [0:0] or_ln15_5_fu_1600_p2;
wire   [0:0] xor_ln15_11_fu_1604_p2;
wire   [53:0] grp_fu_1623_p1;
wire   [17:0] grp_fu_1636_p1;
wire   [10:0] add_ln15_10_fu_1646_p2;
wire   [10:0] sub_ln15_26_fu_1651_p2;
wire   [52:0] zext_ln15_38_cast_fu_1670_p3;
wire   [11:0] zext_ln15_27_fu_1667_p1;
wire   [11:0] sub_ln15_28_fu_1692_p2;
wire   [0:0] tmp_11_fu_1717_p3;
wire   [17:0] trunc_ln15_12_fu_1714_p1;
wire   [17:0] select_ln15_71_fu_1724_p3;
wire   [17:0] select_ln15_6_fu_1732_p3;
wire   [17:0] select_ln15_27_fu_1745_p3;
wire   [0:0] xor_ln15_12_fu_1758_p2;
wire   [0:0] and_ln15_12_fu_1763_p2;
wire   [17:0] select_ln15_58_fu_1751_p3;
wire   [0:0] or_ln15_6_fu_1775_p2;
wire   [0:0] xor_ln15_13_fu_1779_p2;
wire   [53:0] grp_fu_1798_p1;
wire   [17:0] grp_fu_1811_p1;
wire   [10:0] add_ln15_11_fu_1821_p2;
wire   [10:0] sub_ln15_29_fu_1826_p2;
wire   [0:0] tmp_13_fu_1845_p3;
wire   [17:0] trunc_ln15_18_fu_1842_p1;
wire   [17:0] select_ln15_72_fu_1852_p3;
wire   [17:0] select_ln15_10_fu_1860_p3;
wire   [17:0] select_ln15_31_fu_1873_p3;
wire   [0:0] xor_ln15_14_fu_1886_p2;
wire   [0:0] and_ln15_14_fu_1891_p2;
wire   [17:0] select_ln15_61_fu_1879_p3;
wire   [0:0] or_ln15_7_fu_1903_p2;
wire   [0:0] xor_ln15_15_fu_1907_p2;
wire   [53:0] grp_fu_1926_p1;
wire   [17:0] grp_fu_1939_p1;
wire   [0:0] tmp_15_fu_1947_p3;
wire   [17:0] trunc_ln15_24_fu_1944_p1;
wire   [17:0] select_ln15_73_fu_1954_p3;
wire   [17:0] select_ln15_14_fu_1962_p3;
wire   [17:0] select_ln15_35_fu_1975_p3;
wire   [0:0] xor_ln15_16_fu_1988_p2;
wire   [0:0] and_ln15_16_fu_1993_p2;
wire   [17:0] select_ln15_64_fu_1981_p3;
wire   [0:0] or_ln15_8_fu_2005_p2;
wire   [0:0] xor_ln15_17_fu_2009_p2;
wire   [0:0] tmp_17_fu_2023_p3;
wire   [17:0] trunc_ln15_30_fu_2020_p1;
wire   [17:0] select_ln15_74_fu_2030_p3;
wire   [17:0] select_ln15_18_fu_2038_p3;
wire   [17:0] select_ln15_39_fu_2051_p3;
wire   [0:0] xor_ln15_18_fu_2064_p2;
wire   [0:0] and_ln15_18_fu_2069_p2;
wire   [17:0] select_ln15_67_fu_2057_p3;
wire   [0:0] or_ln15_9_fu_2081_p2;
wire   [0:0] xor_ln15_19_fu_2085_p2;
wire   [0:0] tmp_19_fu_2099_p3;
wire   [17:0] trunc_ln15_36_fu_2096_p1;
wire   [17:0] select_ln15_75_fu_2106_p3;
wire   [17:0] select_ln15_22_fu_2114_p3;
wire   [0:0] tmp_21_fu_2130_p3;
wire   [17:0] trunc_ln15_42_fu_2127_p1;
wire   [17:0] select_ln15_76_fu_2137_p3;
wire   [17:0] select_ln15_26_fu_2145_p3;
wire   [0:0] tmp_23_fu_2161_p3;
wire   [17:0] trunc_ln15_48_fu_2158_p1;
wire   [17:0] select_ln15_77_fu_2168_p3;
wire   [17:0] select_ln15_30_fu_2176_p3;
wire   [0:0] tmp_25_fu_2192_p3;
wire   [17:0] trunc_ln15_54_fu_2189_p1;
wire   [17:0] select_ln15_78_fu_2199_p3;
wire   [17:0] select_ln15_34_fu_2207_p3;
wire   [0:0] tmp_27_fu_2223_p3;
wire   [17:0] trunc_ln15_60_fu_2220_p1;
wire   [17:0] select_ln15_79_fu_2230_p3;
wire   [17:0] select_ln15_38_fu_2238_p3;
wire   [17:0] select_ln15_69_fu_2245_p3;
reg    grp_fu_108_ce;
reg    grp_fu_407_ce;
reg    grp_fu_420_ce;
reg    grp_fu_540_ce;
reg    grp_fu_553_ce;
reg    grp_fu_718_ce;
reg    grp_fu_731_ce;
reg    grp_fu_896_ce;
reg    grp_fu_909_ce;
reg    grp_fu_1070_ce;
reg    grp_fu_1083_ce;
reg    grp_fu_1244_ce;
reg    grp_fu_1257_ce;
reg    grp_fu_1418_ce;
reg    grp_fu_1431_ce;
reg    grp_fu_1623_ce;
reg    grp_fu_1636_ce;
reg    grp_fu_1798_ce;
reg    grp_fu_1811_ce;
reg    grp_fu_1926_ce;
reg    grp_fu_1939_ce;
reg   [9:0] ap_NS_fsm;
reg    ap_block_pp0_stage0_subdone;
reg    ap_idle_pp0_1to3;
reg    ap_block_pp0_stage1_subdone;
reg    ap_block_pp0_stage2_subdone;
reg    ap_idle_pp0_0to2;
reg    ap_reset_idle_pp0;
reg    ap_block_pp0_stage4_subdone;
reg    ap_block_pp0_stage5_subdone;
reg    ap_block_pp0_stage6_subdone;
reg    ap_block_pp0_stage7_subdone;
reg    ap_block_pp0_stage8_subdone;
wire    ap_enable_pp0;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 10'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
end

my_prj_accelerator_fpext_32ns_64_4_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
fpext_32ns_64_4_no_dsp_1_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_108_p0),
    .ce(grp_fu_108_ce),
    .dout(grp_fu_108_p1)
);

my_prj_accelerator_ashr_54ns_11ns_54_7_1 #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .OP( 2 ),
    .din0_WIDTH( 54 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 54 ))
ashr_54ns_11ns_54_7_1_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(select_ln15_reg_2470),
    .din1(grp_fu_407_p1),
    .ce(grp_fu_407_ce),
    .dout(grp_fu_407_p2)
);

my_prj_accelerator_shl_18ns_11ns_18_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .OP( 0 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 18 ))
shl_18ns_11ns_18_2_1_U3(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(trunc_ln15_5_reg_2483),
    .din1(grp_fu_420_p1),
    .ce(grp_fu_420_ce),
    .dout(grp_fu_420_p2)
);

my_prj_accelerator_ashr_54ns_11ns_54_7_1 #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .OP( 2 ),
    .din0_WIDTH( 54 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 54 ))
ashr_54ns_11ns_54_7_1_U4(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(select_ln15_4_reg_2575),
    .din1(grp_fu_540_p1),
    .ce(grp_fu_540_ce),
    .dout(grp_fu_540_p2)
);

my_prj_accelerator_shl_18ns_11ns_18_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .OP( 0 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 18 ))
shl_18ns_11ns_18_2_1_U5(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(trunc_ln15_11_reg_2588),
    .din1(grp_fu_553_p1),
    .ce(grp_fu_553_ce),
    .dout(grp_fu_553_p2)
);

my_prj_accelerator_ashr_54ns_11ns_54_7_1 #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .OP( 2 ),
    .din0_WIDTH( 54 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 54 ))
ashr_54ns_11ns_54_7_1_U6(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(select_ln15_8_reg_2685),
    .din1(grp_fu_718_p1),
    .ce(grp_fu_718_ce),
    .dout(grp_fu_718_p2)
);

my_prj_accelerator_shl_18ns_11ns_18_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .OP( 0 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 18 ))
shl_18ns_11ns_18_2_1_U7(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(trunc_ln15_17_reg_2698),
    .din1(grp_fu_731_p1),
    .ce(grp_fu_731_ce),
    .dout(grp_fu_731_p2)
);

my_prj_accelerator_ashr_54ns_11ns_54_7_1 #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .OP( 2 ),
    .din0_WIDTH( 54 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 54 ))
ashr_54ns_11ns_54_7_1_U8(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(select_ln15_12_reg_2805),
    .din1(grp_fu_896_p1),
    .ce(grp_fu_896_ce),
    .dout(grp_fu_896_p2)
);

my_prj_accelerator_shl_18ns_11ns_18_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .OP( 0 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 18 ))
shl_18ns_11ns_18_2_1_U9(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(trunc_ln15_23_reg_2818),
    .din1(grp_fu_909_p1),
    .ce(grp_fu_909_ce),
    .dout(grp_fu_909_p2)
);

my_prj_accelerator_ashr_54ns_11ns_54_7_1 #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .OP( 2 ),
    .din0_WIDTH( 54 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 54 ))
ashr_54ns_11ns_54_7_1_U10(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(select_ln15_16_reg_2919),
    .din1(grp_fu_1070_p1),
    .ce(grp_fu_1070_ce),
    .dout(grp_fu_1070_p2)
);

my_prj_accelerator_shl_18ns_11ns_18_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .OP( 0 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 18 ))
shl_18ns_11ns_18_2_1_U11(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(trunc_ln15_29_reg_2932),
    .din1(grp_fu_1083_p1),
    .ce(grp_fu_1083_ce),
    .dout(grp_fu_1083_p2)
);

my_prj_accelerator_ashr_54ns_11ns_54_7_1 #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .OP( 2 ),
    .din0_WIDTH( 54 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 54 ))
ashr_54ns_11ns_54_7_1_U12(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(select_ln15_20_reg_3028),
    .din1(grp_fu_1244_p1),
    .ce(grp_fu_1244_ce),
    .dout(grp_fu_1244_p2)
);

my_prj_accelerator_shl_18ns_11ns_18_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .OP( 0 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 18 ))
shl_18ns_11ns_18_2_1_U13(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(trunc_ln15_35_reg_3041),
    .din1(grp_fu_1257_p1),
    .ce(grp_fu_1257_ce),
    .dout(grp_fu_1257_p2)
);

my_prj_accelerator_ashr_54ns_11ns_54_7_1 #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .OP( 2 ),
    .din0_WIDTH( 54 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 54 ))
ashr_54ns_11ns_54_7_1_U14(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(select_ln15_24_reg_3137),
    .din1(grp_fu_1418_p1),
    .ce(grp_fu_1418_ce),
    .dout(grp_fu_1418_p2)
);

my_prj_accelerator_shl_18ns_11ns_18_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .OP( 0 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 18 ))
shl_18ns_11ns_18_2_1_U15(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(trunc_ln15_41_reg_3150),
    .din1(grp_fu_1431_p1),
    .ce(grp_fu_1431_ce),
    .dout(grp_fu_1431_p2)
);

my_prj_accelerator_ashr_54ns_11ns_54_7_1 #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .OP( 2 ),
    .din0_WIDTH( 54 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 54 ))
ashr_54ns_11ns_54_7_1_U16(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(select_ln15_28_reg_3251),
    .din1(grp_fu_1623_p1),
    .ce(grp_fu_1623_ce),
    .dout(grp_fu_1623_p2)
);

my_prj_accelerator_shl_18ns_11ns_18_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .OP( 0 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 18 ))
shl_18ns_11ns_18_2_1_U17(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(trunc_ln15_47_reg_3264),
    .din1(grp_fu_1636_p1),
    .ce(grp_fu_1636_ce),
    .dout(grp_fu_1636_p2)
);

my_prj_accelerator_ashr_54ns_11ns_54_7_1 #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .OP( 2 ),
    .din0_WIDTH( 54 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 54 ))
ashr_54ns_11ns_54_7_1_U18(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(select_ln15_32_reg_3370),
    .din1(grp_fu_1798_p1),
    .ce(grp_fu_1798_ce),
    .dout(grp_fu_1798_p2)
);

my_prj_accelerator_shl_18ns_11ns_18_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .OP( 0 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 18 ))
shl_18ns_11ns_18_2_1_U19(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(trunc_ln15_53_reg_3383),
    .din1(grp_fu_1811_p1),
    .ce(grp_fu_1811_ce),
    .dout(grp_fu_1811_p2)
);

my_prj_accelerator_ashr_54ns_11ns_54_7_1 #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .OP( 2 ),
    .din0_WIDTH( 54 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 54 ))
ashr_54ns_11ns_54_7_1_U20(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(select_ln15_36_reg_3469),
    .din1(grp_fu_1926_p1),
    .ce(grp_fu_1926_ce),
    .dout(grp_fu_1926_p2)
);

my_prj_accelerator_shl_18ns_11ns_18_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .OP( 0 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 18 ))
shl_18ns_11ns_18_2_1_U21(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(trunc_ln15_59_reg_3482),
    .din1(grp_fu_1939_p1),
    .ce(grp_fu_1939_ce),
    .dout(grp_fu_1939_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9_subdone))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_subdone))) begin
            ap_enable_reg_pp0_iter3 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9_subdone))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add_ln15_1_reg_2307 <= add_ln15_1_fu_123_p2;
        and_ln15_3_reg_2889 <= and_ln15_3_fu_883_p2;
        ashr_ln15_7_reg_3593 <= grp_fu_1623_p2;
        gmem0_addr_read_reg_2323_pp0_iter2_reg <= gmem0_addr_read_reg_2323;
        icmp_ln15_18_reg_2899 <= icmp_ln15_18_fu_888_p2;
        icmp_ln15_19_reg_2909 <= icmp_ln15_19_fu_901_p2;
        icmp_ln15_25_reg_2948 <= icmp_ln15_25_fu_960_p2;
        icmp_ln15_26_reg_2961 <= icmp_ln15_26_fu_975_p2;
        icmp_ln15_27_reg_2967 <= icmp_ln15_27_fu_981_p2;
        select_ln15_16_reg_2919 <= select_ln15_16_fu_914_p3;
        select_ln15_17_reg_2924 <= select_ln15_17_fu_929_p3;
        select_ln15_44_reg_2884 <= select_ln15_44_fu_866_p3;
        select_ln15_60_reg_3588 <= select_ln15_60_fu_2152_p3;
        shl_ln15_2_reg_2894 <= grp_fu_731_p2;
        sub_ln15_15_reg_2943 <= sub_ln15_15_fu_954_p2;
        tmp_20_reg_2978 <= bitcast_ln724_6_fu_987_p1[32'd63];
        tmp_5_reg_2983 <= {{bitcast_ln724_6_fu_987_p1[62:52]}};
        trunc_ln15_29_reg_2932 <= trunc_ln15_29_fu_936_p1;
        trunc_ln15_34_reg_2955 <= trunc_ln15_34_fu_971_p1;
        trunc_ln15_38_reg_2973 <= trunc_ln15_38_fu_991_p1;
        trunc_ln15_39_reg_2988 <= trunc_ln15_39_fu_1013_p1;
        trunc_ln15_reg_2302 <= trunc_ln15_fu_111_p1;
        zext_ln15_30_reg_2938[51 : 0] <= zext_ln15_30_fu_950_p1[51 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage4_11001))) begin
        and_ln15_11_reg_3340 <= and_ln15_11_fu_1610_p2;
        ashr_ln15_1_reg_3330 <= grp_fu_540_p2;
        gmem0_addr_read_4_reg_2367_pp0_iter2_reg <= gmem0_addr_read_4_reg_2367;
        icmp_ln15_38_reg_3350 <= icmp_ln15_38_fu_1615_p2;
        icmp_ln15_39_reg_3360 <= icmp_ln15_39_fu_1628_p2;
        icmp_ln15_45_reg_3399 <= icmp_ln15_45_fu_1687_p2;
        icmp_ln15_46_reg_3412 <= icmp_ln15_46_fu_1702_p2;
        icmp_ln15_47_reg_3418 <= icmp_ln15_47_fu_1708_p2;
        select_ln15_32_reg_3370 <= select_ln15_32_fu_1641_p3;
        select_ln15_33_reg_3375 <= select_ln15_33_fu_1656_p3;
        select_ln15_42_reg_3325 <= select_ln15_42_fu_1564_p3;
        select_ln15_56_reg_3335 <= select_ln15_56_fu_1593_p3;
        shl_ln15_6_reg_3345 <= grp_fu_1431_p2;
        sub_ln15_27_reg_3394 <= sub_ln15_27_fu_1681_p2;
        tmp2_reg_2383 <= {{bitcast_ln724_fu_177_p1[62:52]}};
        tmp_reg_2378 <= bitcast_ln724_fu_177_p1[32'd63];
        trunc_ln15_1_reg_2373 <= trunc_ln15_1_fu_181_p1;
        trunc_ln15_3_reg_2388 <= trunc_ln15_3_fu_203_p1;
        trunc_ln15_53_reg_3383 <= trunc_ln15_53_fu_1663_p1;
        trunc_ln15_58_reg_3406 <= trunc_ln15_58_fu_1698_p1;
        zext_ln15_38_reg_3389[51 : 0] <= zext_ln15_38_fu_1677_p1[51 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage5) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage5_11001))) begin
        and_ln15_13_reg_3439 <= and_ln15_13_fu_1785_p2;
        ashr_ln15_2_reg_3429 <= grp_fu_718_p2;
        gmem0_addr_read_5_reg_2398_pp0_iter2_reg <= gmem0_addr_read_5_reg_2398;
        icmp_ln15_1_reg_2427 <= icmp_ln15_1_fu_246_p2;
        icmp_ln15_2_reg_2433 <= icmp_ln15_2_fu_252_p2;
        icmp_ln15_43_reg_3449 <= icmp_ln15_43_fu_1790_p2;
        icmp_ln15_44_reg_3459 <= icmp_ln15_44_fu_1803_p2;
        icmp_ln15_reg_2414 <= icmp_ln15_fu_231_p2;
        select_ln15_36_reg_3469 <= select_ln15_36_fu_1816_p3;
        select_ln15_37_reg_3474 <= select_ln15_37_fu_1831_p3;
        select_ln15_45_reg_3424 <= select_ln15_45_fu_1739_p3;
        select_ln15_59_reg_3434 <= select_ln15_59_fu_1768_p3;
        shl_ln15_7_reg_3444 <= grp_fu_1636_p2;
        sub_ln15_reg_2409 <= sub_ln15_fu_225_p2;
        tmp_10_reg_2444 <= bitcast_ln724_1_fu_258_p1[32'd63];
        tmp_s_reg_2449 <= {{bitcast_ln724_1_fu_258_p1[62:52]}};
        trunc_ln15_4_reg_2421 <= trunc_ln15_4_fu_242_p1;
        trunc_ln15_59_reg_3482 <= trunc_ln15_59_fu_1838_p1;
        trunc_ln15_8_reg_2439 <= trunc_ln15_8_fu_262_p1;
        trunc_ln15_9_reg_2454 <= trunc_ln15_9_fu_284_p1;
        zext_ln15_1_reg_2404[51 : 0] <= zext_ln15_1_fu_221_p1[51 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage6) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage6_11001))) begin
        and_ln15_15_reg_3503 <= and_ln15_15_fu_1913_p2;
        ashr_ln15_3_reg_3493 <= grp_fu_896_p2;
        gmem0_addr_read_6_reg_2464_pp0_iter2_reg <= gmem0_addr_read_6_reg_2464;
        icmp_ln15_48_reg_3513 <= icmp_ln15_48_fu_1918_p2;
        icmp_ln15_49_reg_3523 <= icmp_ln15_49_fu_1931_p2;
        icmp_ln15_5_reg_2499 <= icmp_ln15_5_fu_338_p2;
        icmp_ln15_6_reg_2512 <= icmp_ln15_6_fu_353_p2;
        icmp_ln15_7_reg_2518 <= icmp_ln15_7_fu_359_p2;
        select_ln15_1_reg_2475 <= select_ln15_1_fu_307_p3;
        select_ln15_48_reg_3488 <= select_ln15_48_fu_1867_p3;
        select_ln15_62_reg_3498 <= select_ln15_62_fu_1896_p3;
        select_ln15_reg_2470 <= select_ln15_fu_292_p3;
        shl_ln15_8_reg_3508 <= grp_fu_1811_p2;
        sub_ln15_3_reg_2494 <= sub_ln15_3_fu_332_p2;
        tmp_12_reg_2529 <= bitcast_ln724_2_fu_365_p1[32'd63];
        tmp_1_reg_2534 <= {{bitcast_ln724_2_fu_365_p1[62:52]}};
        trunc_ln15_10_reg_2506 <= trunc_ln15_10_fu_349_p1;
        trunc_ln15_14_reg_2524 <= trunc_ln15_14_fu_369_p1;
        trunc_ln15_15_reg_2539 <= trunc_ln15_15_fu_391_p1;
        trunc_ln15_5_reg_2483 <= trunc_ln15_5_fu_314_p1;
        zext_ln15_7_reg_2489[51 : 0] <= zext_ln15_7_fu_328_p1[51 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage7) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage7_11001))) begin
        and_ln15_17_reg_3548 <= and_ln15_17_fu_2015_p2;
        ashr_ln15_4_reg_3538 <= grp_fu_1070_p2;
        gmem0_addr_read_7_reg_2549_pp0_iter2_reg <= gmem0_addr_read_7_reg_2549;
        icmp_ln15_10_reg_2604 <= icmp_ln15_10_fu_471_p2;
        icmp_ln15_11_reg_2617 <= icmp_ln15_11_fu_486_p2;
        icmp_ln15_12_reg_2623 <= icmp_ln15_12_fu_492_p2;
        icmp_ln15_3_reg_2555 <= icmp_ln15_3_fu_399_p2;
        icmp_ln15_4_reg_2565 <= icmp_ln15_4_fu_412_p2;
        select_ln15_4_reg_2575 <= select_ln15_4_fu_425_p3;
        select_ln15_51_reg_3533 <= select_ln15_51_fu_1969_p3;
        select_ln15_5_reg_2580 <= select_ln15_5_fu_440_p3;
        select_ln15_65_reg_3543 <= select_ln15_65_fu_1998_p3;
        shl_ln15_9_reg_3553 <= grp_fu_1939_p2;
        sub_ln15_6_reg_2599 <= sub_ln15_6_fu_465_p2;
        tmp_14_reg_2634 <= bitcast_ln724_3_fu_498_p1[32'd63];
        tmp_2_reg_2639 <= {{bitcast_ln724_3_fu_498_p1[62:52]}};
        trunc_ln15_11_reg_2588 <= trunc_ln15_11_fu_447_p1;
        trunc_ln15_16_reg_2611 <= trunc_ln15_16_fu_482_p1;
        trunc_ln15_20_reg_2629 <= trunc_ln15_20_fu_502_p1;
        trunc_ln15_21_reg_2644 <= trunc_ln15_21_fu_524_p1;
        zext_ln15_13_reg_2594[51 : 0] <= zext_ln15_13_fu_461_p1[51 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage8) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage8_11001))) begin
        and_ln15_19_reg_3573 <= and_ln15_19_fu_2091_p2;
        ashr_ln15_5_reg_3563 <= grp_fu_1244_p2;
        gmem0_addr_read_8_reg_2654_pp0_iter2_reg <= gmem0_addr_read_8_reg_2654;
        icmp_ln15_15_reg_2714 <= icmp_ln15_15_fu_604_p2;
        icmp_ln15_16_reg_2727 <= icmp_ln15_16_fu_619_p2;
        icmp_ln15_17_reg_2733 <= icmp_ln15_17_fu_625_p2;
        icmp_ln15_8_reg_2665 <= icmp_ln15_8_fu_532_p2;
        icmp_ln15_9_reg_2675 <= icmp_ln15_9_fu_545_p2;
        select_ln15_54_reg_3558 <= select_ln15_54_fu_2045_p3;
        select_ln15_68_reg_3568 <= select_ln15_68_fu_2074_p3;
        select_ln15_8_reg_2685 <= select_ln15_8_fu_558_p3;
        select_ln15_9_reg_2690 <= select_ln15_9_fu_573_p3;
        shl_ln15_reg_2660 <= grp_fu_420_p2;
        sub_ln15_9_reg_2709 <= sub_ln15_9_fu_598_p2;
        tmp_16_reg_2744 <= bitcast_ln724_4_fu_631_p1[32'd63];
        tmp_3_reg_2749 <= {{bitcast_ln724_4_fu_631_p1[62:52]}};
        trunc_ln15_17_reg_2698 <= trunc_ln15_17_fu_580_p1;
        trunc_ln15_22_reg_2721 <= trunc_ln15_22_fu_615_p1;
        trunc_ln15_26_reg_2739 <= trunc_ln15_26_fu_635_p1;
        trunc_ln15_27_reg_2754 <= trunc_ln15_27_fu_657_p1;
        zext_ln15_19_reg_2704[51 : 0] <= zext_ln15_19_fu_594_p1[51 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage9) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage9_11001))) begin
        and_ln15_1_reg_2775 <= and_ln15_1_fu_705_p2;
        ashr_ln15_6_reg_3583 <= grp_fu_1418_p2;
        gmem0_addr_read_9_reg_2764_pp0_iter2_reg <= gmem0_addr_read_9_reg_2764;
        icmp_ln15_13_reg_2785 <= icmp_ln15_13_fu_710_p2;
        icmp_ln15_14_reg_2795 <= icmp_ln15_14_fu_723_p2;
        icmp_ln15_20_reg_2834 <= icmp_ln15_20_fu_782_p2;
        icmp_ln15_21_reg_2847 <= icmp_ln15_21_fu_797_p2;
        icmp_ln15_22_reg_2853 <= icmp_ln15_22_fu_803_p2;
        select_ln15_12_reg_2805 <= select_ln15_12_fu_736_p3;
        select_ln15_13_reg_2810 <= select_ln15_13_fu_751_p3;
        select_ln15_41_reg_2770 <= select_ln15_41_fu_688_p3;
        select_ln15_57_reg_3578 <= select_ln15_57_fu_2121_p3;
        shl_ln15_1_reg_2780 <= grp_fu_553_p2;
        sub_ln15_12_reg_2829 <= sub_ln15_12_fu_776_p2;
        tmp_18_reg_2864 <= bitcast_ln724_5_fu_809_p1[32'd63];
        tmp_4_reg_2869 <= {{bitcast_ln724_5_fu_809_p1[62:52]}};
        trunc_ln15_23_reg_2818 <= trunc_ln15_23_fu_758_p1;
        trunc_ln15_28_reg_2841 <= trunc_ln15_28_fu_793_p1;
        trunc_ln15_32_reg_2859 <= trunc_ln15_32_fu_813_p1;
        trunc_ln15_33_reg_2874 <= trunc_ln15_33_fu_835_p1;
        zext_ln15_25_reg_2824[51 : 0] <= zext_ln15_25_fu_772_p1[51 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        and_ln15_5_reg_2998 <= and_ln15_5_fu_1057_p2;
        ashr_ln15_8_reg_3603 <= grp_fu_1798_p2;
        gmem0_addr_read_1_reg_2334_pp0_iter2_reg <= gmem0_addr_read_1_reg_2334;
        icmp_ln15_23_reg_3008 <= icmp_ln15_23_fu_1062_p2;
        icmp_ln15_24_reg_3018 <= icmp_ln15_24_fu_1075_p2;
        icmp_ln15_30_reg_3057 <= icmp_ln15_30_fu_1134_p2;
        icmp_ln15_31_reg_3070 <= icmp_ln15_31_fu_1149_p2;
        icmp_ln15_32_reg_3076 <= icmp_ln15_32_fu_1155_p2;
        select_ln15_20_reg_3028 <= select_ln15_20_fu_1088_p3;
        select_ln15_21_reg_3033 <= select_ln15_21_fu_1103_p3;
        select_ln15_47_reg_2993 <= select_ln15_47_fu_1040_p3;
        select_ln15_63_reg_3598 <= select_ln15_63_fu_2183_p3;
        shl_ln15_3_reg_3003 <= grp_fu_909_p2;
        sub_ln15_18_reg_3052 <= sub_ln15_18_fu_1128_p2;
        tmp_22_reg_3087 <= bitcast_ln724_7_fu_1161_p1[32'd63];
        tmp_6_reg_3092 <= {{bitcast_ln724_7_fu_1161_p1[62:52]}};
        trunc_ln15_2_reg_2312 <= {{add_ln15_fu_136_p2[31:2]}};
        trunc_ln15_35_reg_3041 <= trunc_ln15_35_fu_1110_p1;
        trunc_ln15_40_reg_3064 <= trunc_ln15_40_fu_1145_p1;
        trunc_ln15_44_reg_3082 <= trunc_ln15_44_fu_1165_p1;
        trunc_ln15_45_reg_3097 <= trunc_ln15_45_fu_1187_p1;
        zext_ln15_32_reg_3047[51 : 0] <= zext_ln15_32_fu_1124_p1[51 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        and_ln15_7_reg_3107 <= and_ln15_7_fu_1231_p2;
        ashr_ln15_9_reg_3613 <= grp_fu_1926_p2;
        gmem0_addr_read_2_reg_2345_pp0_iter2_reg <= gmem0_addr_read_2_reg_2345;
        icmp_ln15_28_reg_3117 <= icmp_ln15_28_fu_1236_p2;
        icmp_ln15_29_reg_3127 <= icmp_ln15_29_fu_1249_p2;
        icmp_ln15_35_reg_3166 <= icmp_ln15_35_fu_1308_p2;
        icmp_ln15_36_reg_3179 <= icmp_ln15_36_fu_1323_p2;
        icmp_ln15_37_reg_3185 <= icmp_ln15_37_fu_1329_p2;
        select_ln15_24_reg_3137 <= select_ln15_24_fu_1262_p3;
        select_ln15_25_reg_3142 <= select_ln15_25_fu_1277_p3;
        select_ln15_50_reg_3102 <= select_ln15_50_fu_1214_p3;
        select_ln15_66_reg_3608 <= select_ln15_66_fu_2214_p3;
        shl_ln15_4_reg_3112 <= grp_fu_1083_p2;
        sub_ln15_21_reg_3161 <= sub_ln15_21_fu_1302_p2;
        tmp_24_reg_3196 <= bitcast_ln724_8_fu_1335_p1[32'd63];
        tmp_7_reg_3201 <= {{bitcast_ln724_8_fu_1335_p1[62:52]}};
        trunc_ln15_41_reg_3150 <= trunc_ln15_41_fu_1284_p1;
        trunc_ln15_46_reg_3173 <= trunc_ln15_46_fu_1319_p1;
        trunc_ln15_50_reg_3191 <= trunc_ln15_50_fu_1339_p1;
        trunc_ln15_51_reg_3206 <= trunc_ln15_51_fu_1361_p1;
        zext_ln15_34_reg_3156[51 : 0] <= zext_ln15_34_fu_1298_p1[51 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        and_ln15_9_reg_3221 <= and_ln15_9_fu_1405_p2;
        ashr_ln15_reg_3211 <= grp_fu_407_p2;
        gmem0_addr_read_3_reg_2356_pp0_iter2_reg <= gmem0_addr_read_3_reg_2356;
        icmp_ln15_33_reg_3231 <= icmp_ln15_33_fu_1410_p2;
        icmp_ln15_34_reg_3241 <= icmp_ln15_34_fu_1423_p2;
        icmp_ln15_40_reg_3280 <= icmp_ln15_40_fu_1482_p2;
        icmp_ln15_41_reg_3293 <= icmp_ln15_41_fu_1497_p2;
        icmp_ln15_42_reg_3299 <= icmp_ln15_42_fu_1503_p2;
        select_ln15_28_reg_3251 <= select_ln15_28_fu_1436_p3;
        select_ln15_29_reg_3256 <= select_ln15_29_fu_1451_p3;
        select_ln15_53_reg_3216 <= select_ln15_53_fu_1388_p3;
        shl_ln15_5_reg_3226 <= grp_fu_1257_p2;
        sub_ln15_24_reg_3275 <= sub_ln15_24_fu_1476_p2;
        tmp_26_reg_3310 <= bitcast_ln724_9_fu_1509_p1[32'd63];
        tmp_8_reg_3315 <= {{bitcast_ln724_9_fu_1509_p1[62:52]}};
        trunc_ln15_47_reg_3264 <= trunc_ln15_47_fu_1458_p1;
        trunc_ln15_52_reg_3287 <= trunc_ln15_52_fu_1493_p1;
        trunc_ln15_56_reg_3305 <= trunc_ln15_56_fu_1513_p1;
        trunc_ln15_57_reg_3320 <= trunc_ln15_57_fu_1535_p1;
        zext_ln15_36_reg_3270[51 : 0] <= zext_ln15_36_fu_1472_p1[51 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        gmem0_addr_read_1_reg_2334 <= m_axi_gmem0_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        gmem0_addr_read_2_reg_2345 <= m_axi_gmem0_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        gmem0_addr_read_3_reg_2356 <= m_axi_gmem0_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage4_11001))) begin
        gmem0_addr_read_4_reg_2367 <= m_axi_gmem0_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage5_11001))) begin
        gmem0_addr_read_5_reg_2398 <= m_axi_gmem0_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage6_11001))) begin
        gmem0_addr_read_6_reg_2464 <= m_axi_gmem0_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage7_11001))) begin
        gmem0_addr_read_7_reg_2549 <= m_axi_gmem0_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage8_11001))) begin
        gmem0_addr_read_8_reg_2654 <= m_axi_gmem0_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage9_11001))) begin
        gmem0_addr_read_9_reg_2764 <= m_axi_gmem0_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        gmem0_addr_read_reg_2323 <= m_axi_gmem0_RDATA;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_subdone))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to2 = 1'b1;
    end else begin
        ap_idle_pp0_0to2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0_1to3 = 1'b1;
    end else begin
        ap_idle_pp0_1to3 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9_subdone))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_idle_pp0_0to2 == 1'b1) & (ap_start == 1'b0))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        gmem0_blk_n_AR = m_axi_gmem0_ARREADY;
    end else begin
        gmem0_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2)))) begin
        gmem0_blk_n_R = m_axi_gmem0_RVALID;
    end else begin
        gmem0_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (((1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))))) begin
        grp_fu_1070_ce = 1'b1;
    end else begin
        grp_fu_1070_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))))) begin
        grp_fu_1083_ce = 1'b1;
    end else begin
        grp_fu_1083_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (((1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))))) begin
        grp_fu_108_ce = 1'b1;
    end else begin
        grp_fu_108_ce = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_108_p0 = bitcast_ln15_9_fu_839_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9))) begin
        grp_fu_108_p0 = bitcast_ln15_8_fu_661_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8))) begin
        grp_fu_108_p0 = bitcast_ln15_7_fu_528_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7))) begin
        grp_fu_108_p0 = bitcast_ln15_6_fu_395_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6))) begin
        grp_fu_108_p0 = bitcast_ln15_5_fu_288_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5))) begin
        grp_fu_108_p0 = bitcast_ln15_4_fu_207_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4))) begin
        grp_fu_108_p0 = bitcast_ln15_3_fu_173_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3))) begin
        grp_fu_108_p0 = bitcast_ln15_2_fu_169_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        grp_fu_108_p0 = bitcast_ln15_1_fu_165_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_108_p0 = bitcast_ln15_fu_161_p1;
    end else begin
        grp_fu_108_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (((1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))))) begin
        grp_fu_1244_ce = 1'b1;
    end else begin
        grp_fu_1244_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))))) begin
        grp_fu_1257_ce = 1'b1;
    end else begin
        grp_fu_1257_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (((1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001))))) begin
        grp_fu_1418_ce = 1'b1;
    end else begin
        grp_fu_1418_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001))))) begin
        grp_fu_1431_ce = 1'b1;
    end else begin
        grp_fu_1431_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (((1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001))))) begin
        grp_fu_1623_ce = 1'b1;
    end else begin
        grp_fu_1623_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (((1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001))))) begin
        grp_fu_1636_ce = 1'b1;
    end else begin
        grp_fu_1636_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (((1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))))) begin
        grp_fu_1798_ce = 1'b1;
    end else begin
        grp_fu_1798_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (((1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001))))) begin
        grp_fu_1811_ce = 1'b1;
    end else begin
        grp_fu_1811_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (((1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))))) begin
        grp_fu_1926_ce = 1'b1;
    end else begin
        grp_fu_1926_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (((1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_11001))))) begin
        grp_fu_1939_ce = 1'b1;
    end else begin
        grp_fu_1939_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (((1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))))) begin
        grp_fu_407_ce = 1'b1;
    end else begin
        grp_fu_407_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (((1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001))))) begin
        grp_fu_420_ce = 1'b1;
    end else begin
        grp_fu_420_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (((1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))))) begin
        grp_fu_540_ce = 1'b1;
    end else begin
        grp_fu_540_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (((1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8_11001))))) begin
        grp_fu_553_ce = 1'b1;
    end else begin
        grp_fu_553_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (((1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))))) begin
        grp_fu_718_ce = 1'b1;
    end else begin
        grp_fu_718_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (((1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))))) begin
        grp_fu_731_ce = 1'b1;
    end else begin
        grp_fu_731_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))))) begin
        grp_fu_896_ce = 1'b1;
    end else begin
        grp_fu_896_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))))) begin
        grp_fu_909_ce = 1'b1;
    end else begin
        grp_fu_909_ce = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        m_axi_gmem0_ARVALID = 1'b1;
    end else begin
        m_axi_gmem0_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage9_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage8_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage7_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage6_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage5_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage4_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage3_11001)) | ((ap_enable_reg_pp0_iter1 
    == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage2_11001)))) begin
        m_axi_gmem0_RREADY = 1'b1;
    end else begin
        m_axi_gmem0_RREADY = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_idle_pp0_1to3 == 1'b1) & (ap_start == 1'b0)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if (((ap_reset_idle_pp0 == 1'b0) & (1'b0 == ap_block_pp0_stage3_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else if (((ap_reset_idle_pp0 == 1'b1) & (1'b0 == ap_block_pp0_stage3_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        ap_ST_fsm_pp0_stage7 : begin
            if ((1'b0 == ap_block_pp0_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end
        end
        ap_ST_fsm_pp0_stage8 : begin
            if ((1'b0 == ap_block_pp0_stage8_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end
        end
        ap_ST_fsm_pp0_stage9 : begin
            if ((1'b0 == ap_block_pp0_stage9_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln15_10_fu_1646_p2 = ($signed(trunc_ln15_52_reg_3287) + $signed(11'd2038));

assign add_ln15_11_fu_1821_p2 = ($signed(trunc_ln15_58_reg_3406) + $signed(11'd2038));

assign add_ln15_1_fu_123_p2 = (shl_ln15_10_fu_115_p3 + x_in);

assign add_ln15_2_fu_297_p2 = ($signed(trunc_ln15_4_reg_2421) + $signed(11'd2038));

assign add_ln15_3_fu_430_p2 = ($signed(trunc_ln15_10_reg_2506) + $signed(11'd2038));

assign add_ln15_4_fu_563_p2 = ($signed(trunc_ln15_16_reg_2611) + $signed(11'd2038));

assign add_ln15_5_fu_741_p2 = ($signed(trunc_ln15_22_reg_2721) + $signed(11'd2038));

assign add_ln15_6_fu_919_p2 = ($signed(trunc_ln15_28_reg_2841) + $signed(11'd2038));

assign add_ln15_7_fu_1093_p2 = ($signed(trunc_ln15_34_reg_2955) + $signed(11'd2038));

assign add_ln15_8_fu_1267_p2 = ($signed(trunc_ln15_40_reg_3064) + $signed(11'd2038));

assign add_ln15_9_fu_1441_p2 = ($signed(trunc_ln15_46_reg_3173) + $signed(11'd2038));

assign add_ln15_fu_136_p2 = (add_ln15_1_reg_2307 + shl_ln15_s_fu_129_p3);

assign and_ln15_10_fu_1588_p2 = (xor_ln15_10_fu_1583_p2 & icmp_ln15_27_reg_2967);

assign and_ln15_11_fu_1610_p2 = (xor_ln15_11_fu_1604_p2 & icmp_ln15_26_reg_2961);

assign and_ln15_12_fu_1763_p2 = (xor_ln15_12_fu_1758_p2 & icmp_ln15_32_reg_3076);

assign and_ln15_13_fu_1785_p2 = (xor_ln15_13_fu_1779_p2 & icmp_ln15_31_reg_3070);

assign and_ln15_14_fu_1891_p2 = (xor_ln15_14_fu_1886_p2 & icmp_ln15_37_reg_3185);

assign and_ln15_15_fu_1913_p2 = (xor_ln15_15_fu_1907_p2 & icmp_ln15_36_reg_3179);

assign and_ln15_16_fu_1993_p2 = (xor_ln15_16_fu_1988_p2 & icmp_ln15_42_reg_3299);

assign and_ln15_17_fu_2015_p2 = (xor_ln15_17_fu_2009_p2 & icmp_ln15_41_reg_3293);

assign and_ln15_18_fu_2069_p2 = (xor_ln15_18_fu_2064_p2 & icmp_ln15_47_reg_3418);

assign and_ln15_19_fu_2091_p2 = (xor_ln15_19_fu_2085_p2 & icmp_ln15_46_reg_3412);

assign and_ln15_1_fu_705_p2 = (xor_ln15_1_fu_699_p2 & icmp_ln15_1_reg_2427);

assign and_ln15_2_fu_861_p2 = (xor_ln15_2_fu_856_p2 & icmp_ln15_7_reg_2518);

assign and_ln15_3_fu_883_p2 = (xor_ln15_3_fu_877_p2 & icmp_ln15_6_reg_2512);

assign and_ln15_4_fu_1035_p2 = (xor_ln15_4_fu_1030_p2 & icmp_ln15_12_reg_2623);

assign and_ln15_5_fu_1057_p2 = (xor_ln15_5_fu_1051_p2 & icmp_ln15_11_reg_2617);

assign and_ln15_6_fu_1209_p2 = (xor_ln15_6_fu_1204_p2 & icmp_ln15_17_reg_2733);

assign and_ln15_7_fu_1231_p2 = (xor_ln15_7_fu_1225_p2 & icmp_ln15_16_reg_2727);

assign and_ln15_8_fu_1383_p2 = (xor_ln15_8_fu_1378_p2 & icmp_ln15_22_reg_2853);

assign and_ln15_9_fu_1405_p2 = (xor_ln15_9_fu_1399_p2 & icmp_ln15_21_reg_2847);

assign and_ln15_fu_683_p2 = (xor_ln15_fu_678_p2 & icmp_ln15_2_reg_2433);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp0_stage7 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_pp0_stage8 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_pp0_stage9 = ap_CS_fsm[32'd9];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state11_pp0_stage0_iter1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((1'b0 == ap_ce) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state11_pp0_stage0_iter1)));
end

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage1_11001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state12_pp0_stage1_iter1));
end

always @ (*) begin
    ap_block_pp0_stage1_subdone = ((1'b0 == ap_ce) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state12_pp0_stage1_iter1)));
end

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage2_11001 = (((m_axi_gmem0_ARREADY == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state13_pp0_stage2_iter1)));
end

always @ (*) begin
    ap_block_pp0_stage2_subdone = ((1'b0 == ap_ce) | ((m_axi_gmem0_ARREADY == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state13_pp0_stage2_iter1)));
end

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage3_11001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state14_pp0_stage3_iter1));
end

always @ (*) begin
    ap_block_pp0_stage3_subdone = ((1'b0 == ap_ce) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state14_pp0_stage3_iter1)));
end

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage4_11001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state15_pp0_stage4_iter1));
end

always @ (*) begin
    ap_block_pp0_stage4_subdone = ((1'b0 == ap_ce) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state15_pp0_stage4_iter1)));
end

assign ap_block_pp0_stage5 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage5_11001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state16_pp0_stage5_iter1));
end

always @ (*) begin
    ap_block_pp0_stage5_subdone = ((1'b0 == ap_ce) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state16_pp0_stage5_iter1)));
end

assign ap_block_pp0_stage6 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage6_11001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state17_pp0_stage6_iter1));
end

always @ (*) begin
    ap_block_pp0_stage6_subdone = ((1'b0 == ap_ce) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state17_pp0_stage6_iter1)));
end

assign ap_block_pp0_stage7 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage7_11001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state18_pp0_stage7_iter1));
end

always @ (*) begin
    ap_block_pp0_stage7_subdone = ((1'b0 == ap_ce) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state18_pp0_stage7_iter1)));
end

assign ap_block_pp0_stage8 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage8_11001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state19_pp0_stage8_iter1));
end

always @ (*) begin
    ap_block_pp0_stage8_subdone = ((1'b0 == ap_ce) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state19_pp0_stage8_iter1)));
end

assign ap_block_pp0_stage9 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage9_11001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state20_pp0_stage9_iter1));
end

always @ (*) begin
    ap_block_pp0_stage9_subdone = ((1'b0 == ap_ce) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state20_pp0_stage9_iter1)));
end

always @ (*) begin
    ap_block_state11_pp0_stage0_iter1 = (m_axi_gmem0_RVALID == 1'b0);
end

always @ (*) begin
    ap_block_state12_pp0_stage1_iter1 = (m_axi_gmem0_RVALID == 1'b0);
end

always @ (*) begin
    ap_block_state13_pp0_stage2_iter1 = (m_axi_gmem0_RVALID == 1'b0);
end

always @ (*) begin
    ap_block_state14_pp0_stage3_iter1 = (m_axi_gmem0_RVALID == 1'b0);
end

always @ (*) begin
    ap_block_state15_pp0_stage4_iter1 = (m_axi_gmem0_RVALID == 1'b0);
end

always @ (*) begin
    ap_block_state16_pp0_stage5_iter1 = (m_axi_gmem0_RVALID == 1'b0);
end

always @ (*) begin
    ap_block_state17_pp0_stage6_iter1 = (m_axi_gmem0_RVALID == 1'b0);
end

always @ (*) begin
    ap_block_state18_pp0_stage7_iter1 = (m_axi_gmem0_RVALID == 1'b0);
end

always @ (*) begin
    ap_block_state19_pp0_stage8_iter1 = (m_axi_gmem0_RVALID == 1'b0);
end

always @ (*) begin
    ap_block_state20_pp0_stage9_iter1 = (m_axi_gmem0_RVALID == 1'b0);
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_return_0 = select_ln15_42_reg_3325;

assign ap_return_1 = select_ln15_45_reg_3424;

assign ap_return_2 = select_ln15_48_reg_3488;

assign ap_return_3 = select_ln15_51_reg_3533;

assign ap_return_4 = select_ln15_54_reg_3558;

assign ap_return_5 = select_ln15_57_reg_3578;

assign ap_return_6 = select_ln15_60_reg_3588;

assign ap_return_7 = select_ln15_63_reg_3598;

assign ap_return_8 = select_ln15_66_reg_3608;

assign ap_return_9 = select_ln15_69_fu_2245_p3;

assign bitcast_ln15_1_fu_165_p1 = gmem0_addr_read_1_reg_2334;

assign bitcast_ln15_2_fu_169_p1 = gmem0_addr_read_2_reg_2345;

assign bitcast_ln15_3_fu_173_p1 = gmem0_addr_read_3_reg_2356;

assign bitcast_ln15_4_fu_207_p1 = gmem0_addr_read_4_reg_2367;

assign bitcast_ln15_5_fu_288_p1 = gmem0_addr_read_5_reg_2398;

assign bitcast_ln15_6_fu_395_p1 = gmem0_addr_read_6_reg_2464;

assign bitcast_ln15_7_fu_528_p1 = gmem0_addr_read_7_reg_2549;

assign bitcast_ln15_8_fu_661_p1 = gmem0_addr_read_8_reg_2654;

assign bitcast_ln15_9_fu_839_p1 = gmem0_addr_read_9_reg_2764;

assign bitcast_ln15_fu_161_p1 = gmem0_addr_read_reg_2323;

assign bitcast_ln724_1_fu_258_p1 = grp_fu_108_p1;

assign bitcast_ln724_2_fu_365_p1 = grp_fu_108_p1;

assign bitcast_ln724_3_fu_498_p1 = grp_fu_108_p1;

assign bitcast_ln724_4_fu_631_p1 = grp_fu_108_p1;

assign bitcast_ln724_5_fu_809_p1 = grp_fu_108_p1;

assign bitcast_ln724_6_fu_987_p1 = grp_fu_108_p1;

assign bitcast_ln724_7_fu_1161_p1 = grp_fu_108_p1;

assign bitcast_ln724_8_fu_1335_p1 = grp_fu_108_p1;

assign bitcast_ln724_9_fu_1509_p1 = grp_fu_108_p1;

assign bitcast_ln724_fu_177_p1 = grp_fu_108_p1;

assign grp_fu_1070_p1 = select_ln15_17_reg_2924;

assign grp_fu_1083_p1 = select_ln15_17_reg_2924;

assign grp_fu_1244_p1 = select_ln15_21_reg_3033;

assign grp_fu_1257_p1 = select_ln15_21_reg_3033;

assign grp_fu_1418_p1 = select_ln15_25_reg_3142;

assign grp_fu_1431_p1 = select_ln15_25_reg_3142;

assign grp_fu_1623_p1 = select_ln15_29_reg_3256;

assign grp_fu_1636_p1 = select_ln15_29_reg_3256;

assign grp_fu_1798_p1 = select_ln15_33_reg_3375;

assign grp_fu_1811_p1 = select_ln15_33_reg_3375;

assign grp_fu_1926_p1 = select_ln15_37_reg_3474;

assign grp_fu_1939_p1 = select_ln15_37_reg_3474;

assign grp_fu_407_p1 = select_ln15_1_reg_2475;

assign grp_fu_420_p1 = select_ln15_1_reg_2475;

assign grp_fu_540_p1 = select_ln15_5_reg_2580;

assign grp_fu_553_p1 = select_ln15_5_reg_2580;

assign grp_fu_718_p1 = select_ln15_9_reg_2690;

assign grp_fu_731_p1 = select_ln15_9_reg_2690;

assign grp_fu_896_p1 = select_ln15_13_reg_2810;

assign grp_fu_909_p1 = select_ln15_13_reg_2810;

assign icmp_ln15_10_fu_471_p2 = ((trunc_ln15_14_reg_2524 == 63'd0) ? 1'b1 : 1'b0);

assign icmp_ln15_11_fu_486_p2 = (($signed(sub_ln15_7_fu_476_p2) > $signed(12'd10)) ? 1'b1 : 1'b0);

assign icmp_ln15_12_fu_492_p2 = ((sub_ln15_7_fu_476_p2 == 12'd10) ? 1'b1 : 1'b0);

assign icmp_ln15_13_fu_710_p2 = ((select_ln15_9_reg_2690 < 11'd54) ? 1'b1 : 1'b0);

assign icmp_ln15_14_fu_723_p2 = ((select_ln15_9_reg_2690 < 11'd18) ? 1'b1 : 1'b0);

assign icmp_ln15_15_fu_604_p2 = ((trunc_ln15_20_reg_2629 == 63'd0) ? 1'b1 : 1'b0);

assign icmp_ln15_16_fu_619_p2 = (($signed(sub_ln15_10_fu_609_p2) > $signed(12'd10)) ? 1'b1 : 1'b0);

assign icmp_ln15_17_fu_625_p2 = ((sub_ln15_10_fu_609_p2 == 12'd10) ? 1'b1 : 1'b0);

assign icmp_ln15_18_fu_888_p2 = ((select_ln15_13_reg_2810 < 11'd54) ? 1'b1 : 1'b0);

assign icmp_ln15_19_fu_901_p2 = ((select_ln15_13_reg_2810 < 11'd18) ? 1'b1 : 1'b0);

assign icmp_ln15_1_fu_246_p2 = (($signed(sub_ln15_1_fu_236_p2) > $signed(12'd10)) ? 1'b1 : 1'b0);

assign icmp_ln15_20_fu_782_p2 = ((trunc_ln15_26_reg_2739 == 63'd0) ? 1'b1 : 1'b0);

assign icmp_ln15_21_fu_797_p2 = (($signed(sub_ln15_13_fu_787_p2) > $signed(12'd10)) ? 1'b1 : 1'b0);

assign icmp_ln15_22_fu_803_p2 = ((sub_ln15_13_fu_787_p2 == 12'd10) ? 1'b1 : 1'b0);

assign icmp_ln15_23_fu_1062_p2 = ((select_ln15_17_reg_2924 < 11'd54) ? 1'b1 : 1'b0);

assign icmp_ln15_24_fu_1075_p2 = ((select_ln15_17_reg_2924 < 11'd18) ? 1'b1 : 1'b0);

assign icmp_ln15_25_fu_960_p2 = ((trunc_ln15_32_reg_2859 == 63'd0) ? 1'b1 : 1'b0);

assign icmp_ln15_26_fu_975_p2 = (($signed(sub_ln15_16_fu_965_p2) > $signed(12'd10)) ? 1'b1 : 1'b0);

assign icmp_ln15_27_fu_981_p2 = ((sub_ln15_16_fu_965_p2 == 12'd10) ? 1'b1 : 1'b0);

assign icmp_ln15_28_fu_1236_p2 = ((select_ln15_21_reg_3033 < 11'd54) ? 1'b1 : 1'b0);

assign icmp_ln15_29_fu_1249_p2 = ((select_ln15_21_reg_3033 < 11'd18) ? 1'b1 : 1'b0);

assign icmp_ln15_2_fu_252_p2 = ((sub_ln15_1_fu_236_p2 == 12'd10) ? 1'b1 : 1'b0);

assign icmp_ln15_30_fu_1134_p2 = ((trunc_ln15_38_reg_2973 == 63'd0) ? 1'b1 : 1'b0);

assign icmp_ln15_31_fu_1149_p2 = (($signed(sub_ln15_19_fu_1139_p2) > $signed(12'd10)) ? 1'b1 : 1'b0);

assign icmp_ln15_32_fu_1155_p2 = ((sub_ln15_19_fu_1139_p2 == 12'd10) ? 1'b1 : 1'b0);

assign icmp_ln15_33_fu_1410_p2 = ((select_ln15_25_reg_3142 < 11'd54) ? 1'b1 : 1'b0);

assign icmp_ln15_34_fu_1423_p2 = ((select_ln15_25_reg_3142 < 11'd18) ? 1'b1 : 1'b0);

assign icmp_ln15_35_fu_1308_p2 = ((trunc_ln15_44_reg_3082 == 63'd0) ? 1'b1 : 1'b0);

assign icmp_ln15_36_fu_1323_p2 = (($signed(sub_ln15_22_fu_1313_p2) > $signed(12'd10)) ? 1'b1 : 1'b0);

assign icmp_ln15_37_fu_1329_p2 = ((sub_ln15_22_fu_1313_p2 == 12'd10) ? 1'b1 : 1'b0);

assign icmp_ln15_38_fu_1615_p2 = ((select_ln15_29_reg_3256 < 11'd54) ? 1'b1 : 1'b0);

assign icmp_ln15_39_fu_1628_p2 = ((select_ln15_29_reg_3256 < 11'd18) ? 1'b1 : 1'b0);

assign icmp_ln15_3_fu_399_p2 = ((select_ln15_1_reg_2475 < 11'd54) ? 1'b1 : 1'b0);

assign icmp_ln15_40_fu_1482_p2 = ((trunc_ln15_50_reg_3191 == 63'd0) ? 1'b1 : 1'b0);

assign icmp_ln15_41_fu_1497_p2 = (($signed(sub_ln15_25_fu_1487_p2) > $signed(12'd10)) ? 1'b1 : 1'b0);

assign icmp_ln15_42_fu_1503_p2 = ((sub_ln15_25_fu_1487_p2 == 12'd10) ? 1'b1 : 1'b0);

assign icmp_ln15_43_fu_1790_p2 = ((select_ln15_33_reg_3375 < 11'd54) ? 1'b1 : 1'b0);

assign icmp_ln15_44_fu_1803_p2 = ((select_ln15_33_reg_3375 < 11'd18) ? 1'b1 : 1'b0);

assign icmp_ln15_45_fu_1687_p2 = ((trunc_ln15_56_reg_3305 == 63'd0) ? 1'b1 : 1'b0);

assign icmp_ln15_46_fu_1702_p2 = (($signed(sub_ln15_28_fu_1692_p2) > $signed(12'd10)) ? 1'b1 : 1'b0);

assign icmp_ln15_47_fu_1708_p2 = ((sub_ln15_28_fu_1692_p2 == 12'd10) ? 1'b1 : 1'b0);

assign icmp_ln15_48_fu_1918_p2 = ((select_ln15_37_reg_3474 < 11'd54) ? 1'b1 : 1'b0);

assign icmp_ln15_49_fu_1931_p2 = ((select_ln15_37_reg_3474 < 11'd18) ? 1'b1 : 1'b0);

assign icmp_ln15_4_fu_412_p2 = ((select_ln15_1_reg_2475 < 11'd18) ? 1'b1 : 1'b0);

assign icmp_ln15_5_fu_338_p2 = ((trunc_ln15_8_reg_2439 == 63'd0) ? 1'b1 : 1'b0);

assign icmp_ln15_6_fu_353_p2 = (($signed(sub_ln15_4_fu_343_p2) > $signed(12'd10)) ? 1'b1 : 1'b0);

assign icmp_ln15_7_fu_359_p2 = ((sub_ln15_4_fu_343_p2 == 12'd10) ? 1'b1 : 1'b0);

assign icmp_ln15_8_fu_532_p2 = ((select_ln15_5_reg_2580 < 11'd54) ? 1'b1 : 1'b0);

assign icmp_ln15_9_fu_545_p2 = ((select_ln15_5_reg_2580 < 11'd18) ? 1'b1 : 1'b0);

assign icmp_ln15_fu_231_p2 = ((trunc_ln15_1_reg_2373 == 63'd0) ? 1'b1 : 1'b0);

assign m_axi_gmem0_ARADDR = sext_ln15_fu_151_p1;

assign m_axi_gmem0_ARBURST = 2'd0;

assign m_axi_gmem0_ARCACHE = 4'd0;

assign m_axi_gmem0_ARID = 1'd0;

assign m_axi_gmem0_ARLEN = 32'd10;

assign m_axi_gmem0_ARLOCK = 2'd0;

assign m_axi_gmem0_ARPROT = 3'd0;

assign m_axi_gmem0_ARQOS = 4'd0;

assign m_axi_gmem0_ARREGION = 4'd0;

assign m_axi_gmem0_ARSIZE = 3'd0;

assign m_axi_gmem0_ARUSER = 1'd0;

assign m_axi_gmem0_AWADDR = 32'd0;

assign m_axi_gmem0_AWBURST = 2'd0;

assign m_axi_gmem0_AWCACHE = 4'd0;

assign m_axi_gmem0_AWID = 1'd0;

assign m_axi_gmem0_AWLEN = 32'd0;

assign m_axi_gmem0_AWLOCK = 2'd0;

assign m_axi_gmem0_AWPROT = 3'd0;

assign m_axi_gmem0_AWQOS = 4'd0;

assign m_axi_gmem0_AWREGION = 4'd0;

assign m_axi_gmem0_AWSIZE = 3'd0;

assign m_axi_gmem0_AWUSER = 1'd0;

assign m_axi_gmem0_AWVALID = 1'b0;

assign m_axi_gmem0_BREADY = 1'b0;

assign m_axi_gmem0_WDATA = 32'd0;

assign m_axi_gmem0_WID = 1'd0;

assign m_axi_gmem0_WLAST = 1'b0;

assign m_axi_gmem0_WSTRB = 4'd0;

assign m_axi_gmem0_WUSER = 1'd0;

assign m_axi_gmem0_WVALID = 1'b0;

assign or_ln15_1_fu_873_p2 = (icmp_ln15_7_reg_2518 | icmp_ln15_5_reg_2499);

assign or_ln15_2_fu_1047_p2 = (icmp_ln15_12_reg_2623 | icmp_ln15_10_reg_2604);

assign or_ln15_3_fu_1221_p2 = (icmp_ln15_17_reg_2733 | icmp_ln15_15_reg_2714);

assign or_ln15_4_fu_1395_p2 = (icmp_ln15_22_reg_2853 | icmp_ln15_20_reg_2834);

assign or_ln15_5_fu_1600_p2 = (icmp_ln15_27_reg_2967 | icmp_ln15_25_reg_2948);

assign or_ln15_6_fu_1775_p2 = (icmp_ln15_32_reg_3076 | icmp_ln15_30_reg_3057);

assign or_ln15_7_fu_1903_p2 = (icmp_ln15_37_reg_3185 | icmp_ln15_35_reg_3166);

assign or_ln15_8_fu_2005_p2 = (icmp_ln15_42_reg_3299 | icmp_ln15_40_reg_3280);

assign or_ln15_9_fu_2081_p2 = (icmp_ln15_47_reg_3418 | icmp_ln15_45_reg_3399);

assign or_ln15_fu_695_p2 = (icmp_ln15_reg_2414 | icmp_ln15_2_reg_2433);

assign select_ln15_10_fu_1860_p3 = ((icmp_ln15_13_reg_2785[0:0] == 1'b1) ? trunc_ln15_18_fu_1842_p1 : select_ln15_72_fu_1852_p3);

assign select_ln15_11_fu_1017_p3 = ((icmp_ln15_14_reg_2795[0:0] == 1'b1) ? shl_ln15_2_reg_2894 : 18'd0);

assign select_ln15_12_fu_736_p3 = ((tmp_14_reg_2634[0:0] == 1'b1) ? sub_ln15_9_reg_2709 : zext_ln15_19_reg_2704);

assign select_ln15_13_fu_751_p3 = ((icmp_ln15_16_reg_2727[0:0] == 1'b1) ? add_ln15_5_fu_741_p2 : sub_ln15_11_fu_746_p2);

assign select_ln15_14_fu_1962_p3 = ((icmp_ln15_18_reg_2899[0:0] == 1'b1) ? trunc_ln15_24_fu_1944_p1 : select_ln15_73_fu_1954_p3);

assign select_ln15_15_fu_1191_p3 = ((icmp_ln15_19_reg_2909[0:0] == 1'b1) ? shl_ln15_3_reg_3003 : 18'd0);

assign select_ln15_16_fu_914_p3 = ((tmp_16_reg_2744[0:0] == 1'b1) ? sub_ln15_12_reg_2829 : zext_ln15_25_reg_2824);

assign select_ln15_17_fu_929_p3 = ((icmp_ln15_21_reg_2847[0:0] == 1'b1) ? add_ln15_6_fu_919_p2 : sub_ln15_14_fu_924_p2);

assign select_ln15_18_fu_2038_p3 = ((icmp_ln15_23_reg_3008[0:0] == 1'b1) ? trunc_ln15_30_fu_2020_p1 : select_ln15_74_fu_2030_p3);

assign select_ln15_19_fu_1365_p3 = ((icmp_ln15_24_reg_3018[0:0] == 1'b1) ? shl_ln15_4_reg_3112 : 18'd0);

assign select_ln15_1_fu_307_p3 = ((icmp_ln15_1_reg_2427[0:0] == 1'b1) ? add_ln15_2_fu_297_p2 : sub_ln15_2_fu_302_p2);

assign select_ln15_20_fu_1088_p3 = ((tmp_18_reg_2864[0:0] == 1'b1) ? sub_ln15_15_reg_2943 : zext_ln15_30_reg_2938);

assign select_ln15_21_fu_1103_p3 = ((icmp_ln15_26_reg_2961[0:0] == 1'b1) ? add_ln15_7_fu_1093_p2 : sub_ln15_17_fu_1098_p2);

assign select_ln15_22_fu_2114_p3 = ((icmp_ln15_28_reg_3117[0:0] == 1'b1) ? trunc_ln15_36_fu_2096_p1 : select_ln15_75_fu_2106_p3);

assign select_ln15_23_fu_1570_p3 = ((icmp_ln15_29_reg_3127[0:0] == 1'b1) ? shl_ln15_5_reg_3226 : 18'd0);

assign select_ln15_24_fu_1262_p3 = ((tmp_20_reg_2978[0:0] == 1'b1) ? sub_ln15_18_reg_3052 : zext_ln15_32_reg_3047);

assign select_ln15_25_fu_1277_p3 = ((icmp_ln15_31_reg_3070[0:0] == 1'b1) ? add_ln15_8_fu_1267_p2 : sub_ln15_20_fu_1272_p2);

assign select_ln15_26_fu_2145_p3 = ((icmp_ln15_33_reg_3231[0:0] == 1'b1) ? trunc_ln15_42_fu_2127_p1 : select_ln15_76_fu_2137_p3);

assign select_ln15_27_fu_1745_p3 = ((icmp_ln15_34_reg_3241[0:0] == 1'b1) ? shl_ln15_6_reg_3345 : 18'd0);

assign select_ln15_28_fu_1436_p3 = ((tmp_22_reg_3087[0:0] == 1'b1) ? sub_ln15_21_reg_3161 : zext_ln15_34_reg_3156);

assign select_ln15_29_fu_1451_p3 = ((icmp_ln15_36_reg_3179[0:0] == 1'b1) ? add_ln15_9_fu_1441_p2 : sub_ln15_23_fu_1446_p2);

assign select_ln15_2_fu_1557_p3 = ((icmp_ln15_3_reg_2555[0:0] == 1'b1) ? trunc_ln15_6_fu_1539_p1 : select_ln15_70_fu_1549_p3);

assign select_ln15_30_fu_2176_p3 = ((icmp_ln15_38_reg_3350[0:0] == 1'b1) ? trunc_ln15_48_fu_2158_p1 : select_ln15_77_fu_2168_p3);

assign select_ln15_31_fu_1873_p3 = ((icmp_ln15_39_reg_3360[0:0] == 1'b1) ? shl_ln15_7_reg_3444 : 18'd0);

assign select_ln15_32_fu_1641_p3 = ((tmp_24_reg_3196[0:0] == 1'b1) ? sub_ln15_24_reg_3275 : zext_ln15_36_reg_3270);

assign select_ln15_33_fu_1656_p3 = ((icmp_ln15_41_reg_3293[0:0] == 1'b1) ? add_ln15_10_fu_1646_p2 : sub_ln15_26_fu_1651_p2);

assign select_ln15_34_fu_2207_p3 = ((icmp_ln15_43_reg_3449[0:0] == 1'b1) ? trunc_ln15_54_fu_2189_p1 : select_ln15_78_fu_2199_p3);

assign select_ln15_35_fu_1975_p3 = ((icmp_ln15_44_reg_3459[0:0] == 1'b1) ? shl_ln15_8_reg_3508 : 18'd0);

assign select_ln15_36_fu_1816_p3 = ((tmp_26_reg_3310[0:0] == 1'b1) ? sub_ln15_27_reg_3394 : zext_ln15_38_reg_3389);

assign select_ln15_37_fu_1831_p3 = ((icmp_ln15_46_reg_3412[0:0] == 1'b1) ? add_ln15_11_fu_1821_p2 : sub_ln15_29_fu_1826_p2);

assign select_ln15_38_fu_2238_p3 = ((icmp_ln15_48_reg_3513[0:0] == 1'b1) ? trunc_ln15_60_fu_2220_p1 : select_ln15_79_fu_2230_p3);

assign select_ln15_39_fu_2051_p3 = ((icmp_ln15_49_reg_3523[0:0] == 1'b1) ? shl_ln15_9_reg_3553 : 18'd0);

assign select_ln15_3_fu_665_p3 = ((icmp_ln15_4_reg_2565[0:0] == 1'b1) ? shl_ln15_reg_2660 : 18'd0);

assign select_ln15_40_fu_671_p3 = ((icmp_ln15_reg_2414[0:0] == 1'b1) ? 18'd0 : select_ln15_3_fu_665_p3);

assign select_ln15_41_fu_688_p3 = ((and_ln15_fu_683_p2[0:0] == 1'b1) ? trunc_ln15_5_reg_2483 : select_ln15_40_fu_671_p3);

assign select_ln15_42_fu_1564_p3 = ((and_ln15_1_reg_2775[0:0] == 1'b1) ? select_ln15_2_fu_1557_p3 : select_ln15_41_reg_2770);

assign select_ln15_43_fu_849_p3 = ((icmp_ln15_5_reg_2499[0:0] == 1'b1) ? 18'd0 : select_ln15_7_fu_843_p3);

assign select_ln15_44_fu_866_p3 = ((and_ln15_2_fu_861_p2[0:0] == 1'b1) ? trunc_ln15_11_reg_2588 : select_ln15_43_fu_849_p3);

assign select_ln15_45_fu_1739_p3 = ((and_ln15_3_reg_2889[0:0] == 1'b1) ? select_ln15_6_fu_1732_p3 : select_ln15_44_reg_2884);

assign select_ln15_46_fu_1023_p3 = ((icmp_ln15_10_reg_2604[0:0] == 1'b1) ? 18'd0 : select_ln15_11_fu_1017_p3);

assign select_ln15_47_fu_1040_p3 = ((and_ln15_4_fu_1035_p2[0:0] == 1'b1) ? trunc_ln15_17_reg_2698 : select_ln15_46_fu_1023_p3);

assign select_ln15_48_fu_1867_p3 = ((and_ln15_5_reg_2998[0:0] == 1'b1) ? select_ln15_10_fu_1860_p3 : select_ln15_47_reg_2993);

assign select_ln15_49_fu_1197_p3 = ((icmp_ln15_15_reg_2714[0:0] == 1'b1) ? 18'd0 : select_ln15_15_fu_1191_p3);

assign select_ln15_4_fu_425_p3 = ((tmp_10_reg_2444[0:0] == 1'b1) ? sub_ln15_3_reg_2494 : zext_ln15_7_reg_2489);

assign select_ln15_50_fu_1214_p3 = ((and_ln15_6_fu_1209_p2[0:0] == 1'b1) ? trunc_ln15_23_reg_2818 : select_ln15_49_fu_1197_p3);

assign select_ln15_51_fu_1969_p3 = ((and_ln15_7_reg_3107[0:0] == 1'b1) ? select_ln15_14_fu_1962_p3 : select_ln15_50_reg_3102);

assign select_ln15_52_fu_1371_p3 = ((icmp_ln15_20_reg_2834[0:0] == 1'b1) ? 18'd0 : select_ln15_19_fu_1365_p3);

assign select_ln15_53_fu_1388_p3 = ((and_ln15_8_fu_1383_p2[0:0] == 1'b1) ? trunc_ln15_29_reg_2932 : select_ln15_52_fu_1371_p3);

assign select_ln15_54_fu_2045_p3 = ((and_ln15_9_reg_3221[0:0] == 1'b1) ? select_ln15_18_fu_2038_p3 : select_ln15_53_reg_3216);

assign select_ln15_55_fu_1576_p3 = ((icmp_ln15_25_reg_2948[0:0] == 1'b1) ? 18'd0 : select_ln15_23_fu_1570_p3);

assign select_ln15_56_fu_1593_p3 = ((and_ln15_10_fu_1588_p2[0:0] == 1'b1) ? trunc_ln15_35_reg_3041 : select_ln15_55_fu_1576_p3);

assign select_ln15_57_fu_2121_p3 = ((and_ln15_11_reg_3340[0:0] == 1'b1) ? select_ln15_22_fu_2114_p3 : select_ln15_56_reg_3335);

assign select_ln15_58_fu_1751_p3 = ((icmp_ln15_30_reg_3057[0:0] == 1'b1) ? 18'd0 : select_ln15_27_fu_1745_p3);

assign select_ln15_59_fu_1768_p3 = ((and_ln15_12_fu_1763_p2[0:0] == 1'b1) ? trunc_ln15_41_reg_3150 : select_ln15_58_fu_1751_p3);

assign select_ln15_5_fu_440_p3 = ((icmp_ln15_6_reg_2512[0:0] == 1'b1) ? add_ln15_3_fu_430_p2 : sub_ln15_5_fu_435_p2);

assign select_ln15_60_fu_2152_p3 = ((and_ln15_13_reg_3439[0:0] == 1'b1) ? select_ln15_26_fu_2145_p3 : select_ln15_59_reg_3434);

assign select_ln15_61_fu_1879_p3 = ((icmp_ln15_35_reg_3166[0:0] == 1'b1) ? 18'd0 : select_ln15_31_fu_1873_p3);

assign select_ln15_62_fu_1896_p3 = ((and_ln15_14_fu_1891_p2[0:0] == 1'b1) ? trunc_ln15_47_reg_3264 : select_ln15_61_fu_1879_p3);

assign select_ln15_63_fu_2183_p3 = ((and_ln15_15_reg_3503[0:0] == 1'b1) ? select_ln15_30_fu_2176_p3 : select_ln15_62_reg_3498);

assign select_ln15_64_fu_1981_p3 = ((icmp_ln15_40_reg_3280[0:0] == 1'b1) ? 18'd0 : select_ln15_35_fu_1975_p3);

assign select_ln15_65_fu_1998_p3 = ((and_ln15_16_fu_1993_p2[0:0] == 1'b1) ? trunc_ln15_53_reg_3383 : select_ln15_64_fu_1981_p3);

assign select_ln15_66_fu_2214_p3 = ((and_ln15_17_reg_3548[0:0] == 1'b1) ? select_ln15_34_fu_2207_p3 : select_ln15_65_reg_3543);

assign select_ln15_67_fu_2057_p3 = ((icmp_ln15_45_reg_3399[0:0] == 1'b1) ? 18'd0 : select_ln15_39_fu_2051_p3);

assign select_ln15_68_fu_2074_p3 = ((and_ln15_18_fu_2069_p2[0:0] == 1'b1) ? trunc_ln15_59_reg_3482 : select_ln15_67_fu_2057_p3);

assign select_ln15_69_fu_2245_p3 = ((and_ln15_19_reg_3573[0:0] == 1'b1) ? select_ln15_38_fu_2238_p3 : select_ln15_68_reg_3568);

assign select_ln15_6_fu_1732_p3 = ((icmp_ln15_8_reg_2665[0:0] == 1'b1) ? trunc_ln15_12_fu_1714_p1 : select_ln15_71_fu_1724_p3);

assign select_ln15_70_fu_1549_p3 = ((tmp_9_fu_1542_p3[0:0] == 1'b1) ? 18'd262143 : 18'd0);

assign select_ln15_71_fu_1724_p3 = ((tmp_11_fu_1717_p3[0:0] == 1'b1) ? 18'd262143 : 18'd0);

assign select_ln15_72_fu_1852_p3 = ((tmp_13_fu_1845_p3[0:0] == 1'b1) ? 18'd262143 : 18'd0);

assign select_ln15_73_fu_1954_p3 = ((tmp_15_fu_1947_p3[0:0] == 1'b1) ? 18'd262143 : 18'd0);

assign select_ln15_74_fu_2030_p3 = ((tmp_17_fu_2023_p3[0:0] == 1'b1) ? 18'd262143 : 18'd0);

assign select_ln15_75_fu_2106_p3 = ((tmp_19_fu_2099_p3[0:0] == 1'b1) ? 18'd262143 : 18'd0);

assign select_ln15_76_fu_2137_p3 = ((tmp_21_fu_2130_p3[0:0] == 1'b1) ? 18'd262143 : 18'd0);

assign select_ln15_77_fu_2168_p3 = ((tmp_23_fu_2161_p3[0:0] == 1'b1) ? 18'd262143 : 18'd0);

assign select_ln15_78_fu_2199_p3 = ((tmp_25_fu_2192_p3[0:0] == 1'b1) ? 18'd262143 : 18'd0);

assign select_ln15_79_fu_2230_p3 = ((tmp_27_fu_2223_p3[0:0] == 1'b1) ? 18'd262143 : 18'd0);

assign select_ln15_7_fu_843_p3 = ((icmp_ln15_9_reg_2675[0:0] == 1'b1) ? shl_ln15_1_reg_2780 : 18'd0);

assign select_ln15_8_fu_558_p3 = ((tmp_12_reg_2529[0:0] == 1'b1) ? sub_ln15_6_reg_2599 : zext_ln15_13_reg_2594);

assign select_ln15_9_fu_573_p3 = ((icmp_ln15_11_reg_2617[0:0] == 1'b1) ? add_ln15_4_fu_563_p2 : sub_ln15_8_fu_568_p2);

assign select_ln15_fu_292_p3 = ((tmp_reg_2378[0:0] == 1'b1) ? sub_ln15_reg_2409 : zext_ln15_1_reg_2404);

assign sext_ln15_fu_151_p1 = $signed(trunc_ln15_2_reg_2312);

assign shl_ln15_10_fu_115_p3 = {{n}, {3'd0}};

assign shl_ln15_s_fu_129_p3 = {{trunc_ln15_reg_2302}, {5'd0}};

assign sub_ln15_10_fu_609_p2 = (12'd1075 - zext_ln15_9_fu_584_p1);

assign sub_ln15_11_fu_746_p2 = (11'd10 - trunc_ln15_22_reg_2721);

assign sub_ln15_12_fu_776_p2 = (54'd0 - zext_ln15_25_fu_772_p1);

assign sub_ln15_13_fu_787_p2 = (12'd1075 - zext_ln15_12_fu_762_p1);

assign sub_ln15_14_fu_924_p2 = (11'd10 - trunc_ln15_28_reg_2841);

assign sub_ln15_15_fu_954_p2 = (54'd0 - zext_ln15_30_fu_950_p1);

assign sub_ln15_16_fu_965_p2 = (12'd1075 - zext_ln15_15_fu_940_p1);

assign sub_ln15_17_fu_1098_p2 = (11'd10 - trunc_ln15_34_reg_2955);

assign sub_ln15_18_fu_1128_p2 = (54'd0 - zext_ln15_32_fu_1124_p1);

assign sub_ln15_19_fu_1139_p2 = (12'd1075 - zext_ln15_18_fu_1114_p1);

assign sub_ln15_1_fu_236_p2 = (12'd1075 - zext_ln15_fu_211_p1);

assign sub_ln15_20_fu_1272_p2 = (11'd10 - trunc_ln15_40_reg_3064);

assign sub_ln15_21_fu_1302_p2 = (54'd0 - zext_ln15_34_fu_1298_p1);

assign sub_ln15_22_fu_1313_p2 = (12'd1075 - zext_ln15_21_fu_1288_p1);

assign sub_ln15_23_fu_1446_p2 = (11'd10 - trunc_ln15_46_reg_3173);

assign sub_ln15_24_fu_1476_p2 = (54'd0 - zext_ln15_36_fu_1472_p1);

assign sub_ln15_25_fu_1487_p2 = (12'd1075 - zext_ln15_24_fu_1462_p1);

assign sub_ln15_26_fu_1651_p2 = (11'd10 - trunc_ln15_52_reg_3287);

assign sub_ln15_27_fu_1681_p2 = (54'd0 - zext_ln15_38_fu_1677_p1);

assign sub_ln15_28_fu_1692_p2 = (12'd1075 - zext_ln15_27_fu_1667_p1);

assign sub_ln15_29_fu_1826_p2 = (11'd10 - trunc_ln15_58_reg_3406);

assign sub_ln15_2_fu_302_p2 = (11'd10 - trunc_ln15_4_reg_2421);

assign sub_ln15_3_fu_332_p2 = (54'd0 - zext_ln15_7_fu_328_p1);

assign sub_ln15_4_fu_343_p2 = (12'd1075 - zext_ln15_3_fu_318_p1);

assign sub_ln15_5_fu_435_p2 = (11'd10 - trunc_ln15_10_reg_2506);

assign sub_ln15_6_fu_465_p2 = (54'd0 - zext_ln15_13_fu_461_p1);

assign sub_ln15_7_fu_476_p2 = (12'd1075 - zext_ln15_6_fu_451_p1);

assign sub_ln15_8_fu_568_p2 = (11'd10 - trunc_ln15_16_reg_2611);

assign sub_ln15_9_fu_598_p2 = (54'd0 - zext_ln15_19_fu_594_p1);

assign sub_ln15_fu_225_p2 = (54'd0 - zext_ln15_1_fu_221_p1);

assign tmp_11_fu_1717_p3 = gmem0_addr_read_1_reg_2334_pp0_iter2_reg[32'd31];

assign tmp_13_fu_1845_p3 = gmem0_addr_read_2_reg_2345_pp0_iter2_reg[32'd31];

assign tmp_15_fu_1947_p3 = gmem0_addr_read_3_reg_2356_pp0_iter2_reg[32'd31];

assign tmp_17_fu_2023_p3 = gmem0_addr_read_4_reg_2367_pp0_iter2_reg[32'd31];

assign tmp_19_fu_2099_p3 = gmem0_addr_read_5_reg_2398_pp0_iter2_reg[32'd31];

assign tmp_21_fu_2130_p3 = gmem0_addr_read_6_reg_2464_pp0_iter2_reg[32'd31];

assign tmp_23_fu_2161_p3 = gmem0_addr_read_7_reg_2549_pp0_iter2_reg[32'd31];

assign tmp_25_fu_2192_p3 = gmem0_addr_read_8_reg_2654_pp0_iter2_reg[32'd31];

assign tmp_27_fu_2223_p3 = gmem0_addr_read_9_reg_2764_pp0_iter2_reg[32'd31];

assign tmp_9_fu_1542_p3 = gmem0_addr_read_reg_2323_pp0_iter2_reg[32'd31];

assign trunc_ln15_10_fu_349_p1 = sub_ln15_4_fu_343_p2[10:0];

assign trunc_ln15_11_fu_447_p1 = select_ln15_4_fu_425_p3[17:0];

assign trunc_ln15_12_fu_1714_p1 = ashr_ln15_1_reg_3330[17:0];

assign trunc_ln15_14_fu_369_p1 = bitcast_ln724_2_fu_365_p1[62:0];

assign trunc_ln15_15_fu_391_p1 = bitcast_ln724_2_fu_365_p1[51:0];

assign trunc_ln15_16_fu_482_p1 = sub_ln15_7_fu_476_p2[10:0];

assign trunc_ln15_17_fu_580_p1 = select_ln15_8_fu_558_p3[17:0];

assign trunc_ln15_18_fu_1842_p1 = ashr_ln15_2_reg_3429[17:0];

assign trunc_ln15_1_fu_181_p1 = bitcast_ln724_fu_177_p1[62:0];

assign trunc_ln15_20_fu_502_p1 = bitcast_ln724_3_fu_498_p1[62:0];

assign trunc_ln15_21_fu_524_p1 = bitcast_ln724_3_fu_498_p1[51:0];

assign trunc_ln15_22_fu_615_p1 = sub_ln15_10_fu_609_p2[10:0];

assign trunc_ln15_23_fu_758_p1 = select_ln15_12_fu_736_p3[17:0];

assign trunc_ln15_24_fu_1944_p1 = ashr_ln15_3_reg_3493[17:0];

assign trunc_ln15_26_fu_635_p1 = bitcast_ln724_4_fu_631_p1[62:0];

assign trunc_ln15_27_fu_657_p1 = bitcast_ln724_4_fu_631_p1[51:0];

assign trunc_ln15_28_fu_793_p1 = sub_ln15_13_fu_787_p2[10:0];

assign trunc_ln15_29_fu_936_p1 = select_ln15_16_fu_914_p3[17:0];

assign trunc_ln15_30_fu_2020_p1 = ashr_ln15_4_reg_3538[17:0];

assign trunc_ln15_32_fu_813_p1 = bitcast_ln724_5_fu_809_p1[62:0];

assign trunc_ln15_33_fu_835_p1 = bitcast_ln724_5_fu_809_p1[51:0];

assign trunc_ln15_34_fu_971_p1 = sub_ln15_16_fu_965_p2[10:0];

assign trunc_ln15_35_fu_1110_p1 = select_ln15_20_fu_1088_p3[17:0];

assign trunc_ln15_36_fu_2096_p1 = ashr_ln15_5_reg_3563[17:0];

assign trunc_ln15_38_fu_991_p1 = bitcast_ln724_6_fu_987_p1[62:0];

assign trunc_ln15_39_fu_1013_p1 = bitcast_ln724_6_fu_987_p1[51:0];

assign trunc_ln15_3_fu_203_p1 = bitcast_ln724_fu_177_p1[51:0];

assign trunc_ln15_40_fu_1145_p1 = sub_ln15_19_fu_1139_p2[10:0];

assign trunc_ln15_41_fu_1284_p1 = select_ln15_24_fu_1262_p3[17:0];

assign trunc_ln15_42_fu_2127_p1 = ashr_ln15_6_reg_3583[17:0];

assign trunc_ln15_44_fu_1165_p1 = bitcast_ln724_7_fu_1161_p1[62:0];

assign trunc_ln15_45_fu_1187_p1 = bitcast_ln724_7_fu_1161_p1[51:0];

assign trunc_ln15_46_fu_1319_p1 = sub_ln15_22_fu_1313_p2[10:0];

assign trunc_ln15_47_fu_1458_p1 = select_ln15_28_fu_1436_p3[17:0];

assign trunc_ln15_48_fu_2158_p1 = ashr_ln15_7_reg_3593[17:0];

assign trunc_ln15_4_fu_242_p1 = sub_ln15_1_fu_236_p2[10:0];

assign trunc_ln15_50_fu_1339_p1 = bitcast_ln724_8_fu_1335_p1[62:0];

assign trunc_ln15_51_fu_1361_p1 = bitcast_ln724_8_fu_1335_p1[51:0];

assign trunc_ln15_52_fu_1493_p1 = sub_ln15_25_fu_1487_p2[10:0];

assign trunc_ln15_53_fu_1663_p1 = select_ln15_32_fu_1641_p3[17:0];

assign trunc_ln15_54_fu_2189_p1 = ashr_ln15_8_reg_3603[17:0];

assign trunc_ln15_56_fu_1513_p1 = bitcast_ln724_9_fu_1509_p1[62:0];

assign trunc_ln15_57_fu_1535_p1 = bitcast_ln724_9_fu_1509_p1[51:0];

assign trunc_ln15_58_fu_1698_p1 = sub_ln15_28_fu_1692_p2[10:0];

assign trunc_ln15_59_fu_1838_p1 = select_ln15_36_fu_1816_p3[17:0];

assign trunc_ln15_5_fu_314_p1 = select_ln15_fu_292_p3[17:0];

assign trunc_ln15_60_fu_2220_p1 = ashr_ln15_9_reg_3613[17:0];

assign trunc_ln15_6_fu_1539_p1 = ashr_ln15_reg_3211[17:0];

assign trunc_ln15_8_fu_262_p1 = bitcast_ln724_1_fu_258_p1[62:0];

assign trunc_ln15_9_fu_284_p1 = bitcast_ln724_1_fu_258_p1[51:0];

assign trunc_ln15_fu_111_p1 = n[26:0];

assign xor_ln15_10_fu_1583_p2 = (icmp_ln15_25_reg_2948 ^ 1'd1);

assign xor_ln15_11_fu_1604_p2 = (or_ln15_5_fu_1600_p2 ^ 1'd1);

assign xor_ln15_12_fu_1758_p2 = (icmp_ln15_30_reg_3057 ^ 1'd1);

assign xor_ln15_13_fu_1779_p2 = (or_ln15_6_fu_1775_p2 ^ 1'd1);

assign xor_ln15_14_fu_1886_p2 = (icmp_ln15_35_reg_3166 ^ 1'd1);

assign xor_ln15_15_fu_1907_p2 = (or_ln15_7_fu_1903_p2 ^ 1'd1);

assign xor_ln15_16_fu_1988_p2 = (icmp_ln15_40_reg_3280 ^ 1'd1);

assign xor_ln15_17_fu_2009_p2 = (or_ln15_8_fu_2005_p2 ^ 1'd1);

assign xor_ln15_18_fu_2064_p2 = (icmp_ln15_45_reg_3399 ^ 1'd1);

assign xor_ln15_19_fu_2085_p2 = (or_ln15_9_fu_2081_p2 ^ 1'd1);

assign xor_ln15_1_fu_699_p2 = (or_ln15_fu_695_p2 ^ 1'd1);

assign xor_ln15_2_fu_856_p2 = (icmp_ln15_5_reg_2499 ^ 1'd1);

assign xor_ln15_3_fu_877_p2 = (or_ln15_1_fu_873_p2 ^ 1'd1);

assign xor_ln15_4_fu_1030_p2 = (icmp_ln15_10_reg_2604 ^ 1'd1);

assign xor_ln15_5_fu_1051_p2 = (or_ln15_2_fu_1047_p2 ^ 1'd1);

assign xor_ln15_6_fu_1204_p2 = (icmp_ln15_15_reg_2714 ^ 1'd1);

assign xor_ln15_7_fu_1225_p2 = (or_ln15_3_fu_1221_p2 ^ 1'd1);

assign xor_ln15_8_fu_1378_p2 = (icmp_ln15_20_reg_2834 ^ 1'd1);

assign xor_ln15_9_fu_1399_p2 = (or_ln15_4_fu_1395_p2 ^ 1'd1);

assign xor_ln15_fu_678_p2 = (icmp_ln15_reg_2414 ^ 1'd1);

assign zext_ln15_12_fu_762_p1 = tmp_3_reg_2749;

assign zext_ln15_13_cast_fu_454_p3 = {{1'd1}, {trunc_ln15_15_reg_2539}};

assign zext_ln15_13_fu_461_p1 = zext_ln15_13_cast_fu_454_p3;

assign zext_ln15_15_fu_940_p1 = tmp_4_reg_2869;

assign zext_ln15_18_fu_1114_p1 = tmp_5_reg_2983;

assign zext_ln15_19_cast_fu_587_p3 = {{1'd1}, {trunc_ln15_21_reg_2644}};

assign zext_ln15_19_fu_594_p1 = zext_ln15_19_cast_fu_587_p3;

assign zext_ln15_1_cast_fu_214_p3 = {{1'd1}, {trunc_ln15_3_reg_2388}};

assign zext_ln15_1_fu_221_p1 = zext_ln15_1_cast_fu_214_p3;

assign zext_ln15_21_fu_1288_p1 = tmp_6_reg_3092;

assign zext_ln15_24_fu_1462_p1 = tmp_7_reg_3201;

assign zext_ln15_25_cast_fu_765_p3 = {{1'd1}, {trunc_ln15_27_reg_2754}};

assign zext_ln15_25_fu_772_p1 = zext_ln15_25_cast_fu_765_p3;

assign zext_ln15_27_fu_1667_p1 = tmp_8_reg_3315;

assign zext_ln15_30_cast_fu_943_p3 = {{1'd1}, {trunc_ln15_33_reg_2874}};

assign zext_ln15_30_fu_950_p1 = zext_ln15_30_cast_fu_943_p3;

assign zext_ln15_32_cast_fu_1117_p3 = {{1'd1}, {trunc_ln15_39_reg_2988}};

assign zext_ln15_32_fu_1124_p1 = zext_ln15_32_cast_fu_1117_p3;

assign zext_ln15_34_cast_fu_1291_p3 = {{1'd1}, {trunc_ln15_45_reg_3097}};

assign zext_ln15_34_fu_1298_p1 = zext_ln15_34_cast_fu_1291_p3;

assign zext_ln15_36_cast_fu_1465_p3 = {{1'd1}, {trunc_ln15_51_reg_3206}};

assign zext_ln15_36_fu_1472_p1 = zext_ln15_36_cast_fu_1465_p3;

assign zext_ln15_38_cast_fu_1670_p3 = {{1'd1}, {trunc_ln15_57_reg_3320}};

assign zext_ln15_38_fu_1677_p1 = zext_ln15_38_cast_fu_1670_p3;

assign zext_ln15_3_fu_318_p1 = tmp_s_reg_2449;

assign zext_ln15_6_fu_451_p1 = tmp_1_reg_2534;

assign zext_ln15_7_cast_fu_321_p3 = {{1'd1}, {trunc_ln15_9_reg_2454}};

assign zext_ln15_7_fu_328_p1 = zext_ln15_7_cast_fu_321_p3;

assign zext_ln15_9_fu_584_p1 = tmp_2_reg_2639;

assign zext_ln15_fu_211_p1 = tmp2_reg_2383;

always @ (posedge ap_clk) begin
    zext_ln15_1_reg_2404[53:52] <= 2'b01;
    zext_ln15_7_reg_2489[53:52] <= 2'b01;
    zext_ln15_13_reg_2594[53:52] <= 2'b01;
    zext_ln15_19_reg_2704[53:52] <= 2'b01;
    zext_ln15_25_reg_2824[53:52] <= 2'b01;
    zext_ln15_30_reg_2938[53:52] <= 2'b01;
    zext_ln15_32_reg_3047[53:52] <= 2'b01;
    zext_ln15_34_reg_3156[53:52] <= 2'b01;
    zext_ln15_36_reg_3270[53:52] <= 2'b01;
    zext_ln15_38_reg_3389[53:52] <= 2'b01;
end

endmodule //my_prj_accelerator_copy_input
