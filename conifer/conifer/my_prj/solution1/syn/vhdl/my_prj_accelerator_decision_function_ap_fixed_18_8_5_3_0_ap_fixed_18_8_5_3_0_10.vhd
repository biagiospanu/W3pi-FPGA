-- ==============================================================
-- Generated by Vitis HLS v2023.2
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity my_prj_accelerator_decision_function_ap_fixed_18_8_5_3_0_ap_fixed_18_8_5_3_0_10 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    p_read1 : IN STD_LOGIC_VECTOR (17 downto 0);
    p_read2 : IN STD_LOGIC_VECTOR (17 downto 0);
    p_read3 : IN STD_LOGIC_VECTOR (17 downto 0);
    p_read4 : IN STD_LOGIC_VECTOR (17 downto 0);
    p_read5 : IN STD_LOGIC_VECTOR (17 downto 0);
    p_read6 : IN STD_LOGIC_VECTOR (17 downto 0);
    p_read7 : IN STD_LOGIC_VECTOR (17 downto 0);
    p_read8 : IN STD_LOGIC_VECTOR (17 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (10 downto 0);
    ap_ce : IN STD_LOGIC );
end;


architecture behav of my_prj_accelerator_decision_function_ap_fixed_18_8_5_3_0_ap_fixed_18_8_5_3_0_10 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv18_D80 : STD_LOGIC_VECTOR (17 downto 0) := "000000110110000000";
    constant ap_const_lv18_F000 : STD_LOGIC_VECTOR (17 downto 0) := "001111000000000000";
    constant ap_const_lv18_6780 : STD_LOGIC_VECTOR (17 downto 0) := "000110011110000000";
    constant ap_const_lv18_880 : STD_LOGIC_VECTOR (17 downto 0) := "000000100010000000";
    constant ap_const_lv18_17418 : STD_LOGIC_VECTOR (17 downto 0) := "010111010000011000";
    constant ap_const_lv18_9DF : STD_LOGIC_VECTOR (17 downto 0) := "000000100111011111";
    constant ap_const_lv18_88 : STD_LOGIC_VECTOR (17 downto 0) := "000000000010001000";
    constant ap_const_lv18_CFA : STD_LOGIC_VECTOR (17 downto 0) := "000000110011111010";
    constant ap_const_lv18_5680 : STD_LOGIC_VECTOR (17 downto 0) := "000101011010000000";
    constant ap_const_lv18_126CE : STD_LOGIC_VECTOR (17 downto 0) := "010010011011001110";
    constant ap_const_lv18_13C : STD_LOGIC_VECTOR (17 downto 0) := "000000000100111100";
    constant ap_const_lv18_1535C : STD_LOGIC_VECTOR (17 downto 0) := "010101001101011100";
    constant ap_const_lv18_AC80 : STD_LOGIC_VECTOR (17 downto 0) := "001010110010000000";
    constant ap_const_lv18_364 : STD_LOGIC_VECTOR (17 downto 0) := "000000001101100100";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv3_6 : STD_LOGIC_VECTOR (2 downto 0) := "110";
    constant ap_const_lv3_7 : STD_LOGIC_VECTOR (2 downto 0) := "111";
    constant ap_const_lv4_8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv4_9 : STD_LOGIC_VECTOR (3 downto 0) := "1001";
    constant ap_const_lv4_A : STD_LOGIC_VECTOR (3 downto 0) := "1010";
    constant ap_const_lv4_B : STD_LOGIC_VECTOR (3 downto 0) := "1011";
    constant ap_const_lv4_C : STD_LOGIC_VECTOR (3 downto 0) := "1100";
    constant ap_const_lv4_D : STD_LOGIC_VECTOR (3 downto 0) := "1101";
    constant ap_const_lv4_E : STD_LOGIC_VECTOR (3 downto 0) := "1110";
    constant ap_const_lv11_6EE : STD_LOGIC_VECTOR (10 downto 0) := "11011101110";
    constant ap_const_lv11_725 : STD_LOGIC_VECTOR (10 downto 0) := "11100100101";
    constant ap_const_lv11_267 : STD_LOGIC_VECTOR (10 downto 0) := "01001100111";
    constant ap_const_lv11_1A : STD_LOGIC_VECTOR (10 downto 0) := "00000011010";
    constant ap_const_lv11_733 : STD_LOGIC_VECTOR (10 downto 0) := "11100110011";
    constant ap_const_lv11_7D3 : STD_LOGIC_VECTOR (10 downto 0) := "11111010011";
    constant ap_const_lv11_316 : STD_LOGIC_VECTOR (10 downto 0) := "01100010110";
    constant ap_const_lv11_730 : STD_LOGIC_VECTOR (10 downto 0) := "11100110000";
    constant ap_const_lv11_5AA : STD_LOGIC_VECTOR (10 downto 0) := "10110101010";
    constant ap_const_lv11_2C : STD_LOGIC_VECTOR (10 downto 0) := "00000101100";
    constant ap_const_lv11_6C6 : STD_LOGIC_VECTOR (10 downto 0) := "11011000110";
    constant ap_const_lv11_127 : STD_LOGIC_VECTOR (10 downto 0) := "00100100111";
    constant ap_const_lv11_33 : STD_LOGIC_VECTOR (10 downto 0) := "00000110011";
    constant ap_const_lv11_47 : STD_LOGIC_VECTOR (10 downto 0) := "00001000111";
    constant ap_const_lv11_605 : STD_LOGIC_VECTOR (10 downto 0) := "11000000101";

attribute shreg_extract : string;
    signal icmp_ln4_fu_180_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_reg_645 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal icmp_ln4_reg_645_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_124_fu_186_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_124_reg_654 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_125_fu_192_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_125_reg_659 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_126_fu_198_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_126_reg_665 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_127_fu_204_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_127_reg_671 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_127_reg_671_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_128_fu_210_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_128_reg_678 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_128_reg_678_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_129_fu_216_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_129_reg_684 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_129_reg_684_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_129_reg_684_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_130_fu_222_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_130_reg_690 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_131_fu_228_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_131_reg_695 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_132_fu_234_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_132_reg_700 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_132_reg_700_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_133_fu_240_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_133_reg_705 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_133_reg_705_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_134_fu_246_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_134_reg_710 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_134_reg_710_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_135_fu_252_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_135_reg_715 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_135_reg_715_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_135_reg_715_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_136_fu_258_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_136_reg_720 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_136_reg_720_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_136_reg_720_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln105_fu_264_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln105_reg_725 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln107_fu_276_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln107_reg_732 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln107_reg_732_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln105_112_fu_287_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln105_112_reg_738 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln107_12_fu_297_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln107_12_reg_744 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln107_12_reg_744_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln105_115_fu_322_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln105_115_reg_750 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln120_104_fu_360_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln120_104_reg_756 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln120_118_fu_399_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln120_118_reg_762 : STD_LOGIC_VECTOR (2 downto 0);
    signal and_ln105_116_fu_412_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln105_116_reg_767 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln120_109_fu_459_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln120_109_reg_772 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln120_111_fu_463_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln120_111_reg_777 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln120_125_fu_518_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln120_125_reg_783 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal xor_ln107_56_fu_270_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln107_fu_282_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln107_57_fu_292_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln107_59_fu_312_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln105_113_fu_303_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln107_58_fu_307_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln105_124_fu_332_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln107_13_fu_317_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln105_117_fu_327_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln120_102_fu_348_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln105_118_fu_337_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln120_113_fu_365_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln120_114_fu_370_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln120_fu_342_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln120_fu_375_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln120_fu_379_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln120_117_fu_387_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal or_ln120_103_fu_354_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln120_21_fu_395_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal and_ln105_125_fu_416_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln107_60_fu_407_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln105_126_fu_429_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln105_119_fu_420_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln105_120_fu_425_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln120_107_fu_449_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln105_121_fu_434_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln120_105_fu_439_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln120_119_fu_469_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln120_120_fu_475_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln120_121_fu_483_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal or_ln120_106_fu_444_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln120_22_fu_490_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln120_122_fu_494_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal or_ln120_108_fu_453_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln120_123_fu_502_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln120_124_fu_510_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal xor_ln107_61_fu_526_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln105_127_fu_535_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln105_122_fu_531_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln105_123_fu_540_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln120_110_fu_545_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln120_126_fu_555_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal or_ln120_112_fu_550_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln120_127_fu_562_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal agg_result_fu_577_p31 : STD_LOGIC_VECTOR (10 downto 0);
    signal agg_result_fu_577_p32 : STD_LOGIC_VECTOR (3 downto 0);
    signal agg_result_fu_577_p33 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_ce_reg : STD_LOGIC;
    signal p_read1_int_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal p_read2_int_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal p_read3_int_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal p_read4_int_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal p_read5_int_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal p_read6_int_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal p_read7_int_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal p_read8_int_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_return_int_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal agg_result_fu_577_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal agg_result_fu_577_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal agg_result_fu_577_p5 : STD_LOGIC_VECTOR (3 downto 0);
    signal agg_result_fu_577_p7 : STD_LOGIC_VECTOR (3 downto 0);
    signal agg_result_fu_577_p9 : STD_LOGIC_VECTOR (3 downto 0);
    signal agg_result_fu_577_p11 : STD_LOGIC_VECTOR (3 downto 0);
    signal agg_result_fu_577_p13 : STD_LOGIC_VECTOR (3 downto 0);
    signal agg_result_fu_577_p15 : STD_LOGIC_VECTOR (3 downto 0);
    signal agg_result_fu_577_p17 : STD_LOGIC_VECTOR (3 downto 0);
    signal agg_result_fu_577_p19 : STD_LOGIC_VECTOR (3 downto 0);
    signal agg_result_fu_577_p21 : STD_LOGIC_VECTOR (3 downto 0);
    signal agg_result_fu_577_p23 : STD_LOGIC_VECTOR (3 downto 0);
    signal agg_result_fu_577_p25 : STD_LOGIC_VECTOR (3 downto 0);
    signal agg_result_fu_577_p27 : STD_LOGIC_VECTOR (3 downto 0);
    signal agg_result_fu_577_p29 : STD_LOGIC_VECTOR (3 downto 0);

    component my_prj_accelerator_sparsemux_31_4_11_1_0_x1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        CASE0 : STD_LOGIC_VECTOR (3 downto 0);
        din0_WIDTH : INTEGER;
        CASE1 : STD_LOGIC_VECTOR (3 downto 0);
        din1_WIDTH : INTEGER;
        CASE2 : STD_LOGIC_VECTOR (3 downto 0);
        din2_WIDTH : INTEGER;
        CASE3 : STD_LOGIC_VECTOR (3 downto 0);
        din3_WIDTH : INTEGER;
        CASE4 : STD_LOGIC_VECTOR (3 downto 0);
        din4_WIDTH : INTEGER;
        CASE5 : STD_LOGIC_VECTOR (3 downto 0);
        din5_WIDTH : INTEGER;
        CASE6 : STD_LOGIC_VECTOR (3 downto 0);
        din6_WIDTH : INTEGER;
        CASE7 : STD_LOGIC_VECTOR (3 downto 0);
        din7_WIDTH : INTEGER;
        CASE8 : STD_LOGIC_VECTOR (3 downto 0);
        din8_WIDTH : INTEGER;
        CASE9 : STD_LOGIC_VECTOR (3 downto 0);
        din9_WIDTH : INTEGER;
        CASE10 : STD_LOGIC_VECTOR (3 downto 0);
        din10_WIDTH : INTEGER;
        CASE11 : STD_LOGIC_VECTOR (3 downto 0);
        din11_WIDTH : INTEGER;
        CASE12 : STD_LOGIC_VECTOR (3 downto 0);
        din12_WIDTH : INTEGER;
        CASE13 : STD_LOGIC_VECTOR (3 downto 0);
        din13_WIDTH : INTEGER;
        CASE14 : STD_LOGIC_VECTOR (3 downto 0);
        din14_WIDTH : INTEGER;
        def_WIDTH : INTEGER;
        sel_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (10 downto 0);
        din1 : IN STD_LOGIC_VECTOR (10 downto 0);
        din2 : IN STD_LOGIC_VECTOR (10 downto 0);
        din3 : IN STD_LOGIC_VECTOR (10 downto 0);
        din4 : IN STD_LOGIC_VECTOR (10 downto 0);
        din5 : IN STD_LOGIC_VECTOR (10 downto 0);
        din6 : IN STD_LOGIC_VECTOR (10 downto 0);
        din7 : IN STD_LOGIC_VECTOR (10 downto 0);
        din8 : IN STD_LOGIC_VECTOR (10 downto 0);
        din9 : IN STD_LOGIC_VECTOR (10 downto 0);
        din10 : IN STD_LOGIC_VECTOR (10 downto 0);
        din11 : IN STD_LOGIC_VECTOR (10 downto 0);
        din12 : IN STD_LOGIC_VECTOR (10 downto 0);
        din13 : IN STD_LOGIC_VECTOR (10 downto 0);
        din14 : IN STD_LOGIC_VECTOR (10 downto 0);
        def : IN STD_LOGIC_VECTOR (10 downto 0);
        sel : IN STD_LOGIC_VECTOR (3 downto 0);
        dout : OUT STD_LOGIC_VECTOR (10 downto 0) );
    end component;



begin
    sparsemux_31_4_11_1_0_x1_U174 : component my_prj_accelerator_sparsemux_31_4_11_1_0_x1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        CASE0 => "0000",
        din0_WIDTH => 11,
        CASE1 => "0001",
        din1_WIDTH => 11,
        CASE2 => "0010",
        din2_WIDTH => 11,
        CASE3 => "0011",
        din3_WIDTH => 11,
        CASE4 => "0100",
        din4_WIDTH => 11,
        CASE5 => "0101",
        din5_WIDTH => 11,
        CASE6 => "0110",
        din6_WIDTH => 11,
        CASE7 => "0111",
        din7_WIDTH => 11,
        CASE8 => "1000",
        din8_WIDTH => 11,
        CASE9 => "1001",
        din9_WIDTH => 11,
        CASE10 => "1010",
        din10_WIDTH => 11,
        CASE11 => "1011",
        din11_WIDTH => 11,
        CASE12 => "1100",
        din12_WIDTH => 11,
        CASE13 => "1101",
        din13_WIDTH => 11,
        CASE14 => "1110",
        din14_WIDTH => 11,
        def_WIDTH => 11,
        sel_WIDTH => 4,
        dout_WIDTH => 11)
    port map (
        din0 => ap_const_lv11_6EE,
        din1 => ap_const_lv11_725,
        din2 => ap_const_lv11_267,
        din3 => ap_const_lv11_1A,
        din4 => ap_const_lv11_733,
        din5 => ap_const_lv11_7D3,
        din6 => ap_const_lv11_316,
        din7 => ap_const_lv11_730,
        din8 => ap_const_lv11_5AA,
        din9 => ap_const_lv11_2C,
        din10 => ap_const_lv11_6C6,
        din11 => ap_const_lv11_127,
        din12 => ap_const_lv11_33,
        din13 => ap_const_lv11_47,
        din14 => ap_const_lv11_605,
        def => agg_result_fu_577_p31,
        sel => agg_result_fu_577_p32,
        dout => agg_result_fu_577_p33);





    ap_ce_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            ap_ce_reg <= ap_ce;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce_reg))) then
                and_ln105_112_reg_738 <= and_ln105_112_fu_287_p2;
                and_ln105_115_reg_750 <= and_ln105_115_fu_322_p2;
                and_ln105_116_reg_767 <= and_ln105_116_fu_412_p2;
                and_ln105_reg_725 <= and_ln105_fu_264_p2;
                and_ln107_12_reg_744 <= and_ln107_12_fu_297_p2;
                and_ln107_12_reg_744_pp0_iter2_reg <= and_ln107_12_reg_744;
                and_ln107_reg_732 <= and_ln107_fu_276_p2;
                and_ln107_reg_732_pp0_iter1_reg <= and_ln107_reg_732;
                icmp_ln4_124_reg_654 <= icmp_ln4_124_fu_186_p2;
                icmp_ln4_125_reg_659 <= icmp_ln4_125_fu_192_p2;
                icmp_ln4_126_reg_665 <= icmp_ln4_126_fu_198_p2;
                icmp_ln4_127_reg_671 <= icmp_ln4_127_fu_204_p2;
                icmp_ln4_127_reg_671_pp0_iter1_reg <= icmp_ln4_127_reg_671;
                icmp_ln4_128_reg_678 <= icmp_ln4_128_fu_210_p2;
                icmp_ln4_128_reg_678_pp0_iter1_reg <= icmp_ln4_128_reg_678;
                icmp_ln4_129_reg_684 <= icmp_ln4_129_fu_216_p2;
                icmp_ln4_129_reg_684_pp0_iter1_reg <= icmp_ln4_129_reg_684;
                icmp_ln4_129_reg_684_pp0_iter2_reg <= icmp_ln4_129_reg_684_pp0_iter1_reg;
                icmp_ln4_130_reg_690 <= icmp_ln4_130_fu_222_p2;
                icmp_ln4_131_reg_695 <= icmp_ln4_131_fu_228_p2;
                icmp_ln4_132_reg_700 <= icmp_ln4_132_fu_234_p2;
                icmp_ln4_132_reg_700_pp0_iter1_reg <= icmp_ln4_132_reg_700;
                icmp_ln4_133_reg_705 <= icmp_ln4_133_fu_240_p2;
                icmp_ln4_133_reg_705_pp0_iter1_reg <= icmp_ln4_133_reg_705;
                icmp_ln4_134_reg_710 <= icmp_ln4_134_fu_246_p2;
                icmp_ln4_134_reg_710_pp0_iter1_reg <= icmp_ln4_134_reg_710;
                icmp_ln4_135_reg_715 <= icmp_ln4_135_fu_252_p2;
                icmp_ln4_135_reg_715_pp0_iter1_reg <= icmp_ln4_135_reg_715;
                icmp_ln4_135_reg_715_pp0_iter2_reg <= icmp_ln4_135_reg_715_pp0_iter1_reg;
                icmp_ln4_136_reg_720 <= icmp_ln4_136_fu_258_p2;
                icmp_ln4_136_reg_720_pp0_iter1_reg <= icmp_ln4_136_reg_720;
                icmp_ln4_136_reg_720_pp0_iter2_reg <= icmp_ln4_136_reg_720_pp0_iter1_reg;
                icmp_ln4_reg_645 <= icmp_ln4_fu_180_p2;
                icmp_ln4_reg_645_pp0_iter1_reg <= icmp_ln4_reg_645;
                or_ln120_104_reg_756 <= or_ln120_104_fu_360_p2;
                or_ln120_109_reg_772 <= or_ln120_109_fu_459_p2;
                or_ln120_111_reg_777 <= or_ln120_111_fu_463_p2;
                select_ln120_118_reg_762 <= select_ln120_118_fu_399_p3;
                select_ln120_125_reg_783 <= select_ln120_125_fu_518_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_ce_reg)) then
                ap_return_int_reg <= agg_result_fu_577_p33;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_ce)) then
                p_read1_int_reg <= p_read1;
                p_read2_int_reg <= p_read2;
                p_read3_int_reg <= p_read3;
                p_read4_int_reg <= p_read4;
                p_read5_int_reg <= p_read5;
                p_read6_int_reg <= p_read6;
                p_read7_int_reg <= p_read7;
                p_read8_int_reg <= p_read8;
            end if;
        end if;
    end process;
    agg_result_fu_577_p31 <= "XXXXXXXXXXX";
    agg_result_fu_577_p32 <= 
        select_ln120_127_fu_562_p3 when (or_ln120_112_fu_550_p2(0) = '1') else 
        ap_const_lv4_E;
    and_ln105_112_fu_287_p2 <= (xor_ln107_fu_282_p2 and icmp_ln4_125_reg_659);
    and_ln105_113_fu_303_p2 <= (icmp_ln4_126_reg_665 and and_ln105_reg_725);
    and_ln105_115_fu_322_p2 <= (icmp_ln4_128_reg_678 and and_ln105_112_fu_287_p2);
    and_ln105_116_fu_412_p2 <= (icmp_ln4_129_reg_684_pp0_iter1_reg and and_ln107_12_reg_744);
    and_ln105_117_fu_327_p2 <= (icmp_ln4_130_reg_690 and and_ln105_113_fu_303_p2);
    and_ln105_118_fu_337_p2 <= (and_ln105_reg_725 and and_ln105_124_fu_332_p2);
    and_ln105_119_fu_420_p2 <= (icmp_ln4_127_reg_671_pp0_iter1_reg and and_ln105_125_fu_416_p2);
    and_ln105_120_fu_425_p2 <= (icmp_ln4_133_reg_705_pp0_iter1_reg and and_ln105_115_reg_750);
    and_ln105_121_fu_434_p2 <= (and_ln105_126_fu_429_p2 and and_ln105_112_reg_738);
    and_ln105_122_fu_531_p2 <= (icmp_ln4_135_reg_715_pp0_iter2_reg and and_ln105_116_reg_767);
    and_ln105_123_fu_540_p2 <= (and_ln107_12_reg_744_pp0_iter2_reg and and_ln105_127_fu_535_p2);
    and_ln105_124_fu_332_p2 <= (xor_ln107_58_fu_307_p2 and icmp_ln4_131_reg_695);
    and_ln105_125_fu_416_p2 <= (icmp_ln4_132_reg_700_pp0_iter1_reg and and_ln107_reg_732_pp0_iter1_reg);
    and_ln105_126_fu_429_p2 <= (xor_ln107_60_fu_407_p2 and icmp_ln4_134_reg_710_pp0_iter1_reg);
    and_ln105_127_fu_535_p2 <= (xor_ln107_61_fu_526_p2 and icmp_ln4_136_reg_720_pp0_iter2_reg);
    and_ln105_fu_264_p2 <= (icmp_ln4_fu_180_p2 and icmp_ln4_124_fu_186_p2);
    and_ln107_12_fu_297_p2 <= (xor_ln107_fu_282_p2 and xor_ln107_57_fu_292_p2);
    and_ln107_13_fu_317_p2 <= (xor_ln107_59_fu_312_p2 and and_ln107_reg_732);
    and_ln107_fu_276_p2 <= (xor_ln107_56_fu_270_p2 and icmp_ln4_fu_180_p2);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_return_assign_proc : process(agg_result_fu_577_p33, ap_ce_reg, ap_return_int_reg)
    begin
        if ((ap_const_logic_0 = ap_ce_reg)) then 
            ap_return <= ap_return_int_reg;
        elsif ((ap_const_logic_1 = ap_ce_reg)) then 
            ap_return <= agg_result_fu_577_p33;
        else 
            ap_return <= "XXXXXXXXXXX";
        end if; 
    end process;

    icmp_ln4_124_fu_186_p2 <= "1" when (signed(p_read6_int_reg) < signed(ap_const_lv18_F000)) else "0";
    icmp_ln4_125_fu_192_p2 <= "1" when (signed(p_read2_int_reg) < signed(ap_const_lv18_6780)) else "0";
    icmp_ln4_126_fu_198_p2 <= "1" when (signed(p_read1_int_reg) < signed(ap_const_lv18_880)) else "0";
    icmp_ln4_127_fu_204_p2 <= "1" when (signed(p_read3_int_reg) < signed(ap_const_lv18_17418)) else "0";
    icmp_ln4_128_fu_210_p2 <= "1" when (signed(p_read5_int_reg) < signed(ap_const_lv18_9DF)) else "0";
    icmp_ln4_129_fu_216_p2 <= "1" when (signed(p_read8_int_reg) < signed(ap_const_lv18_88)) else "0";
    icmp_ln4_130_fu_222_p2 <= "1" when (signed(p_read5_int_reg) < signed(ap_const_lv18_CFA)) else "0";
    icmp_ln4_131_fu_228_p2 <= "1" when (signed(p_read6_int_reg) < signed(ap_const_lv18_5680)) else "0";
    icmp_ln4_132_fu_234_p2 <= "1" when (signed(p_read3_int_reg) < signed(ap_const_lv18_126CE)) else "0";
    icmp_ln4_133_fu_240_p2 <= "1" when (signed(p_read7_int_reg) < signed(ap_const_lv18_13C)) else "0";
    icmp_ln4_134_fu_246_p2 <= "1" when (signed(p_read3_int_reg) < signed(ap_const_lv18_1535C)) else "0";
    icmp_ln4_135_fu_252_p2 <= "1" when (signed(p_read6_int_reg) < signed(ap_const_lv18_AC80)) else "0";
    icmp_ln4_136_fu_258_p2 <= "1" when (signed(p_read4_int_reg) < signed(ap_const_lv18_364)) else "0";
    icmp_ln4_fu_180_p2 <= "1" when (signed(p_read1_int_reg) < signed(ap_const_lv18_D80)) else "0";
    or_ln120_102_fu_348_p2 <= (and_ln107_13_fu_317_p2 or and_ln105_113_fu_303_p2);
    or_ln120_103_fu_354_p2 <= (or_ln120_102_fu_348_p2 or and_ln105_118_fu_337_p2);
    or_ln120_104_fu_360_p2 <= (and_ln107_13_fu_317_p2 or and_ln105_reg_725);
    or_ln120_105_fu_439_p2 <= (or_ln120_104_reg_756 or and_ln105_119_fu_420_p2);
    or_ln120_106_fu_444_p2 <= (icmp_ln4_reg_645_pp0_iter1_reg or and_ln105_120_fu_425_p2);
    or_ln120_107_fu_449_p2 <= (icmp_ln4_reg_645_pp0_iter1_reg or and_ln105_115_reg_750);
    or_ln120_108_fu_453_p2 <= (or_ln120_107_fu_449_p2 or and_ln105_121_fu_434_p2);
    or_ln120_109_fu_459_p2 <= (icmp_ln4_reg_645_pp0_iter1_reg or and_ln105_112_reg_738);
    or_ln120_110_fu_545_p2 <= (or_ln120_109_reg_772 or and_ln105_122_fu_531_p2);
    or_ln120_111_fu_463_p2 <= (or_ln120_109_fu_459_p2 or and_ln105_116_fu_412_p2);
    or_ln120_112_fu_550_p2 <= (or_ln120_111_reg_777 or and_ln105_123_fu_540_p2);
    or_ln120_113_fu_365_p2 <= (xor_ln107_fu_282_p2 or icmp_ln4_124_reg_654);
    or_ln120_114_fu_370_p2 <= (or_ln120_113_fu_365_p2 or icmp_ln4_127_reg_671);
    or_ln120_fu_342_p2 <= (and_ln107_13_fu_317_p2 or and_ln105_117_fu_327_p2);
    select_ln120_117_fu_387_p3 <= 
        select_ln120_fu_379_p3 when (or_ln120_102_fu_348_p2(0) = '1') else 
        ap_const_lv2_3;
    select_ln120_118_fu_399_p3 <= 
        zext_ln120_21_fu_395_p1 when (or_ln120_103_fu_354_p2(0) = '1') else 
        ap_const_lv3_4;
    select_ln120_119_fu_469_p3 <= 
        select_ln120_118_reg_762 when (or_ln120_104_reg_756(0) = '1') else 
        ap_const_lv3_5;
    select_ln120_120_fu_475_p3 <= 
        select_ln120_119_fu_469_p3 when (or_ln120_105_fu_439_p2(0) = '1') else 
        ap_const_lv3_6;
    select_ln120_121_fu_483_p3 <= 
        select_ln120_120_fu_475_p3 when (icmp_ln4_reg_645_pp0_iter1_reg(0) = '1') else 
        ap_const_lv3_7;
    select_ln120_122_fu_494_p3 <= 
        zext_ln120_22_fu_490_p1 when (or_ln120_106_fu_444_p2(0) = '1') else 
        ap_const_lv4_8;
    select_ln120_123_fu_502_p3 <= 
        select_ln120_122_fu_494_p3 when (or_ln120_107_fu_449_p2(0) = '1') else 
        ap_const_lv4_9;
    select_ln120_124_fu_510_p3 <= 
        select_ln120_123_fu_502_p3 when (or_ln120_108_fu_453_p2(0) = '1') else 
        ap_const_lv4_A;
    select_ln120_125_fu_518_p3 <= 
        select_ln120_124_fu_510_p3 when (or_ln120_109_fu_459_p2(0) = '1') else 
        ap_const_lv4_B;
    select_ln120_126_fu_555_p3 <= 
        select_ln120_125_reg_783 when (or_ln120_110_fu_545_p2(0) = '1') else 
        ap_const_lv4_C;
    select_ln120_127_fu_562_p3 <= 
        select_ln120_126_fu_555_p3 when (or_ln120_111_reg_777(0) = '1') else 
        ap_const_lv4_D;
    select_ln120_fu_379_p3 <= 
        zext_ln120_fu_375_p1 when (or_ln120_fu_342_p2(0) = '1') else 
        ap_const_lv2_2;
    xor_ln107_56_fu_270_p2 <= (icmp_ln4_124_fu_186_p2 xor ap_const_lv1_1);
    xor_ln107_57_fu_292_p2 <= (icmp_ln4_125_reg_659 xor ap_const_lv1_1);
    xor_ln107_58_fu_307_p2 <= (icmp_ln4_126_reg_665 xor ap_const_lv1_1);
    xor_ln107_59_fu_312_p2 <= (icmp_ln4_127_reg_671 xor ap_const_lv1_1);
    xor_ln107_60_fu_407_p2 <= (icmp_ln4_128_reg_678_pp0_iter1_reg xor ap_const_lv1_1);
    xor_ln107_61_fu_526_p2 <= (icmp_ln4_129_reg_684_pp0_iter2_reg xor ap_const_lv1_1);
    xor_ln107_fu_282_p2 <= (icmp_ln4_reg_645 xor ap_const_lv1_1);
    zext_ln120_21_fu_395_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln120_117_fu_387_p3),3));
    zext_ln120_22_fu_490_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln120_121_fu_483_p3),4));
    zext_ln120_fu_375_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln120_114_fu_370_p2),2));
end behav;
