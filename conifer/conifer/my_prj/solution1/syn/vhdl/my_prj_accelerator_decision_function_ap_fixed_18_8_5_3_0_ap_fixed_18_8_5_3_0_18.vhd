-- ==============================================================
-- Generated by Vitis HLS v2023.2
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity my_prj_accelerator_decision_function_ap_fixed_18_8_5_3_0_ap_fixed_18_8_5_3_0_18 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    p_read1 : IN STD_LOGIC_VECTOR (17 downto 0);
    p_read2 : IN STD_LOGIC_VECTOR (17 downto 0);
    p_read3 : IN STD_LOGIC_VECTOR (17 downto 0);
    p_read4 : IN STD_LOGIC_VECTOR (17 downto 0);
    p_read5 : IN STD_LOGIC_VECTOR (17 downto 0);
    p_read6 : IN STD_LOGIC_VECTOR (17 downto 0);
    p_read7 : IN STD_LOGIC_VECTOR (17 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (11 downto 0);
    ap_ce : IN STD_LOGIC );
end;


architecture behav of my_prj_accelerator_decision_function_ap_fixed_18_8_5_3_0_ap_fixed_18_8_5_3_0_18 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv18_1B80 : STD_LOGIC_VECTOR (17 downto 0) := "000001101110000000";
    constant ap_const_lv18_FE9B : STD_LOGIC_VECTOR (17 downto 0) := "001111111010011011";
    constant ap_const_lv18_E7F8 : STD_LOGIC_VECTOR (17 downto 0) := "001110011111111000";
    constant ap_const_lv18_107F8 : STD_LOGIC_VECTOR (17 downto 0) := "010000011111111000";
    constant ap_const_lv18_1180 : STD_LOGIC_VECTOR (17 downto 0) := "000001000110000000";
    constant ap_const_lv18_160 : STD_LOGIC_VECTOR (17 downto 0) := "000000000101100000";
    constant ap_const_lv18_754 : STD_LOGIC_VECTOR (17 downto 0) := "000000011101010100";
    constant ap_const_lv18_2780 : STD_LOGIC_VECTOR (17 downto 0) := "000010011110000000";
    constant ap_const_lv18_1280 : STD_LOGIC_VECTOR (17 downto 0) := "000001001010000000";
    constant ap_const_lv18_1D8 : STD_LOGIC_VECTOR (17 downto 0) := "000000000111011000";
    constant ap_const_lv18_F32 : STD_LOGIC_VECTOR (17 downto 0) := "000000111100110010";
    constant ap_const_lv18_5F66 : STD_LOGIC_VECTOR (17 downto 0) := "000101111101100110";
    constant ap_const_lv18_387 : STD_LOGIC_VECTOR (17 downto 0) := "000000001110000111";
    constant ap_const_lv18_FD8 : STD_LOGIC_VECTOR (17 downto 0) := "000000111111011000";
    constant ap_const_lv18_4980 : STD_LOGIC_VECTOR (17 downto 0) := "000100100110000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv3_6 : STD_LOGIC_VECTOR (2 downto 0) := "110";
    constant ap_const_lv3_7 : STD_LOGIC_VECTOR (2 downto 0) := "111";
    constant ap_const_lv4_8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv4_9 : STD_LOGIC_VECTOR (3 downto 0) := "1001";
    constant ap_const_lv4_A : STD_LOGIC_VECTOR (3 downto 0) := "1010";
    constant ap_const_lv4_B : STD_LOGIC_VECTOR (3 downto 0) := "1011";
    constant ap_const_lv4_C : STD_LOGIC_VECTOR (3 downto 0) := "1100";
    constant ap_const_lv4_D : STD_LOGIC_VECTOR (3 downto 0) := "1101";
    constant ap_const_lv4_E : STD_LOGIC_VECTOR (3 downto 0) := "1110";
    constant ap_const_lv4_F : STD_LOGIC_VECTOR (3 downto 0) := "1111";
    constant ap_const_lv12_B8B : STD_LOGIC_VECTOR (11 downto 0) := "101110001011";
    constant ap_const_lv12_BFD : STD_LOGIC_VECTOR (11 downto 0) := "101111111101";
    constant ap_const_lv12_C1A : STD_LOGIC_VECTOR (11 downto 0) := "110000011010";
    constant ap_const_lv12_EE4 : STD_LOGIC_VECTOR (11 downto 0) := "111011100100";
    constant ap_const_lv12_EDA : STD_LOGIC_VECTOR (11 downto 0) := "111011011010";
    constant ap_const_lv12_C61 : STD_LOGIC_VECTOR (11 downto 0) := "110001100001";
    constant ap_const_lv12_25D : STD_LOGIC_VECTOR (11 downto 0) := "001001011101";
    constant ap_const_lv12_CFA : STD_LOGIC_VECTOR (11 downto 0) := "110011111010";
    constant ap_const_lv12_D75 : STD_LOGIC_VECTOR (11 downto 0) := "110101110101";
    constant ap_const_lv12_276 : STD_LOGIC_VECTOR (11 downto 0) := "001001110110";
    constant ap_const_lv12_DC9 : STD_LOGIC_VECTOR (11 downto 0) := "110111001001";
    constant ap_const_lv12_BB7 : STD_LOGIC_VECTOR (11 downto 0) := "101110110111";
    constant ap_const_lv12_431 : STD_LOGIC_VECTOR (11 downto 0) := "010000110001";
    constant ap_const_lv12_FBE : STD_LOGIC_VECTOR (11 downto 0) := "111110111110";
    constant ap_const_lv12_CB0 : STD_LOGIC_VECTOR (11 downto 0) := "110010110000";
    constant ap_const_lv12_3A : STD_LOGIC_VECTOR (11 downto 0) := "000000111010";

attribute shreg_extract : string;
    signal icmp_ln4_fu_178_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_reg_651 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal icmp_ln4_reg_651_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_reg_651_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_66_fu_184_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_66_reg_662 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_67_fu_190_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_67_reg_668 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_68_fu_196_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_68_reg_674 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_69_fu_202_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_69_reg_680 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_69_reg_680_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_70_fu_208_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_70_reg_686 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_70_reg_686_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_70_reg_686_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_71_fu_214_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_71_reg_692 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_71_reg_692_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_71_reg_692_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_71_reg_692_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_72_fu_220_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_72_reg_698 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_72_reg_698_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_73_fu_226_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_73_reg_703 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_74_fu_232_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_74_reg_708 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_74_reg_708_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_75_fu_238_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_75_reg_713 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_75_reg_713_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_76_fu_244_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_76_reg_718 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_76_reg_718_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_76_reg_718_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_77_fu_250_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_77_reg_723 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_77_reg_723_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_77_reg_723_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_78_fu_256_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_78_reg_728 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_78_reg_728_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_78_reg_728_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_79_fu_262_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_79_reg_733 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_79_reg_733_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_79_reg_733_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_79_reg_733_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln105_fu_273_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln105_reg_738 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln107_fu_282_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln107_reg_745 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln105_69_fu_287_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln105_69_reg_750 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln105_69_reg_750_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln107_7_fu_297_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln107_7_reg_757 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln107_7_reg_757_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln107_7_reg_757_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln105_70_fu_303_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln105_70_reg_763 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln105_71_fu_313_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln105_71_reg_769 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln120_fu_329_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln120_reg_775 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln105_72_fu_340_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln105_72_reg_780 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln120_57_fu_377_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln120_57_reg_785 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln120_67_fu_445_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln120_67_reg_791 : STD_LOGIC_VECTOR (3 downto 0);
    signal or_ln120_61_fu_500_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln120_61_reg_796 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln120_73_fu_544_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln120_73_reg_801 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal xor_ln107_30_fu_277_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln107_fu_268_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln107_31_fu_292_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln107_32_fu_308_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln105_75_fu_318_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln105_76_fu_323_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln107_33_fu_335_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln105_78_fu_352_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln105_77_fu_348_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln120_54_fu_367_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln105_79_fu_357_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln105_74_fu_344_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln120_fu_382_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln120_fu_388_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln120_fu_392_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln120_62_fu_399_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln120_11_fu_406_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal or_ln120_53_fu_362_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln120_63_fu_410_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln120_64_fu_417_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal or_ln120_55_fu_371_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln120_65_fu_425_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln120_66_fu_433_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal zext_ln120_12_fu_441_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal xor_ln107_34_fu_452_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln105_81_fu_465_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln105_73_fu_457_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln105_80_fu_461_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln105_82_fu_470_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln120_59_fu_490_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln105_83_fu_475_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln120_56_fu_480_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln120_68_fu_506_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal or_ln120_58_fu_485_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln120_69_fu_513_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln120_70_fu_520_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal or_ln120_60_fu_494_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln120_71_fu_528_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln120_72_fu_536_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal xor_ln107_35_fu_552_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln105_84_fu_557_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln105_85_fu_562_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln120_62_fu_567_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal agg_result_fu_579_p33 : STD_LOGIC_VECTOR (11 downto 0);
    signal agg_result_fu_579_p34 : STD_LOGIC_VECTOR (3 downto 0);
    signal agg_result_fu_579_p35 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_ce_reg : STD_LOGIC;
    signal p_read1_int_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal p_read2_int_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal p_read3_int_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal p_read4_int_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal p_read5_int_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal p_read6_int_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal p_read7_int_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_return_int_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal agg_result_fu_579_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal agg_result_fu_579_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal agg_result_fu_579_p5 : STD_LOGIC_VECTOR (3 downto 0);
    signal agg_result_fu_579_p7 : STD_LOGIC_VECTOR (3 downto 0);
    signal agg_result_fu_579_p9 : STD_LOGIC_VECTOR (3 downto 0);
    signal agg_result_fu_579_p11 : STD_LOGIC_VECTOR (3 downto 0);
    signal agg_result_fu_579_p13 : STD_LOGIC_VECTOR (3 downto 0);
    signal agg_result_fu_579_p15 : STD_LOGIC_VECTOR (3 downto 0);
    signal agg_result_fu_579_p17 : STD_LOGIC_VECTOR (3 downto 0);
    signal agg_result_fu_579_p19 : STD_LOGIC_VECTOR (3 downto 0);
    signal agg_result_fu_579_p21 : STD_LOGIC_VECTOR (3 downto 0);
    signal agg_result_fu_579_p23 : STD_LOGIC_VECTOR (3 downto 0);
    signal agg_result_fu_579_p25 : STD_LOGIC_VECTOR (3 downto 0);
    signal agg_result_fu_579_p27 : STD_LOGIC_VECTOR (3 downto 0);
    signal agg_result_fu_579_p29 : STD_LOGIC_VECTOR (3 downto 0);
    signal agg_result_fu_579_p31 : STD_LOGIC_VECTOR (3 downto 0);

    component my_prj_accelerator_sparsemux_33_4_12_1_0 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        CASE0 : STD_LOGIC_VECTOR (3 downto 0);
        din0_WIDTH : INTEGER;
        CASE1 : STD_LOGIC_VECTOR (3 downto 0);
        din1_WIDTH : INTEGER;
        CASE2 : STD_LOGIC_VECTOR (3 downto 0);
        din2_WIDTH : INTEGER;
        CASE3 : STD_LOGIC_VECTOR (3 downto 0);
        din3_WIDTH : INTEGER;
        CASE4 : STD_LOGIC_VECTOR (3 downto 0);
        din4_WIDTH : INTEGER;
        CASE5 : STD_LOGIC_VECTOR (3 downto 0);
        din5_WIDTH : INTEGER;
        CASE6 : STD_LOGIC_VECTOR (3 downto 0);
        din6_WIDTH : INTEGER;
        CASE7 : STD_LOGIC_VECTOR (3 downto 0);
        din7_WIDTH : INTEGER;
        CASE8 : STD_LOGIC_VECTOR (3 downto 0);
        din8_WIDTH : INTEGER;
        CASE9 : STD_LOGIC_VECTOR (3 downto 0);
        din9_WIDTH : INTEGER;
        CASE10 : STD_LOGIC_VECTOR (3 downto 0);
        din10_WIDTH : INTEGER;
        CASE11 : STD_LOGIC_VECTOR (3 downto 0);
        din11_WIDTH : INTEGER;
        CASE12 : STD_LOGIC_VECTOR (3 downto 0);
        din12_WIDTH : INTEGER;
        CASE13 : STD_LOGIC_VECTOR (3 downto 0);
        din13_WIDTH : INTEGER;
        CASE14 : STD_LOGIC_VECTOR (3 downto 0);
        din14_WIDTH : INTEGER;
        CASE15 : STD_LOGIC_VECTOR (3 downto 0);
        din15_WIDTH : INTEGER;
        def_WIDTH : INTEGER;
        sel_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (11 downto 0);
        din1 : IN STD_LOGIC_VECTOR (11 downto 0);
        din2 : IN STD_LOGIC_VECTOR (11 downto 0);
        din3 : IN STD_LOGIC_VECTOR (11 downto 0);
        din4 : IN STD_LOGIC_VECTOR (11 downto 0);
        din5 : IN STD_LOGIC_VECTOR (11 downto 0);
        din6 : IN STD_LOGIC_VECTOR (11 downto 0);
        din7 : IN STD_LOGIC_VECTOR (11 downto 0);
        din8 : IN STD_LOGIC_VECTOR (11 downto 0);
        din9 : IN STD_LOGIC_VECTOR (11 downto 0);
        din10 : IN STD_LOGIC_VECTOR (11 downto 0);
        din11 : IN STD_LOGIC_VECTOR (11 downto 0);
        din12 : IN STD_LOGIC_VECTOR (11 downto 0);
        din13 : IN STD_LOGIC_VECTOR (11 downto 0);
        din14 : IN STD_LOGIC_VECTOR (11 downto 0);
        din15 : IN STD_LOGIC_VECTOR (11 downto 0);
        def : IN STD_LOGIC_VECTOR (11 downto 0);
        sel : IN STD_LOGIC_VECTOR (3 downto 0);
        dout : OUT STD_LOGIC_VECTOR (11 downto 0) );
    end component;



begin
    sparsemux_33_4_12_1_0_U28 : component my_prj_accelerator_sparsemux_33_4_12_1_0
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        CASE0 => "0000",
        din0_WIDTH => 12,
        CASE1 => "0001",
        din1_WIDTH => 12,
        CASE2 => "0010",
        din2_WIDTH => 12,
        CASE3 => "0011",
        din3_WIDTH => 12,
        CASE4 => "0100",
        din4_WIDTH => 12,
        CASE5 => "0101",
        din5_WIDTH => 12,
        CASE6 => "0110",
        din6_WIDTH => 12,
        CASE7 => "0111",
        din7_WIDTH => 12,
        CASE8 => "1000",
        din8_WIDTH => 12,
        CASE9 => "1001",
        din9_WIDTH => 12,
        CASE10 => "1010",
        din10_WIDTH => 12,
        CASE11 => "1011",
        din11_WIDTH => 12,
        CASE12 => "1100",
        din12_WIDTH => 12,
        CASE13 => "1101",
        din13_WIDTH => 12,
        CASE14 => "1110",
        din14_WIDTH => 12,
        CASE15 => "1111",
        din15_WIDTH => 12,
        def_WIDTH => 12,
        sel_WIDTH => 4,
        dout_WIDTH => 12)
    port map (
        din0 => ap_const_lv12_B8B,
        din1 => ap_const_lv12_BFD,
        din2 => ap_const_lv12_C1A,
        din3 => ap_const_lv12_EE4,
        din4 => ap_const_lv12_EDA,
        din5 => ap_const_lv12_C61,
        din6 => ap_const_lv12_25D,
        din7 => ap_const_lv12_CFA,
        din8 => ap_const_lv12_D75,
        din9 => ap_const_lv12_276,
        din10 => ap_const_lv12_DC9,
        din11 => ap_const_lv12_BB7,
        din12 => ap_const_lv12_431,
        din13 => ap_const_lv12_FBE,
        din14 => ap_const_lv12_CB0,
        din15 => ap_const_lv12_3A,
        def => agg_result_fu_579_p33,
        sel => agg_result_fu_579_p34,
        dout => agg_result_fu_579_p35);





    ap_ce_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            ap_ce_reg <= ap_ce;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce_reg))) then
                and_ln105_69_reg_750 <= and_ln105_69_fu_287_p2;
                and_ln105_69_reg_750_pp0_iter2_reg <= and_ln105_69_reg_750;
                and_ln105_70_reg_763 <= and_ln105_70_fu_303_p2;
                and_ln105_71_reg_769 <= and_ln105_71_fu_313_p2;
                and_ln105_72_reg_780 <= and_ln105_72_fu_340_p2;
                and_ln105_reg_738 <= and_ln105_fu_273_p2;
                and_ln107_7_reg_757 <= and_ln107_7_fu_297_p2;
                and_ln107_7_reg_757_pp0_iter2_reg <= and_ln107_7_reg_757;
                and_ln107_7_reg_757_pp0_iter3_reg <= and_ln107_7_reg_757_pp0_iter2_reg;
                and_ln107_reg_745 <= and_ln107_fu_282_p2;
                icmp_ln4_66_reg_662 <= icmp_ln4_66_fu_184_p2;
                icmp_ln4_67_reg_668 <= icmp_ln4_67_fu_190_p2;
                icmp_ln4_68_reg_674 <= icmp_ln4_68_fu_196_p2;
                icmp_ln4_69_reg_680 <= icmp_ln4_69_fu_202_p2;
                icmp_ln4_69_reg_680_pp0_iter1_reg <= icmp_ln4_69_reg_680;
                icmp_ln4_70_reg_686 <= icmp_ln4_70_fu_208_p2;
                icmp_ln4_70_reg_686_pp0_iter1_reg <= icmp_ln4_70_reg_686;
                icmp_ln4_70_reg_686_pp0_iter2_reg <= icmp_ln4_70_reg_686_pp0_iter1_reg;
                icmp_ln4_71_reg_692 <= icmp_ln4_71_fu_214_p2;
                icmp_ln4_71_reg_692_pp0_iter1_reg <= icmp_ln4_71_reg_692;
                icmp_ln4_71_reg_692_pp0_iter2_reg <= icmp_ln4_71_reg_692_pp0_iter1_reg;
                icmp_ln4_71_reg_692_pp0_iter3_reg <= icmp_ln4_71_reg_692_pp0_iter2_reg;
                icmp_ln4_72_reg_698 <= icmp_ln4_72_fu_220_p2;
                icmp_ln4_72_reg_698_pp0_iter1_reg <= icmp_ln4_72_reg_698;
                icmp_ln4_73_reg_703 <= icmp_ln4_73_fu_226_p2;
                icmp_ln4_74_reg_708 <= icmp_ln4_74_fu_232_p2;
                icmp_ln4_74_reg_708_pp0_iter1_reg <= icmp_ln4_74_reg_708;
                icmp_ln4_75_reg_713 <= icmp_ln4_75_fu_238_p2;
                icmp_ln4_75_reg_713_pp0_iter1_reg <= icmp_ln4_75_reg_713;
                icmp_ln4_76_reg_718 <= icmp_ln4_76_fu_244_p2;
                icmp_ln4_76_reg_718_pp0_iter1_reg <= icmp_ln4_76_reg_718;
                icmp_ln4_76_reg_718_pp0_iter2_reg <= icmp_ln4_76_reg_718_pp0_iter1_reg;
                icmp_ln4_77_reg_723 <= icmp_ln4_77_fu_250_p2;
                icmp_ln4_77_reg_723_pp0_iter1_reg <= icmp_ln4_77_reg_723;
                icmp_ln4_77_reg_723_pp0_iter2_reg <= icmp_ln4_77_reg_723_pp0_iter1_reg;
                icmp_ln4_78_reg_728 <= icmp_ln4_78_fu_256_p2;
                icmp_ln4_78_reg_728_pp0_iter1_reg <= icmp_ln4_78_reg_728;
                icmp_ln4_78_reg_728_pp0_iter2_reg <= icmp_ln4_78_reg_728_pp0_iter1_reg;
                icmp_ln4_79_reg_733 <= icmp_ln4_79_fu_262_p2;
                icmp_ln4_79_reg_733_pp0_iter1_reg <= icmp_ln4_79_reg_733;
                icmp_ln4_79_reg_733_pp0_iter2_reg <= icmp_ln4_79_reg_733_pp0_iter1_reg;
                icmp_ln4_79_reg_733_pp0_iter3_reg <= icmp_ln4_79_reg_733_pp0_iter2_reg;
                icmp_ln4_reg_651 <= icmp_ln4_fu_178_p2;
                icmp_ln4_reg_651_pp0_iter1_reg <= icmp_ln4_reg_651;
                icmp_ln4_reg_651_pp0_iter2_reg <= icmp_ln4_reg_651_pp0_iter1_reg;
                or_ln120_57_reg_785 <= or_ln120_57_fu_377_p2;
                or_ln120_61_reg_796 <= or_ln120_61_fu_500_p2;
                or_ln120_reg_775 <= or_ln120_fu_329_p2;
                select_ln120_67_reg_791 <= select_ln120_67_fu_445_p3;
                select_ln120_73_reg_801 <= select_ln120_73_fu_544_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_ce_reg)) then
                ap_return_int_reg <= agg_result_fu_579_p35;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_ce)) then
                p_read1_int_reg <= p_read1;
                p_read2_int_reg <= p_read2;
                p_read3_int_reg <= p_read3;
                p_read4_int_reg <= p_read4;
                p_read5_int_reg <= p_read5;
                p_read6_int_reg <= p_read6;
                p_read7_int_reg <= p_read7;
            end if;
        end if;
    end process;
    agg_result_fu_579_p33 <= "XXXXXXXXXXXX";
    agg_result_fu_579_p34 <= 
        select_ln120_73_reg_801 when (or_ln120_62_fu_567_p2(0) = '1') else 
        ap_const_lv4_F;
    and_ln105_69_fu_287_p2 <= (xor_ln107_fu_268_p2 and icmp_ln4_67_reg_668);
    and_ln105_70_fu_303_p2 <= (icmp_ln4_68_reg_674 and and_ln105_fu_273_p2);
    and_ln105_71_fu_313_p2 <= (icmp_ln4_69_reg_680 and and_ln107_fu_282_p2);
    and_ln105_72_fu_340_p2 <= (icmp_ln4_70_reg_686_pp0_iter1_reg and and_ln105_69_reg_750);
    and_ln105_73_fu_457_p2 <= (icmp_ln4_71_reg_692_pp0_iter2_reg and and_ln107_7_reg_757_pp0_iter2_reg);
    and_ln105_74_fu_344_p2 <= (icmp_ln4_72_reg_698_pp0_iter1_reg and and_ln105_70_reg_763);
    and_ln105_75_fu_318_p2 <= (xor_ln107_32_fu_308_p2 and icmp_ln4_73_reg_703);
    and_ln105_76_fu_323_p2 <= (and_ln105_fu_273_p2 and and_ln105_75_fu_318_p2);
    and_ln105_77_fu_348_p2 <= (icmp_ln4_74_reg_708_pp0_iter1_reg and and_ln105_71_reg_769);
    and_ln105_78_fu_352_p2 <= (xor_ln107_33_fu_335_p2 and icmp_ln4_75_reg_713_pp0_iter1_reg);
    and_ln105_79_fu_357_p2 <= (and_ln107_reg_745 and and_ln105_78_fu_352_p2);
    and_ln105_80_fu_461_p2 <= (icmp_ln4_76_reg_718_pp0_iter2_reg and and_ln105_72_reg_780);
    and_ln105_81_fu_465_p2 <= (xor_ln107_34_fu_452_p2 and icmp_ln4_77_reg_723_pp0_iter2_reg);
    and_ln105_82_fu_470_p2 <= (and_ln105_81_fu_465_p2 and and_ln105_69_reg_750_pp0_iter2_reg);
    and_ln105_83_fu_475_p2 <= (icmp_ln4_78_reg_728_pp0_iter2_reg and and_ln105_73_fu_457_p2);
    and_ln105_84_fu_557_p2 <= (xor_ln107_35_fu_552_p2 and icmp_ln4_79_reg_733_pp0_iter3_reg);
    and_ln105_85_fu_562_p2 <= (and_ln107_7_reg_757_pp0_iter3_reg and and_ln105_84_fu_557_p2);
    and_ln105_fu_273_p2 <= (icmp_ln4_reg_651 and icmp_ln4_66_reg_662);
    and_ln107_7_fu_297_p2 <= (xor_ln107_fu_268_p2 and xor_ln107_31_fu_292_p2);
    and_ln107_fu_282_p2 <= (xor_ln107_30_fu_277_p2 and icmp_ln4_reg_651);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_return_assign_proc : process(agg_result_fu_579_p35, ap_ce_reg, ap_return_int_reg)
    begin
        if ((ap_const_logic_0 = ap_ce_reg)) then 
            ap_return <= ap_return_int_reg;
        elsif ((ap_const_logic_1 = ap_ce_reg)) then 
            ap_return <= agg_result_fu_579_p35;
        else 
            ap_return <= "XXXXXXXXXXXX";
        end if; 
    end process;

    icmp_ln4_66_fu_184_p2 <= "1" when (signed(p_read3_int_reg) < signed(ap_const_lv18_FE9B)) else "0";
    icmp_ln4_67_fu_190_p2 <= "1" when (signed(p_read4_int_reg) < signed(ap_const_lv18_E7F8)) else "0";
    icmp_ln4_68_fu_196_p2 <= "1" when (signed(p_read4_int_reg) < signed(ap_const_lv18_107F8)) else "0";
    icmp_ln4_69_fu_202_p2 <= "1" when (signed(p_read1_int_reg) < signed(ap_const_lv18_1180)) else "0";
    icmp_ln4_70_fu_208_p2 <= "1" when (signed(p_read5_int_reg) < signed(ap_const_lv18_160)) else "0";
    icmp_ln4_71_fu_214_p2 <= "1" when (signed(p_read5_int_reg) < signed(ap_const_lv18_754)) else "0";
    icmp_ln4_72_fu_220_p2 <= "1" when (signed(p_read2_int_reg) < signed(ap_const_lv18_2780)) else "0";
    icmp_ln4_73_fu_226_p2 <= "1" when (signed(p_read1_int_reg) < signed(ap_const_lv18_1280)) else "0";
    icmp_ln4_74_fu_232_p2 <= "1" when (signed(p_read7_int_reg) < signed(ap_const_lv18_1D8)) else "0";
    icmp_ln4_75_fu_238_p2 <= "1" when (signed(p_read6_int_reg) < signed(ap_const_lv18_F32)) else "0";
    icmp_ln4_76_fu_244_p2 <= "1" when (signed(p_read3_int_reg) < signed(ap_const_lv18_5F66)) else "0";
    icmp_ln4_77_fu_250_p2 <= "1" when (signed(p_read5_int_reg) < signed(ap_const_lv18_387)) else "0";
    icmp_ln4_78_fu_256_p2 <= "1" when (signed(p_read6_int_reg) < signed(ap_const_lv18_FD8)) else "0";
    icmp_ln4_79_fu_262_p2 <= "1" when (signed(p_read2_int_reg) < signed(ap_const_lv18_4980)) else "0";
    icmp_ln4_fu_178_p2 <= "1" when (signed(p_read1_int_reg) < signed(ap_const_lv18_1B80)) else "0";
    or_ln120_53_fu_362_p2 <= (and_ln105_reg_738 or and_ln105_77_fu_348_p2);
    or_ln120_54_fu_367_p2 <= (and_ln105_reg_738 or and_ln105_71_reg_769);
    or_ln120_55_fu_371_p2 <= (or_ln120_54_fu_367_p2 or and_ln105_79_fu_357_p2);
    or_ln120_56_fu_480_p2 <= (icmp_ln4_reg_651_pp0_iter2_reg or and_ln105_80_fu_461_p2);
    or_ln120_57_fu_377_p2 <= (icmp_ln4_reg_651_pp0_iter1_reg or and_ln105_72_fu_340_p2);
    or_ln120_58_fu_485_p2 <= (or_ln120_57_reg_785 or and_ln105_82_fu_470_p2);
    or_ln120_59_fu_490_p2 <= (icmp_ln4_reg_651_pp0_iter2_reg or and_ln105_69_reg_750_pp0_iter2_reg);
    or_ln120_60_fu_494_p2 <= (or_ln120_59_fu_490_p2 or and_ln105_83_fu_475_p2);
    or_ln120_61_fu_500_p2 <= (or_ln120_59_fu_490_p2 or and_ln105_73_fu_457_p2);
    or_ln120_62_fu_567_p2 <= (or_ln120_61_reg_796 or and_ln105_85_fu_562_p2);
    or_ln120_fu_329_p2 <= (and_ln105_76_fu_323_p2 or and_ln105_70_fu_303_p2);
    select_ln120_62_fu_399_p3 <= 
        select_ln120_fu_392_p3 when (or_ln120_reg_775(0) = '1') else 
        ap_const_lv2_3;
    select_ln120_63_fu_410_p3 <= 
        zext_ln120_11_fu_406_p1 when (and_ln105_reg_738(0) = '1') else 
        ap_const_lv3_4;
    select_ln120_64_fu_417_p3 <= 
        select_ln120_63_fu_410_p3 when (or_ln120_53_fu_362_p2(0) = '1') else 
        ap_const_lv3_5;
    select_ln120_65_fu_425_p3 <= 
        select_ln120_64_fu_417_p3 when (or_ln120_54_fu_367_p2(0) = '1') else 
        ap_const_lv3_6;
    select_ln120_66_fu_433_p3 <= 
        select_ln120_65_fu_425_p3 when (or_ln120_55_fu_371_p2(0) = '1') else 
        ap_const_lv3_7;
    select_ln120_67_fu_445_p3 <= 
        zext_ln120_12_fu_441_p1 when (icmp_ln4_reg_651_pp0_iter1_reg(0) = '1') else 
        ap_const_lv4_8;
    select_ln120_68_fu_506_p3 <= 
        select_ln120_67_reg_791 when (or_ln120_56_fu_480_p2(0) = '1') else 
        ap_const_lv4_9;
    select_ln120_69_fu_513_p3 <= 
        select_ln120_68_fu_506_p3 when (or_ln120_57_reg_785(0) = '1') else 
        ap_const_lv4_A;
    select_ln120_70_fu_520_p3 <= 
        select_ln120_69_fu_513_p3 when (or_ln120_58_fu_485_p2(0) = '1') else 
        ap_const_lv4_B;
    select_ln120_71_fu_528_p3 <= 
        select_ln120_70_fu_520_p3 when (or_ln120_59_fu_490_p2(0) = '1') else 
        ap_const_lv4_C;
    select_ln120_72_fu_536_p3 <= 
        select_ln120_71_fu_528_p3 when (or_ln120_60_fu_494_p2(0) = '1') else 
        ap_const_lv4_D;
    select_ln120_73_fu_544_p3 <= 
        select_ln120_72_fu_536_p3 when (or_ln120_61_fu_500_p2(0) = '1') else 
        ap_const_lv4_E;
    select_ln120_fu_392_p3 <= 
        zext_ln120_fu_388_p1 when (and_ln105_70_reg_763(0) = '1') else 
        ap_const_lv2_2;
    xor_ln107_30_fu_277_p2 <= (icmp_ln4_66_reg_662 xor ap_const_lv1_1);
    xor_ln107_31_fu_292_p2 <= (icmp_ln4_67_reg_668 xor ap_const_lv1_1);
    xor_ln107_32_fu_308_p2 <= (icmp_ln4_68_reg_674 xor ap_const_lv1_1);
    xor_ln107_33_fu_335_p2 <= (icmp_ln4_69_reg_680_pp0_iter1_reg xor ap_const_lv1_1);
    xor_ln107_34_fu_452_p2 <= (icmp_ln4_70_reg_686_pp0_iter2_reg xor ap_const_lv1_1);
    xor_ln107_35_fu_552_p2 <= (icmp_ln4_71_reg_692_pp0_iter3_reg xor ap_const_lv1_1);
    xor_ln107_fu_268_p2 <= (icmp_ln4_reg_651 xor ap_const_lv1_1);
    xor_ln120_fu_382_p2 <= (ap_const_lv1_1 xor and_ln105_74_fu_344_p2);
    zext_ln120_11_fu_406_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln120_62_fu_399_p3),3));
    zext_ln120_12_fu_441_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln120_66_fu_433_p3),4));
    zext_ln120_fu_388_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(xor_ln120_fu_382_p2),2));
end behav;
