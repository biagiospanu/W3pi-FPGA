-- ==============================================================
-- Generated by Vitis HLS v2023.2
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity my_prj_decision_function_ap_fixed_18_8_5_3_0_ap_fixed_18_8_5_3_0_12 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    x_2_val : IN STD_LOGIC_VECTOR (17 downto 0);
    x_3_val : IN STD_LOGIC_VECTOR (17 downto 0);
    x_4_val : IN STD_LOGIC_VECTOR (17 downto 0);
    x_5_val : IN STD_LOGIC_VECTOR (17 downto 0);
    x_6_val : IN STD_LOGIC_VECTOR (17 downto 0);
    x_9_val : IN STD_LOGIC_VECTOR (17 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (10 downto 0);
    ap_ce : IN STD_LOGIC );
end;


architecture behav of my_prj_decision_function_ap_fixed_18_8_5_3_0_ap_fixed_18_8_5_3_0_12 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv18_FA6 : STD_LOGIC_VECTOR (17 downto 0) := "000000111110100110";
    constant ap_const_lv18_3FF3C : STD_LOGIC_VECTOR (17 downto 0) := "111111111100111100";
    constant ap_const_lv18_11E14 : STD_LOGIC_VECTOR (17 downto 0) := "010001111000010100";
    constant ap_const_lv18_CD8D : STD_LOGIC_VECTOR (17 downto 0) := "001100110110001101";
    constant ap_const_lv18_366 : STD_LOGIC_VECTOR (17 downto 0) := "000000001101100110";
    constant ap_const_lv18_9480 : STD_LOGIC_VECTOR (17 downto 0) := "001001010010000000";
    constant ap_const_lv18_15ACF : STD_LOGIC_VECTOR (17 downto 0) := "010101101011001111";
    constant ap_const_lv18_3C80 : STD_LOGIC_VECTOR (17 downto 0) := "000011110010000000";
    constant ap_const_lv18_18B : STD_LOGIC_VECTOR (17 downto 0) := "000000000110001011";
    constant ap_const_lv18_1245 : STD_LOGIC_VECTOR (17 downto 0) := "000001001001000101";
    constant ap_const_lv18_13C7C : STD_LOGIC_VECTOR (17 downto 0) := "010011110001111100";
    constant ap_const_lv18_7680 : STD_LOGIC_VECTOR (17 downto 0) := "000111011010000000";
    constant ap_const_lv18_C300 : STD_LOGIC_VECTOR (17 downto 0) := "001100001100000000";
    constant ap_const_lv18_3FFC4 : STD_LOGIC_VECTOR (17 downto 0) := "111111111111000100";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv3_6 : STD_LOGIC_VECTOR (2 downto 0) := "110";
    constant ap_const_lv3_7 : STD_LOGIC_VECTOR (2 downto 0) := "111";
    constant ap_const_lv4_8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv4_9 : STD_LOGIC_VECTOR (3 downto 0) := "1001";
    constant ap_const_lv4_A : STD_LOGIC_VECTOR (3 downto 0) := "1010";
    constant ap_const_lv4_B : STD_LOGIC_VECTOR (3 downto 0) := "1011";
    constant ap_const_lv4_C : STD_LOGIC_VECTOR (3 downto 0) := "1100";
    constant ap_const_lv4_D : STD_LOGIC_VECTOR (3 downto 0) := "1101";
    constant ap_const_lv4_E : STD_LOGIC_VECTOR (3 downto 0) := "1110";
    constant ap_const_lv11_507 : STD_LOGIC_VECTOR (10 downto 0) := "10100000111";
    constant ap_const_lv11_7BE : STD_LOGIC_VECTOR (10 downto 0) := "11110111110";
    constant ap_const_lv11_617 : STD_LOGIC_VECTOR (10 downto 0) := "11000010111";
    constant ap_const_lv11_E : STD_LOGIC_VECTOR (10 downto 0) := "00000001110";
    constant ap_const_lv11_71A : STD_LOGIC_VECTOR (10 downto 0) := "11100011010";
    constant ap_const_lv11_4C : STD_LOGIC_VECTOR (10 downto 0) := "00001001100";
    constant ap_const_lv11_638 : STD_LOGIC_VECTOR (10 downto 0) := "11000111000";
    constant ap_const_lv11_5D9 : STD_LOGIC_VECTOR (10 downto 0) := "10111011001";
    constant ap_const_lv11_7D6 : STD_LOGIC_VECTOR (10 downto 0) := "11111010110";
    constant ap_const_lv11_5CF : STD_LOGIC_VECTOR (10 downto 0) := "10111001111";
    constant ap_const_lv11_A6 : STD_LOGIC_VECTOR (10 downto 0) := "00010100110";
    constant ap_const_lv11_269 : STD_LOGIC_VECTOR (10 downto 0) := "01001101001";
    constant ap_const_lv11_717 : STD_LOGIC_VECTOR (10 downto 0) := "11100010111";
    constant ap_const_lv11_7E1 : STD_LOGIC_VECTOR (10 downto 0) := "11111100001";
    constant ap_const_lv11_5AE : STD_LOGIC_VECTOR (10 downto 0) := "10110101110";

attribute shreg_extract : string;
    signal icmp_ln4_fu_164_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_reg_629 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal icmp_ln4_reg_629_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_reg_629_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_144_fu_170_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_144_reg_639 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_145_fu_176_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_145_reg_645 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_146_fu_182_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_146_reg_651 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_146_reg_651_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_147_fu_188_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_147_reg_657 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_147_reg_657_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_147_reg_657_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_148_fu_194_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_148_reg_663 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_148_reg_663_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_148_reg_663_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_149_fu_200_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_149_reg_670 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_149_reg_670_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_149_reg_670_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_149_reg_670_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_150_fu_206_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_150_reg_676 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_150_reg_676_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_151_fu_212_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_151_reg_681 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_151_reg_681_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_152_fu_218_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_152_reg_686 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_152_reg_686_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_153_fu_224_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_153_reg_691 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_153_reg_691_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_153_reg_691_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_154_fu_230_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_154_reg_696 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_154_reg_696_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_154_reg_696_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_155_fu_236_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_155_reg_701 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_155_reg_701_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_155_reg_701_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_156_fu_242_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_156_reg_706 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_156_reg_706_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_156_reg_706_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_156_reg_706_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln107_fu_248_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln107_reg_711 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln105_fu_253_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln105_reg_716 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln107_fu_262_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln107_reg_722 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln107_reg_722_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln105_130_fu_267_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln105_130_reg_728 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln105_130_reg_728_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln107_66_fu_272_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln107_66_reg_734 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln105_131_fu_277_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln105_131_reg_740 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln107_17_fu_287_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln107_17_reg_746 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln107_16_fu_293_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln107_16_reg_754 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln107_16_reg_754_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln120_120_fu_350_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln120_120_reg_760 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln120_122_fu_356_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln120_122_reg_765 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln120_140_fu_417_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln120_140_reg_771 : STD_LOGIC_VECTOR (2 downto 0);
    signal or_ln120_126_fu_478_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln120_126_reg_776 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln120_146_fu_526_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln120_146_reg_781 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal xor_ln107_65_fu_257_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln107_69_fu_282_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln107_67_fu_297_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln105_135_fu_310_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln105_132_fu_302_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln105_134_fu_306_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln120_116_fu_330_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln105_136_fu_315_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln120_118_fu_340_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln105_137_fu_320_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln120_128_fu_360_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln120_129_fu_364_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln120_fu_325_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln120_fu_369_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln120_fu_373_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln120_136_fu_381_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal or_ln120_117_fu_334_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln120_23_fu_389_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln120_137_fu_393_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal or_ln120_119_fu_344_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln120_138_fu_401_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln120_139_fu_409_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal xor_ln107_68_fu_425_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln105_142_fu_434_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln105_143_fu_444_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln105_133_fu_430_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln105_138_fu_439_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln105_139_fu_448_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln120_124_fu_468_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln105_140_fu_453_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln120_121_fu_458_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln120_24_fu_484_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln120_141_fu_487_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal or_ln120_123_fu_463_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln120_142_fu_495_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln120_143_fu_502_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal or_ln120_125_fu_472_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln120_144_fu_510_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln120_145_fu_518_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal xor_ln107_70_fu_534_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln105_144_fu_539_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln105_141_fu_544_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln120_127_fu_549_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal agg_result_fu_561_p31 : STD_LOGIC_VECTOR (10 downto 0);
    signal agg_result_fu_561_p32 : STD_LOGIC_VECTOR (3 downto 0);
    signal agg_result_fu_561_p33 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_ce_reg : STD_LOGIC;
    signal x_2_val_int_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal x_3_val_int_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal x_4_val_int_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal x_5_val_int_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal x_6_val_int_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal x_9_val_int_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_return_int_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal agg_result_fu_561_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal agg_result_fu_561_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal agg_result_fu_561_p5 : STD_LOGIC_VECTOR (3 downto 0);
    signal agg_result_fu_561_p7 : STD_LOGIC_VECTOR (3 downto 0);
    signal agg_result_fu_561_p9 : STD_LOGIC_VECTOR (3 downto 0);
    signal agg_result_fu_561_p11 : STD_LOGIC_VECTOR (3 downto 0);
    signal agg_result_fu_561_p13 : STD_LOGIC_VECTOR (3 downto 0);
    signal agg_result_fu_561_p15 : STD_LOGIC_VECTOR (3 downto 0);
    signal agg_result_fu_561_p17 : STD_LOGIC_VECTOR (3 downto 0);
    signal agg_result_fu_561_p19 : STD_LOGIC_VECTOR (3 downto 0);
    signal agg_result_fu_561_p21 : STD_LOGIC_VECTOR (3 downto 0);
    signal agg_result_fu_561_p23 : STD_LOGIC_VECTOR (3 downto 0);
    signal agg_result_fu_561_p25 : STD_LOGIC_VECTOR (3 downto 0);
    signal agg_result_fu_561_p27 : STD_LOGIC_VECTOR (3 downto 0);
    signal agg_result_fu_561_p29 : STD_LOGIC_VECTOR (3 downto 0);

    component my_prj_sparsemux_31_4_11_1_0_x0 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        CASE0 : STD_LOGIC_VECTOR (3 downto 0);
        din0_WIDTH : INTEGER;
        CASE1 : STD_LOGIC_VECTOR (3 downto 0);
        din1_WIDTH : INTEGER;
        CASE2 : STD_LOGIC_VECTOR (3 downto 0);
        din2_WIDTH : INTEGER;
        CASE3 : STD_LOGIC_VECTOR (3 downto 0);
        din3_WIDTH : INTEGER;
        CASE4 : STD_LOGIC_VECTOR (3 downto 0);
        din4_WIDTH : INTEGER;
        CASE5 : STD_LOGIC_VECTOR (3 downto 0);
        din5_WIDTH : INTEGER;
        CASE6 : STD_LOGIC_VECTOR (3 downto 0);
        din6_WIDTH : INTEGER;
        CASE7 : STD_LOGIC_VECTOR (3 downto 0);
        din7_WIDTH : INTEGER;
        CASE8 : STD_LOGIC_VECTOR (3 downto 0);
        din8_WIDTH : INTEGER;
        CASE9 : STD_LOGIC_VECTOR (3 downto 0);
        din9_WIDTH : INTEGER;
        CASE10 : STD_LOGIC_VECTOR (3 downto 0);
        din10_WIDTH : INTEGER;
        CASE11 : STD_LOGIC_VECTOR (3 downto 0);
        din11_WIDTH : INTEGER;
        CASE12 : STD_LOGIC_VECTOR (3 downto 0);
        din12_WIDTH : INTEGER;
        CASE13 : STD_LOGIC_VECTOR (3 downto 0);
        din13_WIDTH : INTEGER;
        CASE14 : STD_LOGIC_VECTOR (3 downto 0);
        din14_WIDTH : INTEGER;
        def_WIDTH : INTEGER;
        sel_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (10 downto 0);
        din1 : IN STD_LOGIC_VECTOR (10 downto 0);
        din2 : IN STD_LOGIC_VECTOR (10 downto 0);
        din3 : IN STD_LOGIC_VECTOR (10 downto 0);
        din4 : IN STD_LOGIC_VECTOR (10 downto 0);
        din5 : IN STD_LOGIC_VECTOR (10 downto 0);
        din6 : IN STD_LOGIC_VECTOR (10 downto 0);
        din7 : IN STD_LOGIC_VECTOR (10 downto 0);
        din8 : IN STD_LOGIC_VECTOR (10 downto 0);
        din9 : IN STD_LOGIC_VECTOR (10 downto 0);
        din10 : IN STD_LOGIC_VECTOR (10 downto 0);
        din11 : IN STD_LOGIC_VECTOR (10 downto 0);
        din12 : IN STD_LOGIC_VECTOR (10 downto 0);
        din13 : IN STD_LOGIC_VECTOR (10 downto 0);
        din14 : IN STD_LOGIC_VECTOR (10 downto 0);
        def : IN STD_LOGIC_VECTOR (10 downto 0);
        sel : IN STD_LOGIC_VECTOR (3 downto 0);
        dout : OUT STD_LOGIC_VECTOR (10 downto 0) );
    end component;



begin
    sparsemux_31_4_11_1_0_x0_U131 : component my_prj_sparsemux_31_4_11_1_0_x0
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        CASE0 => "0000",
        din0_WIDTH => 11,
        CASE1 => "0001",
        din1_WIDTH => 11,
        CASE2 => "0010",
        din2_WIDTH => 11,
        CASE3 => "0011",
        din3_WIDTH => 11,
        CASE4 => "0100",
        din4_WIDTH => 11,
        CASE5 => "0101",
        din5_WIDTH => 11,
        CASE6 => "0110",
        din6_WIDTH => 11,
        CASE7 => "0111",
        din7_WIDTH => 11,
        CASE8 => "1000",
        din8_WIDTH => 11,
        CASE9 => "1001",
        din9_WIDTH => 11,
        CASE10 => "1010",
        din10_WIDTH => 11,
        CASE11 => "1011",
        din11_WIDTH => 11,
        CASE12 => "1100",
        din12_WIDTH => 11,
        CASE13 => "1101",
        din13_WIDTH => 11,
        CASE14 => "1110",
        din14_WIDTH => 11,
        def_WIDTH => 11,
        sel_WIDTH => 4,
        dout_WIDTH => 11)
    port map (
        din0 => ap_const_lv11_507,
        din1 => ap_const_lv11_7BE,
        din2 => ap_const_lv11_617,
        din3 => ap_const_lv11_E,
        din4 => ap_const_lv11_71A,
        din5 => ap_const_lv11_4C,
        din6 => ap_const_lv11_638,
        din7 => ap_const_lv11_5D9,
        din8 => ap_const_lv11_7D6,
        din9 => ap_const_lv11_5CF,
        din10 => ap_const_lv11_A6,
        din11 => ap_const_lv11_269,
        din12 => ap_const_lv11_717,
        din13 => ap_const_lv11_7E1,
        din14 => ap_const_lv11_5AE,
        def => agg_result_fu_561_p31,
        sel => agg_result_fu_561_p32,
        dout => agg_result_fu_561_p33);





    ap_ce_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            ap_ce_reg <= ap_ce;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce_reg))) then
                and_ln105_130_reg_728 <= and_ln105_130_fu_267_p2;
                and_ln105_130_reg_728_pp0_iter2_reg <= and_ln105_130_reg_728;
                and_ln105_131_reg_740 <= and_ln105_131_fu_277_p2;
                and_ln105_reg_716 <= and_ln105_fu_253_p2;
                and_ln107_16_reg_754 <= and_ln107_16_fu_293_p2;
                and_ln107_16_reg_754_pp0_iter3_reg <= and_ln107_16_reg_754;
                and_ln107_17_reg_746 <= and_ln107_17_fu_287_p2;
                and_ln107_reg_722 <= and_ln107_fu_262_p2;
                and_ln107_reg_722_pp0_iter2_reg <= and_ln107_reg_722;
                icmp_ln4_144_reg_639 <= icmp_ln4_144_fu_170_p2;
                icmp_ln4_145_reg_645 <= icmp_ln4_145_fu_176_p2;
                icmp_ln4_146_reg_651 <= icmp_ln4_146_fu_182_p2;
                icmp_ln4_146_reg_651_pp0_iter1_reg <= icmp_ln4_146_reg_651;
                icmp_ln4_147_reg_657 <= icmp_ln4_147_fu_188_p2;
                icmp_ln4_147_reg_657_pp0_iter1_reg <= icmp_ln4_147_reg_657;
                icmp_ln4_147_reg_657_pp0_iter2_reg <= icmp_ln4_147_reg_657_pp0_iter1_reg;
                icmp_ln4_148_reg_663 <= icmp_ln4_148_fu_194_p2;
                icmp_ln4_148_reg_663_pp0_iter1_reg <= icmp_ln4_148_reg_663;
                icmp_ln4_148_reg_663_pp0_iter2_reg <= icmp_ln4_148_reg_663_pp0_iter1_reg;
                icmp_ln4_149_reg_670 <= icmp_ln4_149_fu_200_p2;
                icmp_ln4_149_reg_670_pp0_iter1_reg <= icmp_ln4_149_reg_670;
                icmp_ln4_149_reg_670_pp0_iter2_reg <= icmp_ln4_149_reg_670_pp0_iter1_reg;
                icmp_ln4_149_reg_670_pp0_iter3_reg <= icmp_ln4_149_reg_670_pp0_iter2_reg;
                icmp_ln4_150_reg_676 <= icmp_ln4_150_fu_206_p2;
                icmp_ln4_150_reg_676_pp0_iter1_reg <= icmp_ln4_150_reg_676;
                icmp_ln4_151_reg_681 <= icmp_ln4_151_fu_212_p2;
                icmp_ln4_151_reg_681_pp0_iter1_reg <= icmp_ln4_151_reg_681;
                icmp_ln4_152_reg_686 <= icmp_ln4_152_fu_218_p2;
                icmp_ln4_152_reg_686_pp0_iter1_reg <= icmp_ln4_152_reg_686;
                icmp_ln4_153_reg_691 <= icmp_ln4_153_fu_224_p2;
                icmp_ln4_153_reg_691_pp0_iter1_reg <= icmp_ln4_153_reg_691;
                icmp_ln4_153_reg_691_pp0_iter2_reg <= icmp_ln4_153_reg_691_pp0_iter1_reg;
                icmp_ln4_154_reg_696 <= icmp_ln4_154_fu_230_p2;
                icmp_ln4_154_reg_696_pp0_iter1_reg <= icmp_ln4_154_reg_696;
                icmp_ln4_154_reg_696_pp0_iter2_reg <= icmp_ln4_154_reg_696_pp0_iter1_reg;
                icmp_ln4_155_reg_701 <= icmp_ln4_155_fu_236_p2;
                icmp_ln4_155_reg_701_pp0_iter1_reg <= icmp_ln4_155_reg_701;
                icmp_ln4_155_reg_701_pp0_iter2_reg <= icmp_ln4_155_reg_701_pp0_iter1_reg;
                icmp_ln4_156_reg_706 <= icmp_ln4_156_fu_242_p2;
                icmp_ln4_156_reg_706_pp0_iter1_reg <= icmp_ln4_156_reg_706;
                icmp_ln4_156_reg_706_pp0_iter2_reg <= icmp_ln4_156_reg_706_pp0_iter1_reg;
                icmp_ln4_156_reg_706_pp0_iter3_reg <= icmp_ln4_156_reg_706_pp0_iter2_reg;
                icmp_ln4_reg_629 <= icmp_ln4_fu_164_p2;
                icmp_ln4_reg_629_pp0_iter1_reg <= icmp_ln4_reg_629;
                icmp_ln4_reg_629_pp0_iter2_reg <= icmp_ln4_reg_629_pp0_iter1_reg;
                or_ln120_120_reg_760 <= or_ln120_120_fu_350_p2;
                or_ln120_122_reg_765 <= or_ln120_122_fu_356_p2;
                or_ln120_126_reg_776 <= or_ln120_126_fu_478_p2;
                select_ln120_140_reg_771 <= select_ln120_140_fu_417_p3;
                select_ln120_146_reg_781 <= select_ln120_146_fu_526_p3;
                xor_ln107_66_reg_734 <= xor_ln107_66_fu_272_p2;
                xor_ln107_reg_711 <= xor_ln107_fu_248_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_ce_reg)) then
                ap_return_int_reg <= agg_result_fu_561_p33;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_ce)) then
                x_2_val_int_reg <= x_2_val;
                x_3_val_int_reg <= x_3_val;
                x_4_val_int_reg <= x_4_val;
                x_5_val_int_reg <= x_5_val;
                x_6_val_int_reg <= x_6_val;
                x_9_val_int_reg <= x_9_val;
            end if;
        end if;
    end process;
    agg_result_fu_561_p31 <= "XXXXXXXXXXX";
    agg_result_fu_561_p32 <= 
        select_ln120_146_reg_781 when (or_ln120_127_fu_549_p2(0) = '1') else 
        ap_const_lv4_E;
    and_ln105_130_fu_267_p2 <= (xor_ln107_fu_248_p2 and icmp_ln4_145_reg_645);
    and_ln105_131_fu_277_p2 <= (icmp_ln4_146_reg_651 and and_ln105_fu_253_p2);
    and_ln105_132_fu_302_p2 <= (icmp_ln4_147_reg_657_pp0_iter1_reg and and_ln107_reg_722);
    and_ln105_133_fu_430_p2 <= (icmp_ln4_149_reg_670_pp0_iter2_reg and and_ln107_16_reg_754);
    and_ln105_134_fu_306_p2 <= (icmp_ln4_150_reg_676_pp0_iter1_reg and and_ln105_131_reg_740);
    and_ln105_135_fu_310_p2 <= (xor_ln107_67_fu_297_p2 and icmp_ln4_151_reg_681_pp0_iter1_reg);
    and_ln105_136_fu_315_p2 <= (and_ln105_reg_716 and and_ln105_135_fu_310_p2);
    and_ln105_137_fu_320_p2 <= (icmp_ln4_152_reg_686_pp0_iter1_reg and and_ln105_132_fu_302_p2);
    and_ln105_138_fu_439_p2 <= (and_ln107_reg_722_pp0_iter2_reg and and_ln105_142_fu_434_p2);
    and_ln105_139_fu_448_p2 <= (icmp_ln4_148_reg_663_pp0_iter2_reg and and_ln105_143_fu_444_p2);
    and_ln105_140_fu_453_p2 <= (icmp_ln4_155_reg_701_pp0_iter2_reg and and_ln105_133_fu_430_p2);
    and_ln105_141_fu_544_p2 <= (and_ln107_16_reg_754_pp0_iter3_reg and and_ln105_144_fu_539_p2);
    and_ln105_142_fu_434_p2 <= (xor_ln107_68_fu_425_p2 and icmp_ln4_153_reg_691_pp0_iter2_reg);
    and_ln105_143_fu_444_p2 <= (icmp_ln4_154_reg_696_pp0_iter2_reg and and_ln105_130_reg_728_pp0_iter2_reg);
    and_ln105_144_fu_539_p2 <= (xor_ln107_70_fu_534_p2 and icmp_ln4_156_reg_706_pp0_iter3_reg);
    and_ln105_fu_253_p2 <= (icmp_ln4_reg_629 and icmp_ln4_144_reg_639);
    and_ln107_16_fu_293_p2 <= (xor_ln107_reg_711 and xor_ln107_66_reg_734);
    and_ln107_17_fu_287_p2 <= (xor_ln107_69_fu_282_p2 and and_ln105_130_fu_267_p2);
    and_ln107_fu_262_p2 <= (xor_ln107_65_fu_257_p2 and icmp_ln4_reg_629);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_return_assign_proc : process(agg_result_fu_561_p33, ap_ce_reg, ap_return_int_reg)
    begin
        if ((ap_const_logic_0 = ap_ce_reg)) then 
            ap_return <= ap_return_int_reg;
        elsif ((ap_const_logic_1 = ap_ce_reg)) then 
            ap_return <= agg_result_fu_561_p33;
        else 
            ap_return <= "XXXXXXXXXXX";
        end if; 
    end process;

    icmp_ln4_144_fu_170_p2 <= "1" when (signed(x_9_val_int_reg) < signed(ap_const_lv18_3FF3C)) else "0";
    icmp_ln4_145_fu_176_p2 <= "1" when (signed(x_2_val_int_reg) < signed(ap_const_lv18_11E14)) else "0";
    icmp_ln4_146_fu_182_p2 <= "1" when (signed(x_3_val_int_reg) < signed(ap_const_lv18_CD8D)) else "0";
    icmp_ln4_147_fu_188_p2 <= "1" when (signed(x_9_val_int_reg) < signed(ap_const_lv18_366)) else "0";
    icmp_ln4_148_fu_194_p2 <= "1" when (signed(x_6_val_int_reg) < signed(ap_const_lv18_9480)) else "0";
    icmp_ln4_149_fu_200_p2 <= "1" when (signed(x_3_val_int_reg) < signed(ap_const_lv18_15ACF)) else "0";
    icmp_ln4_150_fu_206_p2 <= "1" when (signed(x_6_val_int_reg) < signed(ap_const_lv18_3C80)) else "0";
    icmp_ln4_151_fu_212_p2 <= "1" when (signed(x_4_val_int_reg) < signed(ap_const_lv18_18B)) else "0";
    icmp_ln4_152_fu_218_p2 <= "1" when (signed(x_5_val_int_reg) < signed(ap_const_lv18_1245)) else "0";
    icmp_ln4_153_fu_224_p2 <= "1" when (signed(x_3_val_int_reg) < signed(ap_const_lv18_13C7C)) else "0";
    icmp_ln4_154_fu_230_p2 <= "1" when (signed(x_6_val_int_reg) < signed(ap_const_lv18_7680)) else "0";
    icmp_ln4_155_fu_236_p2 <= "1" when (signed(x_6_val_int_reg) < signed(ap_const_lv18_C300)) else "0";
    icmp_ln4_156_fu_242_p2 <= "1" when (signed(x_9_val_int_reg) < signed(ap_const_lv18_3FFC4)) else "0";
    icmp_ln4_fu_164_p2 <= "1" when (signed(x_4_val_int_reg) < signed(ap_const_lv18_FA6)) else "0";
    or_ln120_116_fu_330_p2 <= (and_ln107_17_reg_746 or and_ln105_131_reg_740);
    or_ln120_117_fu_334_p2 <= (or_ln120_116_fu_330_p2 or and_ln105_136_fu_315_p2);
    or_ln120_118_fu_340_p2 <= (and_ln107_17_reg_746 or and_ln105_reg_716);
    or_ln120_119_fu_344_p2 <= (or_ln120_118_fu_340_p2 or and_ln105_137_fu_320_p2);
    or_ln120_120_fu_350_p2 <= (or_ln120_118_fu_340_p2 or and_ln105_132_fu_302_p2);
    or_ln120_121_fu_458_p2 <= (or_ln120_120_reg_760 or and_ln105_138_fu_439_p2);
    or_ln120_122_fu_356_p2 <= (icmp_ln4_reg_629_pp0_iter1_reg or and_ln107_17_reg_746);
    or_ln120_123_fu_463_p2 <= (or_ln120_122_reg_765 or and_ln105_139_fu_448_p2);
    or_ln120_124_fu_468_p2 <= (icmp_ln4_reg_629_pp0_iter2_reg or and_ln105_130_reg_728_pp0_iter2_reg);
    or_ln120_125_fu_472_p2 <= (or_ln120_124_fu_468_p2 or and_ln105_140_fu_453_p2);
    or_ln120_126_fu_478_p2 <= (or_ln120_124_fu_468_p2 or and_ln105_133_fu_430_p2);
    or_ln120_127_fu_549_p2 <= (or_ln120_126_reg_776 or and_ln105_141_fu_544_p2);
    or_ln120_128_fu_360_p2 <= (xor_ln107_66_reg_734 or icmp_ln4_reg_629_pp0_iter1_reg);
    or_ln120_129_fu_364_p2 <= (or_ln120_128_fu_360_p2 or icmp_ln4_148_reg_663_pp0_iter1_reg);
    or_ln120_fu_325_p2 <= (and_ln107_17_reg_746 or and_ln105_134_fu_306_p2);
    select_ln120_136_fu_381_p3 <= 
        select_ln120_fu_373_p3 when (or_ln120_116_fu_330_p2(0) = '1') else 
        ap_const_lv2_3;
    select_ln120_137_fu_393_p3 <= 
        zext_ln120_23_fu_389_p1 when (or_ln120_117_fu_334_p2(0) = '1') else 
        ap_const_lv3_4;
    select_ln120_138_fu_401_p3 <= 
        select_ln120_137_fu_393_p3 when (or_ln120_118_fu_340_p2(0) = '1') else 
        ap_const_lv3_5;
    select_ln120_139_fu_409_p3 <= 
        select_ln120_138_fu_401_p3 when (or_ln120_119_fu_344_p2(0) = '1') else 
        ap_const_lv3_6;
    select_ln120_140_fu_417_p3 <= 
        select_ln120_139_fu_409_p3 when (or_ln120_120_fu_350_p2(0) = '1') else 
        ap_const_lv3_7;
    select_ln120_141_fu_487_p3 <= 
        zext_ln120_24_fu_484_p1 when (or_ln120_121_fu_458_p2(0) = '1') else 
        ap_const_lv4_8;
    select_ln120_142_fu_495_p3 <= 
        select_ln120_141_fu_487_p3 when (or_ln120_122_reg_765(0) = '1') else 
        ap_const_lv4_9;
    select_ln120_143_fu_502_p3 <= 
        select_ln120_142_fu_495_p3 when (or_ln120_123_fu_463_p2(0) = '1') else 
        ap_const_lv4_A;
    select_ln120_144_fu_510_p3 <= 
        select_ln120_143_fu_502_p3 when (or_ln120_124_fu_468_p2(0) = '1') else 
        ap_const_lv4_B;
    select_ln120_145_fu_518_p3 <= 
        select_ln120_144_fu_510_p3 when (or_ln120_125_fu_472_p2(0) = '1') else 
        ap_const_lv4_C;
    select_ln120_146_fu_526_p3 <= 
        select_ln120_145_fu_518_p3 when (or_ln120_126_fu_478_p2(0) = '1') else 
        ap_const_lv4_D;
    select_ln120_fu_373_p3 <= 
        zext_ln120_fu_369_p1 when (or_ln120_fu_325_p2(0) = '1') else 
        ap_const_lv2_2;
    xor_ln107_65_fu_257_p2 <= (icmp_ln4_144_reg_639 xor ap_const_lv1_1);
    xor_ln107_66_fu_272_p2 <= (icmp_ln4_145_reg_645 xor ap_const_lv1_1);
    xor_ln107_67_fu_297_p2 <= (icmp_ln4_146_reg_651_pp0_iter1_reg xor ap_const_lv1_1);
    xor_ln107_68_fu_425_p2 <= (icmp_ln4_147_reg_657_pp0_iter2_reg xor ap_const_lv1_1);
    xor_ln107_69_fu_282_p2 <= (icmp_ln4_148_reg_663 xor ap_const_lv1_1);
    xor_ln107_70_fu_534_p2 <= (icmp_ln4_149_reg_670_pp0_iter3_reg xor ap_const_lv1_1);
    xor_ln107_fu_248_p2 <= (icmp_ln4_reg_629 xor ap_const_lv1_1);
    zext_ln120_23_fu_389_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln120_136_fu_381_p3),3));
    zext_ln120_24_fu_484_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln120_140_reg_771),4));
    zext_ln120_fu_369_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln120_129_fu_364_p2),2));
end behav;
